<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on weakptr's 笔记</title><link>https://nnnewb.github.io/blog/categories/go/</link><description>Recent content in go on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 21 Mar 2023 17:21:39 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/blog/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows下go拉取http模块</title><link>https://nnnewb.github.io/blog/p/windows%E4%B8%8Bgo%E6%8B%89%E5%8F%96http%E6%A8%A1%E5%9D%97/</link><pubDate>Tue, 21 Mar 2023 17:21:39 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/windows%E4%B8%8Bgo%E6%8B%89%E5%8F%96http%E6%A8%A1%E5%9D%97/</guid><description>&lt;h2 id="现象">现象&lt;/h2>
&lt;p>内网搭建的 gitlab 没有开启 https，只有 http 服务。允许通过 8022 端口 SSH 协议 clone 或者 80 HTTP 协议。&lt;/p>
&lt;p>但是 go 默认不支持（不然就没现在这么多壁画了）。&lt;/p>
&lt;h2 id="方法">方法&lt;/h2>
&lt;h3 id="1-编辑-sshconfig">1. 编辑 ~/.ssh/config&lt;/h3>
&lt;p>先 &lt;code>gvim ~/.ssh/config&lt;/code> 打开 ssh 配置，添加一个 gitlab 的 ssh 配置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Host &amp;lt;gitlab的ip&amp;gt;
HostName &amp;lt;gitlab的ip&amp;gt;
Port &amp;lt;gitlab的ssh端口&amp;gt;
User git
IdentityFile &amp;lt;你的ssh私钥路径&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这一步的目的是万一你的端口不是22的话，后续git配置还能读ssh配置选择正确的端口。&lt;/p>
&lt;h3 id="2-编辑-gitconfig">2. 编辑 ~/.gitconfig&lt;/h3>
&lt;p>这一步的目的是让配置 &lt;code>GOPRIVATE&lt;/code>、&lt;code>GOINSECURE&lt;/code> 之后 go 走 http 协议下的时候替换成 ssh 协议。&lt;/p>
&lt;p>直接用 http 也可以但是需要在 &lt;code>go mod download&lt;/code> 时输入账密登录。我的 windows git 客户端会报 &lt;code>terminal prompts disabled&lt;/code> （vscode+remote linux就没事，但windows下各种毛病），所以配成 ssh 之后就免密了，Windows 下少一点麻烦。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="k">[url &amp;#34;git@&amp;lt;gitlab的ip&amp;gt;:&amp;#34;]&lt;/span>
&lt;span class="na">insteadOf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">http://&amp;lt;gitlab的ip&amp;gt;/&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意 &lt;code>url=&lt;/code>后面的&lt;code>:&lt;/code>别漏了，这样才能拼出 &lt;code>git@github.com:nnnew/battery&lt;/code> 这样的合法地址。&lt;/p>
&lt;h3 id="3-设置-go-env">3. 设置 go env&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">go env -w &lt;span class="nv">GOPRIVATE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;gitlab的ip&amp;gt;&amp;#34;&lt;/span>
go env -w &lt;span class="nv">GOINSECURE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;gitlab的ip&amp;gt;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>设置 &lt;code>GOPRIVATE&lt;/code> 的目的是让 go 从私有 git 仓库拉代码。&lt;/p>
&lt;p>设置 &lt;code>GOINSECURE&lt;/code> 的目的是让 go 用 http 而不是 https 协议去拉代码。&lt;/p>
&lt;p>理论上来说，也可以不设置 &lt;code>GOINSECURE&lt;/code>，但是 &lt;code>~/.gitconfig&lt;/code> 里配置 &lt;code>insteadOf&lt;/code> 的时候要注意写 https 而不是 http，可以自己试试。&lt;/p>
&lt;h3 id="4-拉代码">4. 拉代码&lt;/h3>
&lt;p>试试 &lt;code>git clone&lt;/code> 一个私有仓库（http），如果没提示输入账密就成功那就ok了。要是不行就自己搜索下。&lt;/p>
&lt;p>理论上来说接下来 &lt;code>go mod download&lt;/code> 就不会有问题了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>重新配了一遍发现还是 Windows 屁事多。&lt;/p></description></item><item><title>评论系统测试 2022年8月22日</title><link>https://nnnewb.github.io/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/</link><pubDate>Mon, 22 Aug 2022 17:50:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/</guid><description>&lt;h2 id="概述">概述&lt;/h2>
&lt;p>当前测试的是 &lt;em>comment management system v0.1&lt;/em> 简称 cms 。代码暂未开源。&lt;/p>
&lt;p>前后端分离架构，前端采用 vue3 + dayjs 没别的库。后端 gin + gorm，ddd 方式设计，RESTful API。&lt;/p>
&lt;h2 id="功能">功能&lt;/h2>
&lt;h3 id="评论和回复">评论和回复&lt;/h3>
&lt;p>类贴吧风格但没有账号所以也没有显示回复对象是谁。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822174752471.png"
width="1329"
height="405"
srcset="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822174752471_hu32d13e72dd7692a053a5cb4f17324924_27765_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822174752471_hu32d13e72dd7692a053a5cb4f17324924_27765_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220822174752471"
class="gallery-image"
data-flex-grow="328"
data-flex-basis="787px"
>&lt;/p>
&lt;h3 id="表情回应">表情回应&lt;/h3>
&lt;p>仿 github 的 reaction 功能。本来想设计成赞和踩但想想表情回应其实更灵活一些。&lt;/p>
&lt;p>因为匿名回应的缘故也没限制回应频率，想统计肯定是不准确的。就当娱乐吧。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175048659.png"
width="1370"
height="346"
srcset="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175048659_hu314f90d252a7203947e7e4a951c1d227_31518_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175048659_hu314f90d252a7203947e7e4a951c1d227_31518_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220822175048659"
class="gallery-image"
data-flex-grow="395"
data-flex-basis="950px"
>&lt;/p>
&lt;h3 id="头像">头像&lt;/h3>
&lt;p>直接用 gravatar 功能。邮箱栏填写注册过 gravatar 的邮箱就能显示了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175058725.png"
width="303"
height="131"
srcset="https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175058725_huad1bebee6221cb91debc47bc8b6f493f_7422_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95-2022%E5%B9%B48%E6%9C%8822%E6%97%A5/image-20220822175058725_huad1bebee6221cb91debc47bc8b6f493f_7422_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220822175058725"
class="gallery-image"
data-flex-grow="231"
data-flex-basis="555px"
>&lt;/p>
&lt;h2 id="安全">安全&lt;/h2>
&lt;p>没有做什么保护。&lt;/p>
&lt;p>怀疑过了一遍反代 CORS 配置可能有问题导致被盗用。xss 和 SQL 注入存在的可能性不大，没有使用不安全的 SQL 拼接或者赋值 innerHTML 什么的。如果存在的话可能是我误用了 vue 或 gorm 的某些函数。&lt;/p>
&lt;p>暂时先这样。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>别压测，别的可以随意点玩。&lt;/p></description></item></channel></rss>