<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>slackware on weakptr's 笔记</title><link>https://nnnewb.github.io/blog/tags/slackware/</link><description>Recent content in slackware on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 04 Jan 2021 15:00:20 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/blog/tags/slackware/index.xml" rel="self" type="application/rss+xml"/><item><title>在 slackware 上安装 neovim</title><link>https://nnnewb.github.io/blog/p/%E5%9C%A8-slackware-%E4%B8%8A%E5%AE%89%E8%A3%85-neovim/</link><pubDate>Mon, 04 Jan 2021 15:00:20 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/%E5%9C%A8-slackware-%E4%B8%8A%E5%AE%89%E8%A3%85-neovim/</guid><description>&lt;p>最近在虚拟机里折腾 slackware ，发现 slackware 14.2 的 vim 版本还停留在 7.4 ，于是考虑还是装个 neovim 算了。毕竟升级 vim8 还得自己写 SlackBuild，万一和原本的 vim 7.4 冲突就更头疼了。&lt;/p>
&lt;!-- more -->
&lt;h2 id="0x01-确定依赖">0x01 确定依赖&lt;/h2>
&lt;p>到处翻 slackbuild 之间依赖关系的时候发现 sbopkg 提供了一个解决依赖的脚本，&lt;code>sqg&lt;/code>。&lt;/p>
&lt;p>于是简单点，拿 &lt;code>sqg -p neovim&lt;/code> 生成 neovim 的安装队列 neovim.sqf 文件。&lt;/p>
&lt;p>sqg 和 sbopkg 一起提供了，所以不用另外安装。&lt;/p>
&lt;h2 id="0x02-安装">0x02 安装&lt;/h2>
&lt;p>一条命令：&lt;code>sudo sbopkg -i neovim.sqf&lt;/code>&lt;/p>
&lt;p>然后等完成吧。&lt;/p>
&lt;h2 id="0x03-可选依赖">0x03 可选依赖&lt;/h2>
&lt;p>上述步骤完成后还只是装好基本的 neovim ，但 python2/python3/ruby/nodejs 支持都是没有的。&lt;/p>
&lt;p>打开 nvim，输入命令 &lt;code>:checkhealth&lt;/code> 后会显示缺少支持，同时也提供了解决办法：&lt;code>pip install pynvim&lt;/code>。&lt;/p>
&lt;p>然后就是另一个坑：pip 也不在默认的 python2 包里。于是为了解决这个问题，还得先装上 pip : &lt;code>sudo sbopkg -i python-pip&lt;/code>&lt;/p>
&lt;p>然后执行 &lt;code>sudo pip install pynvim&lt;/code>，此时 python2 支持已经装好。&lt;/p>
&lt;p>不过众所周知 python2 的生命周期已经结束了，python3 才是正道。所以还得装一下 python3 : &lt;code>sudo sbopkg -i python3&lt;/code>&lt;/p>
&lt;p>slackbuild 的 python3 包自带了 pip 所以一切安好。完成后直接装 pynvim 即可: &lt;code>sudo pip3 install pynvim&lt;/code>&lt;/p>
&lt;p>nodejs 和 ruby 不是我的工作语言就不管了。&lt;/p>
&lt;h2 id="0x04-使用-vim-配置">0x04 使用 vim 配置&lt;/h2>
&lt;p>另一个问题是我的 vimrc 配置是针对 vim8 写的，neovim 不认 .vimrc 和 .vim 。这个问题网上有很多解决办法，我复制粘贴下。&lt;/p>
&lt;blockquote>
&lt;p>Transitioning from Vim &lt;em>nvim-from-vim&lt;/em>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>To start the transition, create your |init.vim| (user config) file:&lt;/p>
&lt;p>:call mkdir(stdpath(&amp;lsquo;config&amp;rsquo;), &amp;lsquo;p&amp;rsquo;)
:exe &amp;rsquo;edit &amp;lsquo;.stdpath(&amp;lsquo;config&amp;rsquo;).&amp;rsquo;/init.vim&amp;rsquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add these contents to the file:&lt;/p>
&lt;p>set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &amp;amp;packpath = &amp;amp;runtimepath
source ~/.vimrc&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart Nvim, your existing Vim config will be loaded.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>完事即可认出 vim 配置。&lt;/p>
&lt;h2 id="0x05-happy-hacking-">0x05 Happy Hacking !&lt;/h2>
&lt;p>&lt;em>完&lt;/em>&lt;/p></description></item><item><title>slackware 和虚拟机基本配置</title><link>https://nnnewb.github.io/blog/p/slackware-%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 30 Dec 2020 11:11:56 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/slackware-%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>slackware 是一个非常有极客味的 Linux 发行版，因为官方维护的包不多，基本靠 slackbuilds 续命。&lt;/p>
&lt;p>slackware 的一个特色是包管理系统不处理依赖关系，这一点劝退不少人。&lt;/p>
&lt;p>实际上，虽然我不是很赞同 &lt;a class="link" href="https://docs.slackware.com/start?id=slackware:package_and_dependency_management_shouldn_t_put_you_off_slackware" target="_blank" rel="noopener"
>这个观点&lt;/a> ，不过并不妨碍 slackware 成为可玩性相对高的 Linux 发行版之一（另外几个可玩性不错的发行版包括 Arch Linux 和 Gentoo）。&lt;/p>
&lt;p>这篇博文实际上就是安利下 slackware 并且简要介绍下怎么在虚拟机里搭建个基本环境来体验游玩。&lt;/p>
&lt;!-- more -->
&lt;h2 id="0x01-安装">0x01 安装&lt;/h2>
&lt;p>安装的参考文档太多了，个人认为主要的难点在分区和引导。毕竟不像其他更流行的发行版的 GUI 安装引导，对 fdisk 和 parted 这些工具不熟悉、对操作系统引导启动的一些基本概念、原理不了解的人很容易犯下错误而不自知。&lt;/p>
&lt;p>这里提供一篇之前在贴吧写的 &lt;a class="link" href="https://tieba.baidu.com/p/4863103375" target="_blank" rel="noopener"
>安装教程&lt;/a> ，不做赘述了。&lt;/p>
&lt;h2 id="0x02-桌面">0x02 桌面&lt;/h2>
&lt;p>对习惯了装完就有桌面的用户来说，安装完 slackware 之后遇到的第一个问题就是怎么进入桌面——甚至会问怎么登陆。&lt;/p>
&lt;p>这里就挂一张 gif 好了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/image/slackware-vm-setup/01.gif"
loading="lazy"
alt="01"
>&lt;/p>
&lt;p>假设没手贱在安装的时候把 x/kde/xfce 之类的软件包组给去掉的话，就不会有什么问题。&lt;/p>
&lt;p>如果需要自动进入桌面，需要手动修改 &lt;code>/etc/inittab&lt;/code> 文件，把默认的 runlevel 修改为 4 。&lt;/p>
&lt;p>具体怎么改，看 gif 。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/image/slackware-vm-setup/02.gif"
loading="lazy"
alt="02"
>&lt;/p>
&lt;h2 id="0x03-slackpkg-包管理">0x03 slackpkg 包管理&lt;/h2>
&lt;p>如果用过 ubuntu ，那么下一个问题可能就是 &amp;ldquo;怎么没有 apt-get 命令？&amp;rdquo; 或者 &amp;ldquo;slackware 用什么命令安装软件？&amp;rdquo;&lt;/p>
&lt;p>答案是有好几个相关命令。&lt;/p>
&lt;ul>
&lt;li>installpkg&lt;/li>
&lt;li>removepkg&lt;/li>
&lt;li>upgradepkg&lt;/li>
&lt;li>makepkg&lt;/li>
&lt;li>explodepkg&lt;/li>
&lt;li>rpm2targz&lt;/li>
&lt;/ul>
&lt;p>大部分命令顾名思义，也不需要额外说明。如果说和 apt 或者 pacman 类似的一个统一的包管理器的话，那就是 slackpkg 。&lt;/p>
&lt;p>使用 slackpkg 之前，需要手动修改 /etc/slackpkg/mirrors 文件，选择一个网络状况比较好的软件源地址，把行开头的 # 号去掉。&lt;/p>
&lt;p>完事之后用命令 &lt;code>slackpkg update&lt;/code> 更新一下本地索引，就可以正常用了。&lt;/p>
&lt;p>常用的命令包括&lt;/p>
&lt;ul>
&lt;li>slackpkg search&lt;/li>
&lt;li>slackpkg file-search&lt;/li>
&lt;li>slackpkg install&lt;/li>
&lt;li>slackpkg install-new&lt;/li>
&lt;li>slackpkg upgrade&lt;/li>
&lt;li>slackpkg upgrade-all&lt;/li>
&lt;/ul>
&lt;p>具体不细说了，看参考链接，或者自己看看 &lt;code>man slackpkg&lt;/code> 或者 &lt;code>slackpkg help&lt;/code>&lt;/p>
&lt;p>此外还有个不常用的，和安装时的 &lt;code>setup&lt;/code> 风格比较类似的工具，&lt;code>pkgtool&lt;/code>。具体可以自己看看命令。&lt;/p>
&lt;h2 id="0x04-slackbuilds">0x04 SlackBuilds&lt;/h2>
&lt;p>用过 Arch Linux 的 AUR 的用户对这种第三方维护的软件包会比较熟悉， SlackBuilds 对这些用户来说就是另一个 AUR 而已。&lt;/p>
&lt;p>不同之处在于，SlackBuilds 需要手动下载脚本和源码，然后自己看 README 再运行编译。&lt;/p>
&lt;p>当然这不是说 SlackBuilds 没有类似 yaourt 或者 yay 之类的自动工具，你可以试试 sbopkg 。&lt;/p>
&lt;p>这里给个简单的例子，用 sbopkg 安装 fbterm 。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/image/slackware-vm-setup/03.gif"
loading="lazy"
alt="03.gif"
>&lt;/p>
&lt;h2 id="0x05-编写-slackbuilds">0x05 编写 SlackBuilds&lt;/h2>
&lt;p>讲道理，slackware 常用的软件太少，基本全靠 slackbuilds 撑场面。如果 SlackBuilds 上也没有呢？&lt;/p>
&lt;p>那只能自己写吧。&lt;/p>
&lt;p>对于熟悉 bash 脚本的用户来说这不是什么难事。这篇 &lt;a class="link" href="https://slackwiki.com/Writing_A_SlackBuild_Script" target="_blank" rel="noopener"
>HOWTO 文章&lt;/a> 很好地说明了怎么写一个 SlackBuilds 脚本。&lt;/p>
&lt;h2 id="0x06-参与社区">0x06 参与社区&lt;/h2>
&lt;p>slackware 中文社区太小了，或者说根本不存在。&lt;/p>
&lt;p>能聊几句的基本只有贴吧（实际上现在也找不到人了）或者 GitHub 上（slackwarecn 社区也不活跃）。&lt;/p>
&lt;p>如果对 slackware 感兴趣，可以玩一玩，写几个常用软件的 SlackBuilds 脚本什么的。&lt;/p>
&lt;p>就这样吧。&lt;/p></description></item></channel></rss>