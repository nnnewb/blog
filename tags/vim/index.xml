<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on weakptr's 笔记</title><link>https://nnnewb.github.io/tags/vim/</link><description>Recent content in vim on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 25 Dec 2021 10:37:00 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>在raspbian上手动编译vim8.2</title><link>https://nnnewb.github.io/p/build-vim8.2-manually-on-raspbian/</link><pubDate>Sat, 25 Dec 2021 10:37:00 +0800</pubDate><guid>https://nnnewb.github.io/p/build-vim8.2-manually-on-raspbian/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>raspbian上自带的vim版本还是低了点，像是&lt;code>coc.nvim&lt;/code>之类的插件弹警告就搞得很烦。我寻思自己编译一个吧。&lt;/p>
&lt;h2 id="0x01-下载源码">0x01 下载源码&lt;/h2>
&lt;p>从&lt;a class="link" href="https://www.vim.org/download.php" target="_blank" rel="noopener"
>vim官网&lt;/a>下载源码（或者可以从GitHub下，出于网络考虑还是直接从ftp下了），下完直接&lt;code>scp&lt;/code>传到树莓派上，&lt;code>tar xf&lt;/code>解压好准备开整。&lt;/p>
&lt;h2 id="0x02-配置">0x02 配置&lt;/h2>
&lt;p>惯例先看看文档，&lt;code>README.md&lt;/code>里指出源码安装去看&lt;code>src/INSTALL&lt;/code>，所以跟着去看。&lt;/p>
&lt;p>在 Unix 一节中提到直接&lt;code>make&lt;/code>+&lt;code>make install&lt;/code>就完事，但我要的不是编译个默认版本的vim，毕竟还有插件会用到&lt;code>vim&lt;/code>的 &lt;code>Pyhon&lt;/code>/&lt;code>Python3&lt;/code> 特性，比如&lt;code>ycm&lt;/code>。&lt;/p>
&lt;p>继续往下翻会看到编译依赖。&lt;/p>
&lt;pre>&lt;code>% sudo apt install git
% sudo apt install make
% sudo apt install clang
% sudo apt install libtool-bin
&lt;/code>&lt;/pre>
&lt;p>跟着把依赖装好，clang估计是可选项，gcc肯定是能编译vim的。不过以防万一反正全装上。&lt;/p>
&lt;p>后面终于看到了Python3添加支持的方式。&lt;/p>
&lt;pre>&lt;code>Add Python 3 support:
% sudo apt install libpython3-dev
Uncomment this line in Makefile:
&amp;quot;CONF_OPT_PYTHON3 = --enable-python3interp&amp;quot;
% make reconfig
&lt;/code>&lt;/pre>
&lt;p>虽然说文档让取消注释，但是我不想改东西。所以记一下&lt;code>--enable-python3interp&lt;/code>，等会儿加入&lt;code>configure&lt;/code>的参数。&lt;/p>
&lt;p>后面又有个关于gui的，因为不使用gui，所以也记一下。&lt;/p>
&lt;blockquote>
&lt;p>Unix: COMPILING WITH/WITHOUT GUI&lt;/p>
&lt;p>NOTE: This is incomplete, look in Makefile for more info.&lt;/p>
&lt;p>These configure arguments can be used to select which GUI to use:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">--enable-gui=gtk or: gtk2, motif, athena or auto
--disable-gtk-check
--disable-motif-check
--disable-athena-check
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This configure argument can be used to disable the GUI, even when the necessary
files are found:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">--disable-gui
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;p>到时候&lt;code>--disable-gui&lt;/code>可以省一点编译时间，虽然本来也没多少编译时间。树莓派性能不是很好，tf卡读写寿命也有限，省一点是一点咯。&lt;/p>
&lt;p>还有个&lt;code>--with-features=big&lt;/code>，实际参考&lt;a class="link" href="http://www.drchip.org/astronaut/vim/vimfeat.html" target="_blank" rel="noopener"
>vim&amp;rsquo;s versions and features&lt;/a>，还是用&lt;code>huge&lt;/code>，因为看起来功能比较全。&lt;/p>
&lt;p>再加上参数&lt;code>--enable-multibyte&lt;/code>和&lt;code>--enable-cscope&lt;/code>就差不多了。再加上必要的一些依赖库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt install -y libpython-dev libpython3-dev libperl-dev libncurses-dev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="0x03-编译">0x03 编译&lt;/h2>
&lt;p>按照&lt;code>autoconf&lt;/code>这套编译系统的常规套路，先运行&lt;code>./configure&lt;/code>，带上之前考虑好的参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">./configure &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --prefix&lt;span class="o">=&lt;/span>/usr/local/ &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --with-features&lt;span class="o">=&lt;/span>huge &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --enable-multibyte &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --disable-gui &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --enable-pythoninterp &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --enable-python3interp &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --enable-perlinterp &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --enable-cscope
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">make
sudo make install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等编译完成。&lt;/p>
&lt;h2 id="0x04-设置默认编辑器">0x04 设置默认编辑器&lt;/h2>
&lt;p>用&lt;code>update-alternatives&lt;/code>配置默认编辑器，或者在&lt;code>.zshrc&lt;/code>里加上&lt;code>alias vim=/usr/local/bin/vim&lt;/code>也是可以的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">sudo update-alternatives --install /usr/bin/editor editor /usr/local/bin/vim &lt;span class="m">1&lt;/span>
sudo update-alternatives --set editor /usr/local/bin/vim
sudo update-alternatives --install /usr/bin/vi vi /usr/local/bin/vim &lt;span class="m">1&lt;/span>
sudo update-alternatives --set vi /usr/local/bin/vim
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>vim的编译这么简单应该把功劳算到良好的架构上，功能开关这种东西是要架构清晰地给组件之间划出边界的。&lt;/p>
&lt;p>很多杂鱼公司根本不考虑系统维护，所谓的 &lt;strong>创造价值&lt;/strong> 就是以最快的速度 &lt;strong>应付需求&lt;/strong> ，想起几年前的自己还真的是天真，以为软件从业起码是有点基本的素养的，起码工程能力是有的。现在我的想法变了，软件从业不是有手就行？产品最想要的就是直接把别家的软件 &lt;em>copy&amp;amp;paste&lt;/em> 成自己的，我寻思做软件键盘上磨损最快的就是 &lt;code>ctrl&lt;/code> &lt;code>c&lt;/code> &lt;code>v&lt;/code>这三个键了。&lt;/p>
&lt;p>产品嘛。什么工程性？什么可维护？那跟我有什么关系，反正改需求的dead line是码农的，修bug是码农修，我产品设计要与时俱进，要紧随市场，要服务客户，你就是个写代码的，这也不做那也不做雇你来干什么？&lt;/p>
&lt;p>平常心平常心，扯远了。&lt;/p>
&lt;p>总之，vim，好软件。顺便记得关注下乌干达儿童生存状况（不扯政治地说，vim自称慈善软件(charityware)还是有点东西的，再说下去鲁迅先生就要出来赶苍蝇了）。&lt;/p></description></item><item><title>在 slackware 上安装 neovim</title><link>https://nnnewb.github.io/p/%E5%9C%A8-slackware-%E4%B8%8A%E5%AE%89%E8%A3%85-neovim/</link><pubDate>Mon, 04 Jan 2021 15:00:20 +0800</pubDate><guid>https://nnnewb.github.io/p/%E5%9C%A8-slackware-%E4%B8%8A%E5%AE%89%E8%A3%85-neovim/</guid><description>&lt;p>最近在虚拟机里折腾 slackware ，发现 slackware 14.2 的 vim 版本还停留在 7.4 ，于是考虑还是装个 neovim 算了。毕竟升级 vim8 还得自己写 SlackBuild，万一和原本的 vim 7.4 冲突就更头疼了。&lt;/p>
&lt;!-- more -->
&lt;h2 id="0x01-确定依赖">0x01 确定依赖&lt;/h2>
&lt;p>到处翻 slackbuild 之间依赖关系的时候发现 sbopkg 提供了一个解决依赖的脚本，&lt;code>sqg&lt;/code>。&lt;/p>
&lt;p>于是简单点，拿 &lt;code>sqg -p neovim&lt;/code> 生成 neovim 的安装队列 neovim.sqf 文件。&lt;/p>
&lt;p>sqg 和 sbopkg 一起提供了，所以不用另外安装。&lt;/p>
&lt;h2 id="0x02-安装">0x02 安装&lt;/h2>
&lt;p>一条命令：&lt;code>sudo sbopkg -i neovim.sqf&lt;/code>&lt;/p>
&lt;p>然后等完成吧。&lt;/p>
&lt;h2 id="0x03-可选依赖">0x03 可选依赖&lt;/h2>
&lt;p>上述步骤完成后还只是装好基本的 neovim ，但 python2/python3/ruby/nodejs 支持都是没有的。&lt;/p>
&lt;p>打开 nvim，输入命令 &lt;code>:checkhealth&lt;/code> 后会显示缺少支持，同时也提供了解决办法：&lt;code>pip install pynvim&lt;/code>。&lt;/p>
&lt;p>然后就是另一个坑：pip 也不在默认的 python2 包里。于是为了解决这个问题，还得先装上 pip : &lt;code>sudo sbopkg -i python-pip&lt;/code>&lt;/p>
&lt;p>然后执行 &lt;code>sudo pip install pynvim&lt;/code>，此时 python2 支持已经装好。&lt;/p>
&lt;p>不过众所周知 python2 的生命周期已经结束了，python3 才是正道。所以还得装一下 python3 : &lt;code>sudo sbopkg -i python3&lt;/code>&lt;/p>
&lt;p>slackbuild 的 python3 包自带了 pip 所以一切安好。完成后直接装 pynvim 即可: &lt;code>sudo pip3 install pynvim&lt;/code>&lt;/p>
&lt;p>nodejs 和 ruby 不是我的工作语言就不管了。&lt;/p>
&lt;h2 id="0x04-使用-vim-配置">0x04 使用 vim 配置&lt;/h2>
&lt;p>另一个问题是我的 vimrc 配置是针对 vim8 写的，neovim 不认 .vimrc 和 .vim 。这个问题网上有很多解决办法，我复制粘贴下。&lt;/p>
&lt;blockquote>
&lt;p>Transitioning from Vim &lt;em>nvim-from-vim&lt;/em>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>To start the transition, create your |init.vim| (user config) file:&lt;/p>
&lt;p>:call mkdir(stdpath(&amp;lsquo;config&amp;rsquo;), &amp;lsquo;p&amp;rsquo;)
:exe &amp;lsquo;edit &amp;lsquo;.stdpath(&amp;lsquo;config&amp;rsquo;).'/init.vim&amp;rsquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add these contents to the file:&lt;/p>
&lt;p>set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &amp;amp;packpath = &amp;amp;runtimepath
source ~/.vimrc&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart Nvim, your existing Vim config will be loaded.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>完事即可认出 vim 配置。&lt;/p>
&lt;h2 id="0x05-happy-hacking-">0x05 Happy Hacking !&lt;/h2>
&lt;p>&lt;em>完&lt;/em>&lt;/p></description></item></channel></rss>