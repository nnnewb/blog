<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>network on weakptr's 笔记</title><link>https://nnnewb.github.io/blog/tags/network/</link><description>Recent content in network on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 16 Mar 2023 23:36:25 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/blog/tags/network/index.xml" rel="self" type="application/rss+xml"/><item><title>802和以太网协议概览</title><link>https://nnnewb.github.io/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/</link><pubDate>Thu, 16 Mar 2023 23:36:25 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>目前的工作内容除了后端增删改查外多了一些比较有意思的内容，主要是网络方面。搞了几个月，感觉有学到点东西。就当是整理自己的知识体系，后面准备写一系列笔记，关于 Linux/Windows 网络相关的东西，从运维到开发各方面吧。&lt;/p>
&lt;h2 id="数据链路层协议">数据链路层协议&lt;/h2>
&lt;h3 id="一些术语">一些术语&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>术语&lt;/th>
&lt;th>解读&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>MAC&lt;/td>
&lt;td>Media Access Control addressing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FCS&lt;/td>
&lt;td>Frame Check Sequence (CRC)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CRC&lt;/td>
&lt;td>Cyclic Redundancy Check&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LPDU&lt;/td>
&lt;td>An LLC frame is called LLC Protocol Data Unit (LPDU)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DIX&lt;/td>
&lt;td>Digital Equipment Corporation, Intel and Xerox&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ethernet-ii">Ethernet II&lt;/h3>
&lt;p>区别于 IEEE 802.3 标准集里的以太网协议，Ethernet II 也称 DIX ethernet ，最初由迪吉多（Digital Equipment Corporation）、因特尔（Intel）、和施乐公司（Xerox）为主要参与者制定。和 IEEE 802.3 主要差别在于以太网帧头部的 Ether Type 字段的两个字节如何释义。Ethernet II 解释为 Ether Type，而 IEEE 802.3 解释为 Length 。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_Type_II_Frame_format.svg.png"
width="2560"
height="452"
srcset="https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_Type_II_Frame_format.svg_hua268d0ec98fc6c750f48eea94e409f02_88313_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_Type_II_Frame_format.svg_hua268d0ec98fc6c750f48eea94e409f02_88313_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Ethernet II Frame"
class="gallery-image"
data-flex-grow="566"
data-flex-basis="1359px"
>&lt;/p>
&lt;p>另外除了上面同位置字段的释义差别，还有就是在 Ethernet II 格式中 payload 部分的开头，IEEE 802.3 加入了 802.2 LLC 头。&lt;/p>
&lt;h3 id="8023-以太网协议">802.3 以太网协议&lt;/h3>
&lt;p>802.3 以太网帧格式比 Ethernet 2 更复杂一点。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/802.3%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%B8%A7%E6%A0%BC%E5%BC%8F.drawio.png"
loading="lazy"
alt="802.3以太网帧格式"
>&lt;/p>
&lt;p>帧头部分除 LENGTH/Ether Type 不同，都和 Ethernet II 没区别，主要关注 LLC 和 SNAP 这两部分。&lt;/p>
&lt;h4 id="8022-llc----logical-link-control">802.2 LLC - Logical Link Control&lt;/h4>
&lt;p>802.2 LLC 直译过来就是逻辑链路控制。参考 &lt;a class="link" href="https://www.cisco.com/c/en/us/support/docs/ibm-technologies/logical-link-control-llc/12247-45.html" target="_blank" rel="noopener"
>Understanding Logic Link Control - Cisco&lt;/a> 这篇文章。历史上，IBM 最初把 LLC 设计成 IBM 令牌环网络的一个子层。&lt;/p>
&lt;p>LLC如前面图中所示分为 &lt;code>DSAP&lt;/code>（Destination Service Access Point）、&lt;code>SSAP&lt;/code>（Source Service Access Point）和&lt;code>CNTL&lt;/code>（Control）三个字段。&lt;code>DSAP&lt;/code>和&lt;code>SSAP&lt;/code>表示的是创建消息的网络层实体的逻辑地址，具体每个位怎么定义参考前面的链接。一般承载 IP 报文的 LPDU 里 &lt;code>DSAP&lt;/code> 和 &lt;code>SSAP&lt;/code> 都定义为 &lt;code>0xAA&lt;/code> ，&lt;code>CNTL&lt;/code> 则定义为 &lt;code>03&lt;/code> （参考 《TCP/IP 详解卷一：协议》）。&lt;/p>
&lt;p>平时不怎么会折腾这个字段，除非很深度玩 L2 设备或协议或者需要解析或者手写 Ethernet 帧的时候可能会需要注意下。目前没这需求，现学现卖即可。&lt;/p>
&lt;h4 id="8022-snap---sub-network-access-protocol">802.2 SNAP - Sub-Network Access Protocol&lt;/h4>
&lt;p>802.2 SNAP 替代了 Ethernet II 帧格式里的 Ether Type 字段，加了个比较见鬼的 &lt;code>ORG CODE&lt;/code> ，于是又变成了历史遗留问题。真就觉得自己公司千秋万代了呗。&lt;/p>
&lt;p>&lt;code>ORG CODE&lt;/code> 参考 &lt;a class="link" href="https://www.rfc-editor.org/rfc/rfc1340" target="_blank" rel="noopener"
>RFC 1340 - ASSIGNED NUMBERS&lt;/a> 。一般就置 0 。&lt;code>TYPE&lt;/code> 字段则和 Ethernet II 的 Ether Type 字段取值一样。取值可以参考 &lt;a class="link" href="https://en.wikipedia.org/wiki/EtherType" target="_blank" rel="noopener"
>Ether Type - Wikipedia&lt;/a> ，比如 IPv4 是 &lt;code>0x0800&lt;/code>，ARP 是 &lt;code>0x0806&lt;/code>，IPv6 是 &lt;code>0x86DD&lt;/code> 。&lt;/p>
&lt;h4 id="8021q-vlan协议">802.1Q VLAN协议&lt;/h4>
&lt;p>802.1Q 协议和 802.3 以太网帧区别在于 Ether Type/Length 和 Source MAC 之间加入了一个 4 字节的 802.1Q Header 。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_802.1Q_Insert.svg.png"
width="2560"
height="269"
srcset="https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_802.1Q_Insert.svg_hu4586e112ae8714a0abaf15749097ce2b_70372_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/802%E5%92%8C%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%A7%88/2560px-Ethernet_802.1Q_Insert.svg_hu4586e112ae8714a0abaf15749097ce2b_70372_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="802.1Q Tagging"
class="gallery-image"
data-flex-grow="951"
data-flex-basis="2284px"
>&lt;/p>
&lt;p>802.1Q Header 中 TPID (Tag Protocol Identifier)占用原 Ether Type 位置，取值 &lt;code>0x8100&lt;/code>。正好起到和 Ether Type 一样的作用。&lt;/p>
&lt;p>随后的3比特表示 &lt;a class="link" href="https://en.wikipedia.org/wiki/Class_of_service" target="_blank" rel="noopener"
>802.1p class of service&lt;/a> ，理解为优先级。下一比特是 Drop Eligible Indicator，表示拥塞时是否允许丢弃包。这4个比特位都用于拥塞控制。&lt;/p>
&lt;p>剩下12个比特位表示 VID，或者说 VLAN ID，用于区分 VLAN。&lt;/p>
&lt;p>后面的 Ether Type 字段和 Payload 就和 802.3 Ethernet 没什么区别了，可以解析为 Ethernet II 也可以解析为 802.3 Ethernet。&lt;/p>
&lt;h3 id="hub-集线器">Hub 集线器&lt;/h3>
&lt;p>集线器就像是把网线给串联起来，集线器上一台设备发出的以太网帧，所有设备都会收到。&lt;/p>
&lt;p>就是这种设备，靠 802.3 CSMA/CD 也能支撑基本的数据链路层通信。&lt;/p>
&lt;h3 id="l2-交换机">L2 交换机&lt;/h3>
&lt;p>L2 交换机是在以太网帧这一层的交换，按照以太网帧头部中的控制字段来决定把帧转发到哪个网口。为了实现这个目的，L2交换机还得能“学习”到每个网口连接的设备 MAC 地址是什么，以便做转发动作。&lt;/p>
&lt;p>L2 交换机和路由器的最大区别在于交换机是根据 MAC 地址做的转发，计算机在以 IP 协议访问局域网设备时，会通过 ARP 协议获取目的 MAC 地址，然后直接构造以太网帧发送。交换机可以直接把以太网帧送给对应的设备而无需经过路由器解析 IP 报文再封包以太网帧。可以说交换机性能决定了局域网传输的速度。&lt;/p>
&lt;p>这篇文章介绍了交换机是怎么学习 MAC 地址的 &lt;a class="link" href="https://www.computernetworkingnotes.com/ccna-study-guide/how-switch-learns-the-mac-addresses-explained.html" target="_blank" rel="noopener"
>How Switch learns the MAC addresses Explained&lt;/a> 。&lt;/p>
&lt;p>有些高级点的交换机还支持 VLAN 虚拟局域网，允许把交换机上几十个口再划分成更小的局域网以实现网络隔离。同时 VLAN 技术也让一张网卡一条网线接入多个局域网成为可能。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>一千来个字憋一两周，这工作要命，没时间看书没时间学习。&lt;/p></description></item></channel></rss>