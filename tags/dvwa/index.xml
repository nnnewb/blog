<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DVWA on weakptr's 笔记</title><link>https://nnnewb.github.io/blog/tags/dvwa/</link><description>Recent content in DVWA on weakptr's 笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 21 Apr 2022 16:41:00 +0800</lastBuildDate><atom:link href="https://nnnewb.github.io/blog/tags/dvwa/index.xml" rel="self" type="application/rss+xml"/><item><title>DVWA上手记录-初体验</title><link>https://nnnewb.github.io/blog/p/get-start-dvwa-01/</link><pubDate>Thu, 21 Apr 2022 16:41:00 +0800</pubDate><guid>https://nnnewb.github.io/blog/p/get-start-dvwa-01/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>DVWA 全程 &lt;em>Damn Vunerable Web Application&lt;/em> ，是一个开源的基于 PHP+MariaDB 开发的漏洞靶场。&lt;/p>
&lt;p>官方文档推荐XAMPP部署，但个人比较爱docker，先拿 README 里写的 vulnerables/web-dvwa 玩玩看。&lt;/p>
&lt;blockquote>
&lt;p>vulnerable/web-dvwa 这个容器最后一次更新已经是 2015 年了，作为纯萌新姑且先把玩看看，安全领域攻防发展这么快，我寻思这个版本是有点和时代脱节了。&lt;/p>
&lt;/blockquote>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>启动个虚拟机，debian bullseye，装好 docker 再配好 zsh 之类的工具。tmux 开个分窗然后一键跑起来：&lt;code>docker run --rm -it -p 80:80 vulerables/web-dvwa&lt;/code>。&lt;/p>
&lt;p>配置下虚拟机端口转发，把 SSH 和 HTTP 转发到宿主机：&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945.png"
width="1138"
height="495"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945_hu970c5e0efec5234184e9b858ab391e20_35007_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421144541945_hu970c5e0efec5234184e9b858ab391e20_35007_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421144541945"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="551px"
>&lt;/p>
&lt;p>最后在浏览器打开 &lt;code>http://localhost:8080/&lt;/code> 就能看到登录页了。在创建数据库前随便输入什么用户名密码都能进去，简单读一下&lt;code>/setup.php&lt;/code> 上写的内容，点一下 &lt;code>Create/Reset database&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045.png"
width="900"
height="906"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045_hu5af901d3d9c5765cd7c0c540ee8e7236_94544_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151455045_hu5af901d3d9c5765cd7c0c540ee8e7236_94544_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421151455045"
class="gallery-image"
data-flex-grow="99"
data-flex-basis="238px"
>&lt;/p>
&lt;p>等跳转回登录页，就算是完成了。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317.png"
width="424"
height="437"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317_hu59920bdd9bcb7bdd2dfa79f904f3464d_19156_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421151523317_hu59920bdd9bcb7bdd2dfa79f904f3464d_19156_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421151523317"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="232px"
>&lt;/p>
&lt;p>默认账号密码是 &lt;code>admin&lt;/code> 和 &lt;code>password&lt;/code> 。&lt;/p>
&lt;h2 id="信息收集">信息收集&lt;/h2>
&lt;h3 id="介绍">介绍&lt;/h3>
&lt;p>在侧边栏可以看到可用的模块。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120.png"
width="203"
height="616"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120_hu9894033129233fb1163094cac0397a05_15927_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421152621120_hu9894033129233fb1163094cac0397a05_15927_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421152621120"
class="gallery-image"
data-flex-grow="32"
data-flex-basis="79px"
>&lt;/p>
&lt;p>具体内容稍后再看，先把主页上的信息读一读。&lt;/p>
&lt;p>介绍中这样说：&lt;/p>
&lt;blockquote>
&lt;p>It is up to the user how they approach DVWA. Either by working through every module at a fixed level, or selecting any module and working up to reach the highest level they can before moving onto the next one. There is not a fixed object to complete a module; however users should feel that they have successfully exploited the system as best as they possible could by using that particular vulnerability.&lt;/p>
&lt;/blockquote>
&lt;p>用户自己决定怎么玩这个靶场，没有固定目标。可以先把一个模块从低难度到高难度全打通再继续下一个，也可以低难度把所有模块打通再提高难度再来一轮。&lt;/p>
&lt;blockquote>
&lt;p>Please note, there are &lt;em>both documented and undocumented vulnerability&lt;/em> with this software. This is intentional. You are encouraged to try and discover as many issues as possible.&lt;/p>
&lt;/blockquote>
&lt;p>并且还提到有意存在未文档化的漏洞，也就是攻破一个模块的方法并不局限于帮助文档里的方法，完全可能自己挖掘出别的问题。&lt;/p>
&lt;blockquote>
&lt;p>DVWA also includes a Web Application Firewall (WAF), PHPIDS, which can be enabled at any stage to further increase the difficulty.&lt;/p>
&lt;/blockquote>
&lt;p>DVWA 还包含了 WAF，可以自己开启或者关闭。开启等于是给自己提高了难度。&lt;/p>
&lt;h3 id="php-info">PHP info&lt;/h3>
&lt;p>侧边栏下方有个 PHP Info 链接，点开看一眼，就是个经典的 phpinfo 页。&lt;/p>
&lt;p>php 版本是 7.0.30-0+deb9u1，应该是 debian 打包的版本。&lt;/p>
&lt;p>Apache 版本 2.4.25，Debian 打包的版本。&lt;/p>
&lt;p>其他半懂不懂的全部略，就当没看见。&lt;/p>
&lt;p>之后有需要再来看。&lt;/p>
&lt;h3 id="关于">关于&lt;/h3>
&lt;p>在 About 页里提到发行时间是 2015-10-08，确实很老了。&lt;/p>
&lt;p>里面还有些相关链接和资源、文档，把 dvwa 的官网主页加入收藏夹后剩下的内容暂且不管。&lt;/p>
&lt;h3 id="dvwa-security">DVWA security&lt;/h3>
&lt;p>安全配置页，显示当前的 DVWA 运行在哪个安全级别（就是前文介绍中提到的 &lt;strong>难度&lt;/strong>）。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935.png"
width="904"
height="879"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935_hu1e8ee6e0e7ee30ed3f4d3caa6e5f5d59_111848_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421154901935_hu1e8ee6e0e7ee30ed3f4d3caa6e5f5d59_111848_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421154901935"
class="gallery-image"
data-flex-grow="102"
data-flex-basis="246px"
>&lt;/p>
&lt;p>注意到页面这几个位置都有标注当前安全配置，在这个页面可以修改安全级别和 WAF （图中 PHPIDS）的开启状态。&lt;/p>
&lt;h3 id="setupreset-db">Setup/Reset DB&lt;/h3>
&lt;p>这个页面就是最初启动 DVWA 的时候初始化数据库的页面，可以在这个页面里重置数据库，也能在这个页面看到一些自检信息。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454.png"
width="896"
height="918"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454_hu8695d1d6b0b3980f08b0158e40b7c78e_108856_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155109454_hu8695d1d6b0b3980f08b0158e40b7c78e_108856_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421155109454"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="234px"
>&lt;/p>
&lt;p>&lt;code>allow_url_include&lt;/code>暂时不管，等玩到那个模块的时候再看情况。&lt;/p>
&lt;p>&lt;code>reCAPTCHA key&lt;/code> 是验证码模块需要的，等玩到的时候再找下怎么配。&lt;/p>
&lt;p>最下面的 &lt;code>Create / Reset Database&lt;/code> 的按钮就是重置数据库了。对于用 &lt;code>docker --rm&lt;/code> 启动的我来说直接重启下容器清理地更干净，预计不会怎么用到这个功能。&lt;/p>
&lt;h3 id="模块速览">模块速览&lt;/h3>
&lt;h4 id="brute-force">Brute Force&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710.png"
width="909"
height="340"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710_hue7b4ec4cb7abd897183a8792139fe6c5_35249_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421155923710_hue7b4ec4cb7abd897183a8792139fe6c5_35249_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421155923710"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="641px"
>&lt;/p>
&lt;p>一般说 Brute Force 的时候就是暴力破解了，”跑字典“啊什么的。遍历可能存在的的弱密码。&lt;/p>
&lt;h4 id="command-injection">Command Injection&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139.png"
width="896"
height="266"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139_hu25562b7f964fec8daa9cf0338b8b0c6e_31856_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160341139_hu25562b7f964fec8daa9cf0338b8b0c6e_31856_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160341139"
class="gallery-image"
data-flex-grow="336"
data-flex-basis="808px"
>&lt;/p>
&lt;p>命令注入，相当经典的一个 ping，应该看一眼就知道指的什么了。&lt;/p>
&lt;h4 id="csrf">CSRF&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952.png"
width="905"
height="363"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952_hu5f2fbd6d82dca55f3f85cc4115c97c39_41581_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160436952_hu5f2fbd6d82dca55f3f85cc4115c97c39_41581_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160436952"
class="gallery-image"
data-flex-grow="249"
data-flex-basis="598px"
>&lt;/p>
&lt;p>跨站请求伪造，有点摸不着头脑。emm，难道是说这个页面没有考虑 csrf （可能还有cors？），所以能在别的站直接发个 xhr 实现修改密码？&lt;/p>
&lt;h4 id="file-inclusion">File Inclusion&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753.png"
width="912"
height="321"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753_hua44789798500bf09a6d2ea7ea0a9e538_27839_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160749753_hua44789798500bf09a6d2ea7ea0a9e538_27839_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160749753"
class="gallery-image"
data-flex-grow="284"
data-flex-basis="681px"
>&lt;/p>
&lt;p>没思路。虽然看过 p 大博客信手拈来的文件包含利用，但对着这个页面暂时还是想不出要干啥。&lt;/p>
&lt;blockquote>
&lt;p>PS：刚发现地址栏有点意思&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316.png"
width="337"
height="33"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316_hua5ff4026705173dea9ff93cd0ab7564d_2751_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421160947316_hua5ff4026705173dea9ff93cd0ab7564d_2751_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421160947316"
class="gallery-image"
data-flex-grow="1021"
data-flex-basis="2450px"
>&lt;/p>
&lt;/blockquote>
&lt;h4 id="file-upload">File Upload&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745.png"
width="895"
height="294"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745_hu764096419eb208ee58c131f60e4b10b0_30395_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161006745_hu764096419eb208ee58c131f60e4b10b0_30395_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161006745"
class="gallery-image"
data-flex-grow="304"
data-flex-basis="730px"
>&lt;/p>
&lt;p>可能是任意文件上传相关的洞？&lt;/p>
&lt;h4 id="insecure-captcha">Insecure CAPTCHA&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749.png"
width="911"
height="306"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749_hu0f16c8e6b310cccc5ccf0aaf8819ad20_36210_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161050749_hu0f16c8e6b310cccc5ccf0aaf8819ad20_36210_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161050749"
class="gallery-image"
data-flex-grow="297"
data-flex-basis="714px"
>&lt;/p>
&lt;p>看标题还是有点意思的，不安全的验证码指的是可以绕过验证码么？&lt;/p>
&lt;h4 id="sql-injection">SQL Injection&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372.png"
width="909"
height="341"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372_hu5bf7f52e9c2b4302389ebec44db8f820_37409_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161127372_hu5bf7f52e9c2b4302389ebec44db8f820_37409_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161127372"
class="gallery-image"
data-flex-grow="266"
data-flex-basis="639px"
>&lt;/p>
&lt;p>经典SQL注入。&lt;/p>
&lt;h4 id="sql-injection-blind">SQL Injection (Blind)&lt;/h4>
&lt;p>和上面一样，不过是盲注。&lt;/p>
&lt;h4 id="weak-session-ids">Weak Session IDs&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944.png"
width="912"
height="361"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944_hu0fdf17129a2a99d77936b492c1d40748_32668_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161207944_hu0fdf17129a2a99d77936b492c1d40748_32668_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161207944"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="606px"
>&lt;/p>
&lt;p>对 PHP 还不够了解，不知道 &lt;code>Weak Session IDs&lt;/code> 指的是什么。可能和 Cookie 里的 &lt;code>PHPSESSID&lt;/code> 有关系？&lt;/p>
&lt;h4 id="xss-dom">XSS (DOM)&lt;/h4>
&lt;p>见下。&lt;/p>
&lt;h4 id="xssreflected">XSS(Reflected)&lt;/h4>
&lt;p>见下。&lt;/p>
&lt;h4 id="xssstored">XSS(Stored)&lt;/h4>
&lt;p>三类 XSS ，页面分别如下。&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348.png"
width="680"
height="276"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348_hu1b4996709ef6808dda534c7704190b50_28036_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161441348_hu1b4996709ef6808dda534c7704190b50_28036_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(DOM)"
class="gallery-image"
data-flex-grow="246"
data-flex-basis="591px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360.png"
width="685"
height="267"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360_hu0bb9744a0e435d0dcc709c36a8622d4a_28074_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161450360_hu0bb9744a0e435d0dcc709c36a8622d4a_28074_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(reflected)"
class="gallery-image"
data-flex-grow="256"
data-flex-basis="615px"
>&lt;/p>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946.png"
width="679"
height="393"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946_hubc91e88711d10c78d8195fedb9cf37e2_33015_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161457946_hubc91e88711d10c78d8195fedb9cf37e2_33015_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="XSS(Stored)"
class="gallery-image"
data-flex-grow="172"
data-flex-basis="414px"
>&lt;/p>
&lt;p>除了 DOM 型看页面没有思路，另外两个看注入点还是清楚的。&lt;/p>
&lt;h4 id="csp-bypass">CSP Bypass&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897.png"
width="701"
height="290"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897_hu941ee16f0a67ff004f04e4e50818b863_27413_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161626897_hu941ee16f0a67ff004f04e4e50818b863_27413_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161626897"
class="gallery-image"
data-flex-grow="241"
data-flex-basis="580px"
>&lt;/p>
&lt;p>不了解 CSP，没头绪。&lt;/p>
&lt;h4 id="javascript">JavaScript&lt;/h4>
&lt;p>&lt;img src="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960.png"
width="679"
height="280"
srcset="https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960_huc87a5a196e2cb78c1789a7565c0274b5_25147_480x0_resize_box_3.png 480w, https://nnnewb.github.io/blog/blog/p/get-start-dvwa-01/image-20220421161759960_huc87a5a196e2cb78c1789a7565c0274b5_25147_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20220421161759960"
class="gallery-image"
data-flex-grow="242"
data-flex-basis="582px"
>&lt;/p>
&lt;p>有点摸不着头脑，指的是在前端用 JS 检查表单不安全？&lt;/p>
&lt;p>看链接里的 &lt;code>es6-proxies-in-depth&lt;/code> 感觉是个绕过前端保护的题。&lt;/p>
&lt;h2 id="初体验总结">初体验总结&lt;/h2>
&lt;p>姑且算是把 DVWA 这个靶场在手里把玩了一下，初步看了看怎么玩、有什么可玩。&lt;/p>
&lt;p>接下来考虑是一题一题难度从低到高慢慢刷过去，实在干不过再跳。&lt;/p></description></item></channel></rss>